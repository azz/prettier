var markdown = (function (util,path) {
util = 'default' in util ? util['default'] : util;
path = 'default' in path ? path['default'] : path;

var global$1 = typeof global !== "undefined" ? global :
            typeof self !== "undefined" ? self :
            typeof window !== "undefined" ? window : {};

// shim for using process in browser
// based off https://github.com/defunctzombie/node-process/blob/master/browser.js

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
var cachedSetTimeout = defaultSetTimout;
var cachedClearTimeout = defaultClearTimeout;
if (typeof global$1.setTimeout === 'function') {
    cachedSetTimeout = setTimeout;
}
if (typeof global$1.clearTimeout === 'function') {
    cachedClearTimeout = clearTimeout;
}

function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}
function nextTick(fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
}
// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
var title = 'browser';
var platform = 'browser';
var browser = true;
var env = {};
var argv = [];
var version = ''; // empty string to avoid regexp issues
var versions = {};
var release = {};
var config = {};

function noop$1() {}

var on = noop$1;
var addListener = noop$1;
var once = noop$1;
var off = noop$1;
var removeListener = noop$1;
var removeAllListeners = noop$1;
var emit = noop$1;

function binding(name) {
    throw new Error('process.binding is not supported');
}

function cwd () { return '/' }
function chdir (dir) {
    throw new Error('process.chdir is not supported');
}
function umask() { return 0; }

// from https://github.com/kumavis/browser-process-hrtime/blob/master/index.js
var performance = global$1.performance || {};
var performanceNow =
  performance.now        ||
  performance.mozNow     ||
  performance.msNow      ||
  performance.oNow       ||
  performance.webkitNow  ||
  function(){ return (new Date()).getTime() };

// generate timestamp or delta
// see http://nodejs.org/api/process.html#process_process_hrtime
function hrtime(previousTimestamp){
  var clocktime = performanceNow.call(performance)*1e-3;
  var seconds = Math.floor(clocktime);
  var nanoseconds = Math.floor((clocktime%1)*1e9);
  if (previousTimestamp) {
    seconds = seconds - previousTimestamp[0];
    nanoseconds = nanoseconds - previousTimestamp[1];
    if (nanoseconds<0) {
      seconds--;
      nanoseconds += 1e9;
    }
  }
  return [seconds,nanoseconds]
}

var startTime = new Date();
function uptime() {
  var currentTime = new Date();
  var dif = currentTime - startTime;
  return dif / 1000;
}

var process = {
  nextTick: nextTick,
  title: title,
  browser: browser,
  env: env,
  argv: argv,
  version: version,
  versions: versions,
  on: on,
  addListener: addListener,
  once: once,
  off: off,
  removeListener: removeListener,
  removeAllListeners: removeAllListeners,
  emit: emit,
  binding: binding,
  cwd: cwd,
  chdir: chdir,
  umask: umask,
  hrtime: hrtime,
  platform: platform,
  release: release,
  config: config,
  uptime: uptime
};

function _interopDefault$1(r){return r&&"object"==typeof r&&"default"in r?r.default:r}function extend(){for(var r={},e=0;e<arguments.length;e++){var t=arguments[e];for(var a in t)hasOwnProperty.call(t,a)&&(r[a]=t[a]);}return r}function createCommonjsModule(r,e){return e={exports:{}},r(e,e.exports),e.exports}function create(r){function e(e){return e&&(e=formatter.apply(null,arguments)),new r(e)}return e.displayName=r.displayName||r.name,e}function matters$1(r){var e,t=[],a=-1;"string"!=typeof r&&"length"in r||(r=[r]),e=r.length;for(;++a<e;)t[a]=matter(r[a]);return t}function matter(r){var e=r;if("string"==typeof e){if(!own.call(markers,e))throw fault("Missing matter definition for `%s`",e);e={type:e,marker:markers[e]};}else if("object"!=typeof e)throw fault("Expected matter to be an object, not `%j`",e);if(!own.call(e,"type"))throw fault("Missing `type` in matter `%j`",e);if(!own.call(e,"marker"))throw fault("Missing `marker` in matter `%j`",e);return e}function create$1(r){function e(e,t,i){var s,c,l,u,p,d;if(t.charAt(0)===a&&t.charAt(1)===a&&t.charAt(2)===a&&t.charAt(3)===n)for(s=o+n,c="",d="",l=3,u=t.length;++l<u;){if((p=t.charAt(l))===a&&(d||!c)&&t.charAt(l+1)===a&&t.charAt(l+2)===a)return!!i||(s+=d+o,e(s)({type:r.type,value:c}));p===n?d+=p:(s+=d+p,c+=d+p,d="");}}var t=r.type+"FrontMatter",a=r.marker,o=a+a+a,n="\n";return e.displayName=t,e.onlyAtStart=!0,[t,e]}function create$2(r){function e(r){return o+(r.value?"\n"+r.value:"")+"\n"+o}var t=r.type,a=r.marker,o=a+a+a;return e.displayName=t+"FrontMatter",[t,e]}function frontmatter(r){var e=this.Parser,t=this.Compiler,a=matters(r||["yaml"]);isRemarkParser(e)&&attachParser(e,a),isRemarkCompiler(t)&&attachCompiler(t,a);}function attachParser(r,e){var t,a=r.prototype,o=wrap(parse$1,e),n=[];for(t in o)n.push(t);a.blockMethods=n.concat(a.blockMethods),a.blockTokenizers=xtend(o,a.blockTokenizers);}function attachCompiler(r,e){var t=r.prototype;t.visitors=xtend(wrap(compile,e),t.visitors);}function wrap(r,e){for(var t,a={},o=e.length,n=-1;++n<o;)a[(t=r(e[n]))[0]]=t[1];return a}function isRemarkParser(r){return Boolean(r&&r.prototype&&r.prototype.blockTokenizers)}function isRemarkCompiler(r){return Boolean(r&&r.prototype&&r.prototype.visitors)}function unherit$1(r){function e(e){return r.apply(this,e)}function t(){return this instanceof t?r.apply(this,arguments):new e(arguments)}var a,o,n;inherits(t,r),inherits(e,t),a=t.prototype;for(o in a)(n=a[o])&&"object"==typeof n&&(a[o]="concat"in n?n.concat():xtend$2(n));return t}function factory(r,e,t){return function(){var a=t||this,o=a[r];return a[r]=!e,function(){a[r]=o;}}}function factory$1(r){var e=indices(String(r));return{toPosition:offsetToPositionFactory(e),toOffset:positionToOffsetFactory(e)}}function offsetToPositionFactory(r){function e(e){var t=-1,a=r.length;if(e<0)return{};for(;++t<a;)if(r[t]>e)return{line:t+1,column:e-(r[t-1]||0)+1,offset:e};return{}}return e}function positionToOffsetFactory(r){function e(e){var t=e&&e.line,a=e&&e.column;return!isNaN(t)&&!isNaN(a)&&t-1 in r?(r[t-2]||0)+a-1||0:-1}return e}function indices(r){for(var e=[],t=r.indexOf("\n");-1!==t;)e.push(t+1),t=r.indexOf("\n",t+1);return e.push(r.length+1),e}function factory$2(r,e){function t(t){for(var a,o=0,n=t.indexOf("\\"),i=r[e],s=[];-1!==n;)s.push(t.slice(o,n)),o=n+1,(a=t.charAt(o))&&-1!==i.indexOf(a)||s.push("\\"),n=t.indexOf("\\",o);return s.push(t.slice(o)),s.join("")}return t}function decimal$1(r){var e="string"==typeof r?r.charCodeAt(0):r;return e>=48&&e<=57}function hexadecimal$1(r){var e="string"==typeof r?r.charCodeAt(0):r;return e>=97&&e<=102||e>=65&&e<=70||e>=48&&e<=57}function alphabetical$1(r){var e="string"==typeof r?r.charCodeAt(0):r;return e>=97&&e<=122||e>=65&&e<=90}function alphanumerical$1(r){return alphabetical(r)||decimal$2(r)}function wrapper(r,e){var t,a,o={};e||(e={});for(a in defaults)t=e[a],o[a]=null===t||void 0===t?defaults[a]:t;return(o.position.indent||o.position.start)&&(o.indent=o.position.indent||[],o.position=o.position.start),parse$5(r,o)}function parse$5(r,e){function t(){return{line:F,column:B,offset:O+(k.offset||0)}}function a(r,e){var a=t();a.column+=e,a.offset+=e,S.call(x,MESSAGES[r],a,r);}function o(e){return r.charAt(e)}function n(){P&&(U.push(P),y&&y.call(T,P,{start:C,end:t()}),P=EMPTY);}var i,s,c,l,u,p,d,f,g,h,m,D,E,b,C,A,w,q,v=e.additional,$=e.nonTerminated,y=e.text,L=e.reference,S=e.warning,T=e.textContext,N=e.referenceContext,x=e.warningContext,k=e.position,_=e.indent||[],R=r.length,O=0,I=-1,B=k.column||1,F=k.line||1,P=EMPTY,U=[];for(C=t(),d=S?a:noop,O--,R++;++O<R;)if(l===NEWLINE&&(B=_[I]||1),(l=o(O))!==AMPERSAND)l===NEWLINE&&(F++,I++,B=0),l?(P+=l,B++):n();else{if((p=o(O+1))===TAB||p===NEWLINE||p===FORM_FEED||p===SPACE||p===LESS_THAN||p===AMPERSAND||p===EMPTY||v&&p===v){P+=l,B++;continue}for(m=D=O+1,q=D,p!==OCTOTHORP?E=NAMED:(p=o(q=++m))===X_LOWER||p===X_UPPER?(E=HEXADECIMAL,q=++m):E=DECIMAL,i=EMPTY,h=EMPTY,c=EMPTY,b=TESTS[E],q--;++q<R&&(p=o(q),b(p));)c+=p,E===NAMED&&own$1.call(legacy,c)&&(i=c,h=legacy[c]);(s=o(q)===SEMICOLON)&&(q++,E===NAMED&&own$1.call(characterEntities,c)&&(i=c,h=characterEntities[c])),w=1+q-D,(s||$)&&(c?E===NAMED?(s&&!h?d(NAMED_UNKNOWN,1):(i!==c&&(w=1+(q=m+i.length)-m,s=!1),s||(f=i?NAMED_NOT_TERMINATED:NAMED_EMPTY,e.attribute?(p=o(q))===EQUAL?(d(f,w),h=null):alphanumerical(p)?h=null:d(f,w):d(f,w))),u=h):(s||d(NUMERIC_NOT_TERMINATED,w),isProhibited(u=parseInt(c,BASE[E]))?(d(NUMERIC_PROHIBITED,w),u=REPLACEMENT):u in invalid?(d(NUMERIC_DISALLOWED,w),u=invalid[u]):(g=EMPTY,isWarning(u)&&d(NUMERIC_DISALLOWED,w),u>65535&&(g+=fromCharCode((u-=65536)>>>10|55296),u=56320|1023&u),u=g+fromCharCode(u))):E!==NAMED&&d(NUMERIC_EMPTY,w)),u?(n(),C=t(),O=q-1,B+=q-D+1,U.push(u),(A=t()).offset++,L&&L.call(N,u,{start:C,end:A},r.slice(D-1,q)),C=A):(c=r.slice(D-1,q),P+=c,B+=c.length,O=q-1);}return U.join(EMPTY)}function isProhibited(r){return r>=55296&&r<=57343||r>1114111}function isWarning(r){return r>=1&&r<=8||11===r||r>=13&&r<=31||r>=127&&r<=159||r>=64976&&r<=65007||65535==(65535&r)||65534==(65535&r)}function factory$3(r){function e(e){for(var t=r.offset,a=e.line,o=[];++a&&a in t;)o.push((t[a]||0)+1);return{start:e,indent:o}}function t(e,t,a){3!==a&&r.file.message(e,t);}function a(a,o,n){entities(a,{position:e(o),warning:t,text:n,reference:n,textContext:r,referenceContext:r});}function o(r,a){return entities(r,{position:e(a),warning:t})}return a.raw=o,a}function mergeable(r){var e,t;return"text"!==r.type||!r.position||(e=r.position.start,t=r.position.end,e.line!==t.line||t.column-e.column===r.value.length)}function mergeText(r,e){return r.value+=e.value,r}function mergeBlockquote(r,e){return this.options.commonmark?e:(r.children=r.children.concat(e.children),r)}function factory$4(r){function e(e,t){function a(r){for(var e=-1,t=r.indexOf("\n");-1!==t;)w++,e=t,t=r.indexOf("\n",t+1);-1===e?q+=r.length:q=r.length-e,w in E&&(-1!==e?q+=E[w]:q<=E[w]&&(q=E[w]+1));}function o(){var r=[],e=w+1;return function(){for(var t=w+1;e<t;)r.push((E[e]||0)+1),e++;return r}}function n(){var r={line:w,column:q};return r.offset=D.toOffset(r),r}function i(r){this.start=r,this.end=n();}function s(r){e.substring(0,r.length)!==r&&D.file.fail(new Error("Incorrectly eaten value: please report this warning on http://git.io/vg5Ft"),n());}function c(){function r(r,t){var a=r.position,o=a?a.start:e,n=[],s=a&&a.end.line,c=e.line;if(r.position=new i(o),a&&t&&a.indent){if(n=a.indent,s<c){for(;++s<c;)n.push((E[s]||0)+1);n.push(e.column);}t=n.concat(t);}return r.position.indent=t||[],r}var e=n();return r}function l(r,e){var t=e?e.children:b,a=t[t.length-1];return a&&r.type===a.type&&r.type in MERGEABLE_NODES&&mergeable(a)&&mergeable(r)&&(r=MERGEABLE_NODES[r.type].call(D,a,r)),r!==a&&t.push(r),D.atStart&&0!==b.length&&D.exitStart(),r}function u(r){function t(r,e){return d(l(d(r),e),p)}function i(){var a=t.apply(null,arguments);return w=f.line,q=f.column,e=r+e,a}function u(){var t=d({});return w=f.line,q=f.column,e=r+e,t.position}var p=o(),d=c(),f=n();return s(r),t.reset=i,i.test=u,t.test=u,e=e.substring(r.length),a(r),p=p(),t}var p,d,f,g,h,m,D=this,E=D.offset,b=[],C=D[r+"Methods"],A=D[r+"Tokenizers"],w=t.line,q=t.column;if(!e)return b;for(u.now=n,u.file=D.file,a("");e;){for(p=-1,d=C.length,h=!1;++p<d&&(g=C[p],!(f=A[g])||f.onlyAtStart&&!D.atStart||f.notInList&&D.inList||f.notInBlock&&D.inBlock||f.notInLink&&D.inLink||(m=e.length,f.apply(D,[u,e]),!(h=m!==e.length))););h||D.file.fail(new Error("Infinite loop"),u.now());}return D.eof=n(),b}return e}function escapes$1(r){var e=r||{};return e.commonmark?commonmark:e.gfm?gfm:defaults$2}function setOptions(r){var e,t,a=this,o=a.options;if(null==r)r={};else{if("object"!=typeof r)throw new Error("Invalid value `"+r+"` for setting `options`");r=xtend$4(r);}for(e in defaults$1){if(null==(t=r[e])&&(t=o[e]),"blocks"!==e&&"boolean"!=typeof t||"blocks"===e&&"object"!=typeof t)throw new Error("Invalid value `"+t+"` for setting `options."+e+"`");r[e]=t;}return a.options=r,a.escape=escapes(r),a}function visit$1(r,e,t,a){function o(r,a,o){var i;return a=a||(o?0:null),e&&r.type!==e||(i=t(r,a,o||null)),r.children&&!1!==i?n(r.children,r):i}function n(r,e){for(var t,n=a?-1:1,i=r.length,s=(a?i:-1)+n;s>-1&&s<i;){if((t=r[s])&&!1===o(t,s,e))return!1;s+=n;}return!0}"function"==typeof e&&(a=t,t=e,e=null),o(r);}function removePosition$1(r,e){return visit(r,e?hard:soft),r}function hard(r){delete r.position;}function soft(r){r.position=void 0;}function parse$6(){var r,e=this,t=String(e.file),a={line:1,column:1,offset:0},o=xtend$5(a);return 65279===(t=t.replace(EXPRESSION_LINE_BREAKS,C_NEWLINE)).charCodeAt(0)&&(t=t.slice(1),o.column++,o.offset++),r={type:"root",children:e.tokenizeBlock(t,o),position:{start:a,end:e.eof||xtend$5(a)}},e.options.position||removePosition(r,!0),r}function whitespace$1(r){return re$1.test("number"==typeof r?fromCode(r):r.charAt(0))}function newline(r,e,t){var a,o,n,i,s=e.charAt(0);if("\n"===s){if(t)return!0;for(i=1,a=e.length,o=s,n="";i<a&&(s=e.charAt(i),whitespace(s));)n+=s,"\n"===s&&(o+=n,n=""),i++;r(o);}}function repeat$1(r,e){if("string"!=typeof r)throw new TypeError("expected a string");if(1===e)return r;if(2===e)return r+r;var t=r.length*e;if(cache!==r||void 0===cache)cache=r,res="";else if(res.length>=t)return res.substr(0,t);for(;t>res.length&&e>1;)1&e&&(res+=r),e>>=1,r+=r;return res+=r,res=res.substr(0,t)}function trimTrailingLines(r){for(var e=String(r),t=e.length;e.charAt(--t)===line;);return e.slice(0,t+1)}function indentedCode(r,e,t){for(var a,o,n,i=-1,s=e.length,c="",l="",u="",p="";++i<s;)if(a=e.charAt(i),n)if(n=!1,c+=u,l+=p,u="",p="",a===C_NEWLINE$1)u=a,p=a;else for(c+=a,l+=a;++i<s;){if(!(a=e.charAt(i))||a===C_NEWLINE$1){p=a,u=a;break}c+=a,l+=a;}else if(a===C_SPACE&&e.charAt(i+1)===a&&e.charAt(i+2)===a&&e.charAt(i+3)===a)u+=CODE_INDENT,i+=3,n=!0;else if(a===C_TAB)u+=a,n=!0;else{for(o="";a===C_TAB||a===C_SPACE;)o+=a,a=e.charAt(++i);if(a!==C_NEWLINE$1)break;u+=o+a,p+=a;}if(l)return!!t||r(c)({type:"code",lang:null,value:trim(l)})}function fencedCode(r,e,t){var a,o,n,i,s,c,l,u,p,d,f,g=this,h=g.options,m=e.length+1,D=0,E="";if(h.gfm){for(;D<m&&((n=e.charAt(D))===C_SPACE$1||n===C_TAB$1);)E+=n,D++;if(d=D,(n=e.charAt(D))===C_TILDE||n===C_TICK){for(D++,o=n,a=1,E+=n;D<m&&(n=e.charAt(D))===o;)E+=n,a++,D++;if(!(a<MIN_FENCE_COUNT)){for(;D<m&&((n=e.charAt(D))===C_SPACE$1||n===C_TAB$1);)E+=n,D++;for(i="",s="";D<m&&(n=e.charAt(D))!==C_NEWLINE$2&&n!==C_TILDE&&n!==C_TICK;)n===C_SPACE$1||n===C_TAB$1?s+=n:(i+=s+n,s=""),D++;if(!(n=e.charAt(D))||n===C_NEWLINE$2){if(t)return!0;for((f=r.now()).column+=E.length,f.offset+=E.length,E+=i,i=g.decode.raw(g.unescape(i),f),s&&(E+=s),s="",u="",p="",c="",l="";D<m;)if(n=e.charAt(D),c+=u,l+=p,u="",p="",n===C_NEWLINE$2){for(c?(u+=n,p+=n):E+=n,s="",D++;D<m&&(n=e.charAt(D))===C_SPACE$1;)s+=n,D++;if(u+=s,p+=s.slice(d),!(s.length>=CODE_INDENT_COUNT$1)){for(s="";D<m&&(n=e.charAt(D))===o;)s+=n,D++;if(u+=s,p+=s,!(s.length<a)){for(s="";D<m&&((n=e.charAt(D))===C_SPACE$1||n===C_TAB$1);)u+=n,p+=n,D++;if(!n||n===C_NEWLINE$2)break}}}else c+=n,p+=n,D++;return E+=c+u,r(E)({type:"code",lang:i||null,value:trim$1(l)})}}}}}function interrupt$1(r,e,t,a){for(var o,n,i,s,c,l,u=["pedantic","commonmark"],p=u.length,d=r.length,f=-1;++f<d;){for(n=(o=r[f])[1]||{},i=o[0],s=-1,l=!1;++s<p;)if(c=u[s],void 0!==n[c]&&n[c]!==t.options[c]){l=!0;break}if(!l&&e[i].apply(t,a))return!0}return!1}function blockquote(r,e,t){for(var a,o,n,i,s,c,l,u,p,d=this,f=d.offset,g=d.blockTokenizers,h=d.interruptBlockquote,m=r.now(),D=m.line,E=e.length,b=[],C=[],A=[],w=0;w<E&&((o=e.charAt(w))===C_SPACE$2||o===C_TAB$2);)w++;if(e.charAt(w)===C_GT){if(t)return!0;for(w=0;w<E;){for(l=w,u=!1,-1===(i=e.indexOf(C_NEWLINE$3,w))&&(i=E);w<E&&((o=e.charAt(w))===C_SPACE$2||o===C_TAB$2);)w++;if(e.charAt(w)===C_GT?(w++,u=!0,e.charAt(w)===C_SPACE$2&&w++):w=l,s=e.slice(w,i),!u&&!trim$2(s)){w=l;break}if(!u&&(n=e.slice(w),interrupt(h,g,d,[r,n,!0])))break;c=l===w?s:e.slice(l,i),A.push(w-l),b.push(c),C.push(s),w=i+1;}for(w=-1,E=A.length,a=r(b.join(C_NEWLINE$3));++w<E;)f[D]=(f[D]||0)+A[w],D++;return p=d.enterBlock(),C=d.tokenizeBlock(C.join(C_NEWLINE$3),m),p(),a({type:"blockquote",children:C})}}function atxHeading(r,e,t){for(var a,o,n,i=this,s=i.options,c=e.length+1,l=-1,u=r.now(),p="",d="";++l<c;){if((a=e.charAt(l))!==C_SPACE$3&&a!==C_TAB$3){l--;break}p+=a;}for(n=0;++l<=c;){if((a=e.charAt(l))!==C_HASH){l--;break}p+=a,n++;}if(!(n>MAX_ATX_COUNT)&&n&&(s.pedantic||e.charAt(l+1)!==C_HASH)){for(c=e.length+1,o="";++l<c;){if((a=e.charAt(l))!==C_SPACE$3&&a!==C_TAB$3){l--;break}o+=a;}if(s.pedantic||0!==o.length||!a||a===C_NEWLINE$4){if(t)return!0;for(p+=o,o="",d="";++l<c&&(a=e.charAt(l))&&a!==C_NEWLINE$4;)if(a===C_SPACE$3||a===C_TAB$3||a===C_HASH){for(;a===C_SPACE$3||a===C_TAB$3;)o+=a,a=e.charAt(++l);for(;a===C_HASH;)o+=a,a=e.charAt(++l);for(;a===C_SPACE$3||a===C_TAB$3;)o+=a,a=e.charAt(++l);l--;}else d+=o+a,o="";return u.column+=p.length,u.offset+=p.length,p+=d+o,r(p)({type:"heading",depth:n,children:i.tokenizeInline(d,u)})}}}function thematicBreak(r,e,t){for(var a,o,n,i,s=-1,c=e.length+1,l="";++s<c&&((a=e.charAt(s))===C_TAB$4||a===C_SPACE$4);)l+=a;if(a===C_ASTERISK||a===C_DASH||a===C_UNDERSCORE)for(o=a,l+=a,n=1,i="";++s<c;)if((a=e.charAt(s))===o)n++,l+=i+o,i="";else{if(a!==C_SPACE$4)return n>=THEMATIC_BREAK_MARKER_COUNT&&(!a||a===C_NEWLINE$5)?(l+=i,!!t||r(l)({type:"thematicBreak"})):void 0;i+=a;}}function indentation(r){for(var e,t=0,a=0,o=r.charAt(t),n={};o in characters;)a+=e=characters[o],e>1&&(a=Math.floor(a/e)*e),n[a]=t,o=r.charAt(++t);return{indent:a,stops:n}}function indentation$1(r,e){var t,a,o,n,i=r.split(C_NEWLINE$7),s=i.length+1,c=1/0,l=[];for(i.unshift(repeat$3(C_SPACE$6,e)+"!");s--;)if(a=getIndent$1(i[s]),l[s]=a.stops,0!==trim$4(i[s]).length){if(!a.indent){c=1/0;break}a.indent>0&&a.indent<c&&(c=a.indent);}if(c!==1/0)for(s=i.length;s--;){for(o=l[s],t=c;t&&!(t in o);)t--;n=0!==trim$4(i[s]).length&&c&&t!==c?C_TAB$6:"",i[s]=n+i[s].slice(t in o?o[t]+1:0);}return i.shift(),i.join(C_NEWLINE$7)}function list(r,e,t){for(var a,o,n,i,s,c,l,u,p,d,f,g,h,m,D,E,b,C,A,w,q,v,$,y,L=this,S=L.options.commonmark,T=L.options.pedantic,N=L.blockTokenizers,x=L.interruptList,k=0,_=e.length,R=null,O=0;k<_;){if((i=e.charAt(k))===C_TAB$5)O+=TAB_SIZE-O%TAB_SIZE;else{if(i!==C_SPACE$5)break;O++;}k++;}if(!(O>=TAB_SIZE)){if(i=e.charAt(k),a=S?LIST_ORDERED_COMMONMARK_MARKERS:LIST_ORDERED_MARKERS,!0===LIST_UNORDERED_MARKERS[i])s=i,n=!1;else{for(n=!0,o="";k<_&&(i=e.charAt(k),decimal$3(i));)o+=i,k++;if(i=e.charAt(k),!o||!0!==a[i])return;R=parseInt(o,10),s=i;}if((i=e.charAt(++k))===C_SPACE$5||i===C_TAB$5){if(t)return!0;for(k=0,m=[],D=[],E=[];k<_;){for(l=k,u=!1,y=!1,-1===(c=e.indexOf(C_NEWLINE$6,k))&&(c=_),$=k+TAB_SIZE,O=0;k<_;){if((i=e.charAt(k))===C_TAB$5)O+=TAB_SIZE-O%TAB_SIZE;else{if(i!==C_SPACE$5)break;O++;}k++;}if(O>=TAB_SIZE&&(y=!0),b&&O>=b.indent&&(y=!0),i=e.charAt(k),p=null,!y){if(!0===LIST_UNORDERED_MARKERS[i])p=i,k++,O++;else{for(o="";k<_&&(i=e.charAt(k),decimal$3(i));)o+=i,k++;i=e.charAt(k),k++,o&&!0===a[i]&&(p=i,O+=o.length+1);}if(p)if((i=e.charAt(k))===C_TAB$5)O+=TAB_SIZE-O%TAB_SIZE,k++;else if(i===C_SPACE$5){for($=k+TAB_SIZE;k<$&&e.charAt(k)===C_SPACE$5;)k++,O++;k===$&&e.charAt(k)===C_SPACE$5&&(k-=TAB_SIZE-1,O-=TAB_SIZE-1);}else i!==C_NEWLINE$6&&""!==i&&(p=null);}if(p){if(!T&&s!==p)break;u=!0;}else S||y||e.charAt(l)!==C_SPACE$5?S&&b&&(y=O>=b.indent||O>TAB_SIZE):y=!0,u=!1,k=l;if(f=e.slice(l,c),d=l===k?f:e.slice(k,c),(p===C_ASTERISK$1||p===C_UNDERSCORE$1||p===C_DASH$1)&&N.thematicBreak.call(L,r,f,!0))break;if(g=h,h=!trim$3(d).length,y&&b)b.value=b.value.concat(E,f),D=D.concat(E,f),E=[];else if(u)0!==E.length&&(b.value.push(""),b.trail=E.concat()),b={value:[f],indent:O,trail:[]},m.push(b),D=D.concat(E,f),E=[];else if(h){if(g)break;E.push(f);}else{if(g)break;if(interrupt$2(x,N,L,[r,f,!0]))break;b.value=b.value.concat(E,f),D=D.concat(E,f),E=[];}k=c+1;}for(q=r(D.join(C_NEWLINE$6)).reset({type:"list",ordered:n,start:R,loose:null,children:[]}),C=L.enterList(),A=L.enterBlock(),w=!1,k=-1,_=m.length;++k<_;)b=m[k].value.join(C_NEWLINE$6),v=r.now(),(b=r(b)(listItem(L,b,v),q)).loose&&(w=!0),b=m[k].trail.join(C_NEWLINE$6),k!==_-1&&(b+=C_NEWLINE$6),r(b);return C(),A(),q.loose=w,q}}}function listItem(r,e,t){var a,o,n=r.offset,i=null;return e=(r.options.pedantic?pedanticListItem:normalListItem).apply(null,arguments),r.options.gfm&&(a=e.match(EXPRESSION_TASK_ITEM))&&(o=a[0].length,i=a[1].toLowerCase()===C_X_LOWER,n[t.line]+=o,e=e.slice(o)),{type:"listItem",loose:EXPRESSION_LOOSE_LIST_ITEM.test(e)||e.charAt(e.length-1)===C_NEWLINE$6,checked:i,children:r.tokenizeBlock(e,t)}}function pedanticListItem(r,e,t){function a(r){return o[n]=(o[n]||0)+r.length,n++,""}var o=r.offset,n=t.line;return e=e.replace(EXPRESSION_PEDANTIC_BULLET,a),n=t.line,e.replace(EXPRESSION_INITIAL_INDENT,a)}function normalListItem(r,e,t){function a(r,e,t,a,s){return n=e+t+a,i=s,Number(t)<10&&n.length%2==1&&(t=C_SPACE$5+t),(o=e+repeat$2(C_SPACE$5,t.length)+a)+i}var o,n,i,s,c,l,u,p=r.offset,d=t.line;for(s=(e=e.replace(EXPRESSION_BULLET,a)).split(C_NEWLINE$6),(c=removeIndent(e,getIndent(o).indent).split(C_NEWLINE$6))[0]=i,p[d]=(p[d]||0)+n.length,d++,l=0,u=s.length;++l<u;)p[d]=(p[d]||0)+s[l].length-c[l].length,d++;return c.join(C_NEWLINE$6)}function setextHeading(r,e,t){for(var a,o,n,i,s,c=this,l=r.now(),u=e.length,p=-1,d="";++p<u;){if((n=e.charAt(p))!==C_SPACE$7||p>=MAX_HEADING_INDENT){p--;break}d+=n;}for(a="",o="";++p<u;){if((n=e.charAt(p))===C_NEWLINE$8){p--;break}n===C_SPACE$7||n===C_TAB$7?o+=n:(a+=o+n,o="");}if(l.column+=d.length,l.offset+=d.length,d+=a+o,n=e.charAt(++p),i=e.charAt(++p),n===C_NEWLINE$8&&SETEXT_MARKERS[i]){for(d+=n,o=i,s=SETEXT_MARKERS[i];++p<u;){if((n=e.charAt(p))!==i){if(n!==C_NEWLINE$8)return;p--;break}o+=n;}return!!t||r(d+o)({type:"heading",depth:s,children:c.tokenizeInline(a,l)})}}function blockHTML(r,e,t){for(var a,o,n,i,s,c,l,u=this.options.blocks,p=e.length,d=0,f=[[/^<(script|pre|style)(?=(\s|>|$))/i,/<\/(script|pre|style)>/i,!0],[/^<!--/,/-->/,!0],[/^<\?/,/\?>/,!0],[/^<![A-Za-z]/,/>/,!0],[/^<!\[CDATA\[/,/\]\]>/,!0],[new RegExp("^</?("+u.join("|")+")(?=(\\s|/?>|$))","i"),/^$/,!0],[new RegExp(openCloseTag.source+"\\s*$"),/^$/,!1]];d<p&&((i=e.charAt(d))===C_TAB$8||i===C_SPACE$8);)d++;if(e.charAt(d)===C_LT){for(a=-1===(a=e.indexOf(C_NEWLINE$9,d+1))?p:a,o=e.slice(d,a),n=-1,s=f.length;++n<s;)if(f[n][0].test(o)){c=f[n];break}if(c){if(t)return c[2];if(d=a,!c[1].test(o))for(;d<p;){if(a=e.indexOf(C_NEWLINE$9,d+1),a=-1===a?p:a,o=e.slice(d+1,a),c[1].test(o)){o&&(d=a);break}d=a;}return l=e.slice(0,d),r(l)({type:"html",value:l})}}}function collapse(r){return String(r).replace(/\s+/g," ")}function normalize$1(r){return collapseWhiteSpace(r).toLowerCase()}function footnoteDefinition(r,e,t){var a,o,n,i,s,c,l,u,p,d,f,g,h=this,m=h.offset;if(h.options.footnotes){for(a=0,o=e.length,n="",i=r.now(),s=i.line;a<o&&(p=e.charAt(a),whitespace$2(p));)n+=p,a++;if(e.charAt(a)===C_BRACKET_OPEN&&e.charAt(a+1)===C_CARET){for(a=(n+=C_BRACKET_OPEN+C_CARET).length,l="";a<o&&(p=e.charAt(a))!==C_BRACKET_CLOSE;)p===C_BACKSLASH&&(l+=p,a++,p=e.charAt(a)),l+=p,a++;if(l&&e.charAt(a)===C_BRACKET_CLOSE&&e.charAt(a+1)===C_COLON){if(t)return!0;for(d=normalize(l),a=(n+=l+C_BRACKET_CLOSE+C_COLON).length;a<o&&((p=e.charAt(a))===C_TAB$9||p===C_SPACE$9);)n+=p,a++;for(i.column+=n.length,i.offset+=n.length,l="",c="",u="";a<o;){if((p=e.charAt(a))===C_NEWLINE$10){for(u=p,a++;a<o&&(p=e.charAt(a))===C_NEWLINE$10;)u+=p,a++;for(l+=u,u="";a<o&&(p=e.charAt(a))===C_SPACE$9;)u+=p,a++;if(0===u.length)break;l+=u;}l&&(c+=l,l=""),c+=p,a++;}return n+=c,c=c.replace(EXPRESSION_INITIAL_TAB,function(r){return m[s]=(m[s]||0)+r.length,s++,""}),f=r(n),g=h.enterBlock(),c=h.tokenizeBlock(c,i),g(),f({type:"footnoteDefinition",identifier:d,children:c})}}}}function definition(r,e,t){for(var a,o,n,i,s,c,l,u,p=this,d=p.options.commonmark,f=0,g=e.length,h="";f<g&&((i=e.charAt(f))===C_SPACE$10||i===C_TAB$10);)h+=i,f++;if((i=e.charAt(f))===C_BRACKET_OPEN$1){for(f++,h+=i,n="";f<g&&(i=e.charAt(f))!==C_BRACKET_CLOSE$1;)i===C_BACKSLASH$1&&(n+=i,f++,i=e.charAt(f)),n+=i,f++;if(n&&e.charAt(f)===C_BRACKET_CLOSE$1&&e.charAt(f+1)===C_COLON$1){for(c=n,f=(h+=n+C_BRACKET_CLOSE$1+C_COLON$1).length,n="";f<g&&((i=e.charAt(f))===C_TAB$10||i===C_SPACE$10||i===C_NEWLINE$11);)h+=i,f++;if(i=e.charAt(f),n="",a=h,i===C_LT$1){for(f++;f<g&&(i=e.charAt(f),isEnclosedURLCharacter(i));)n+=i,f++;if((i=e.charAt(f))===isEnclosedURLCharacter.delimiter)h+=C_LT$1+n+i,f++;else{if(d)return;f-=n.length+1,n="";}}if(!n){for(;f<g&&(i=e.charAt(f),isUnclosedURLCharacter(i));)n+=i,f++;h+=n;}if(n){for(l=n,n="";f<g&&((i=e.charAt(f))===C_TAB$10||i===C_SPACE$10||i===C_NEWLINE$11);)n+=i,f++;if(i=e.charAt(f),s=null,i===C_DOUBLE_QUOTE?s=C_DOUBLE_QUOTE:i===C_SINGLE_QUOTE?s=C_SINGLE_QUOTE:i===C_PAREN_OPEN&&(s=C_PAREN_CLOSE$1),s){if(!n)return;for(f=(h+=n+i).length,n="";f<g&&(i=e.charAt(f))!==s;){if(i===C_NEWLINE$11){if(f++,(i=e.charAt(f))===C_NEWLINE$11||i===s)return;n+=C_NEWLINE$11;}n+=i,f++;}if((i=e.charAt(f))!==s)return;o=h,h+=n+i,f++,u=n,n="";}else n="",f=h.length;for(;f<g&&((i=e.charAt(f))===C_TAB$10||i===C_SPACE$10);)h+=i,f++;return i=e.charAt(f),i&&i!==C_NEWLINE$11?void 0:!!t||(a=r(a).test().end,l=p.decode.raw(p.unescape(l),a),u&&(o=r(o).test().end,u=p.decode.raw(p.unescape(u),o)),r(h)({type:"definition",identifier:normalize$2(c),title:u||null,url:l}))}}}}function isEnclosedURLCharacter(r){return r!==C_GT$1&&r!==C_BRACKET_OPEN$1&&r!==C_BRACKET_CLOSE$1}function isUnclosedURLCharacter(r){return r!==C_BRACKET_OPEN$1&&r!==C_BRACKET_CLOSE$1&&!whitespace$3(r)}function table(r,e,t){var a,o,n,i,s,c,l,u,p,d,f,g,h,m,D,E,b,C,A,w,q,v,$,y,L=this;if(L.options.gfm){for(a=0,C=0,c=e.length+1,l=[];a<c;){if(v=e.indexOf(C_NEWLINE$12,a),$=e.indexOf(C_PIPE,a+1),-1===v&&(v=e.length),-1===$||$>v){if(C<MIN_TABLE_ROWS)return;break}l.push(e.slice(a,v)),C++,a=v+1;}for(i=l.join(C_NEWLINE$12),a=0,c=(o=l.splice(1,1)[0]||[]).length,C--,n=!1,f=[];a<c;){if((p=o.charAt(a))===C_PIPE){if(d=null,!1===n){if(!1===y)return}else f.push(n),n=!1;y=!1;}else if(p===C_DASH$3)d=!0,n=n||TABLE_ALIGN_NONE;else if(p===C_COLON$2)n=n===TABLE_ALIGN_LEFT?TABLE_ALIGN_CENTER:d&&n===TABLE_ALIGN_NONE?TABLE_ALIGN_RIGHT:TABLE_ALIGN_LEFT;else if(!whitespace$4(p))return;a++;}if(!1!==n&&f.push(n),!(f.length<MIN_TABLE_COLUMNS)){if(t)return!0;for(b=-1,w=[],q=r(i).reset({type:"table",align:f,children:w});++b<C;){for(A=l[b],s={type:"tableRow",children:[]},b&&r(C_NEWLINE$12),r(A).reset(s,q),c=A.length+1,a=0,u="",g="",h=!0,m=null,D=null;a<c;)if((p=A.charAt(a))!==C_TAB$11&&p!==C_SPACE$11){if(""===p||p===C_PIPE)if(h)r(p);else{if(p&&D){u+=p,a++;continue}!g&&!p||h||(i=g,u.length>1&&(p?(i+=u.slice(0,u.length-1),u=u.charAt(u.length-1)):(i+=u,u="")),E=r.now(),r(i)({type:"tableCell",children:L.tokenizeInline(g,E)},s)),r(u+p),u="",g="";}else if(u&&(g+=u,u=""),g+=p,p===C_BACKSLASH$2&&a!==c-2&&(g+=A.charAt(a+1),a++),p===C_TICK$1){for(m=1;A.charAt(a+1)===p;)g+=p,a++,m++;D?m>=D&&(D=0):D=m;}h=!1,a++;}else g?u+=p:r(p),a++;b||r(C_NEWLINE$12+o);}return q}}}function paragraph(r,e,t){for(var a,o,n,i,s,c=this,l=c.options,u=l.commonmark,p=l.gfm,d=c.blockTokenizers,f=c.interruptParagraph,g=e.indexOf(C_NEWLINE$13),h=e.length;g<h;){if(-1===g){g=h;break}if(e.charAt(g+1)===C_NEWLINE$13)break;if(u){for(i=0,a=g+1;a<h;){if((n=e.charAt(a))===C_TAB$12){i=TAB_SIZE$1;break}if(n!==C_SPACE$12)break;i++,a++;}if(i>=TAB_SIZE$1){g=e.indexOf(C_NEWLINE$13,g+1);continue}}if(o=e.slice(g+1),interrupt$3(f,d,c,[r,o,!0]))break;if(d.list.call(c,r,o,!0)&&(c.inList||u||p&&!decimal$4(trim$5.left(o).charAt(0))))break;if(a=g,-1!==(g=e.indexOf(C_NEWLINE$13,g+1))&&""===trim$5(e.slice(a,g))){g=a;break}}return o=e.slice(0,g),""===trim$5(o)?(r(o),null):!!t||(s=r.now(),o=trimTrailingLines$1(o),r(o)({type:"paragraph",children:c.tokenizeInline(o,s)}))}function locate$1(r,e){return r.indexOf("\\",e)}function escape(r,e,t){var a,o,n=this;if("\\"===e.charAt(0)&&(a=e.charAt(1),-1!==n.escape.indexOf(a)))return!!t||(o="\n"===a?{type:"break"}:{type:"text",value:a},r("\\"+a)(o))}function locate$3(r,e){return r.indexOf("<",e)}function autoLink(r,e,t){var a,o,n,i,s,c,l,u,p,d,f,g;if(e.charAt(0)===C_LT$2){for(a=this,o="",n=e.length,i=0,s="",l=!1,u="",i++,o=C_LT$2;i<n&&(c=e.charAt(i),!(whitespace$5(c)||c===C_GT$2||c===C_AT_SIGN||":"===c&&e.charAt(i+1)===C_SLASH));)s+=c,i++;if(s){if(u+=s,s="",c=e.charAt(i),u+=c,i++,c===C_AT_SIGN)l=!0;else{if(":"!==c||e.charAt(i+1)!==C_SLASH)return;u+=C_SLASH,i++;}for(;i<n&&(c=e.charAt(i),!whitespace$5(c)&&c!==C_GT$2);)s+=c,i++;if(c=e.charAt(i),s&&c===C_GT$2)return!!t||(u+=s,d=u,o+=u+c,p=r.now(),p.column++,p.offset++,l&&(u.slice(0,MAILTO_LENGTH).toLowerCase()===MAILTO?(d=d.substr(MAILTO_LENGTH),p.column+=MAILTO_LENGTH,p.offset+=MAILTO_LENGTH):u=MAILTO+u),f=a.inlineTokenizers.escape,a.inlineTokenizers.escape=null,g=a.enterLink(),d=a.tokenizeInline(d,p),a.inlineTokenizers.escape=f,g(),r(o)({type:"link",title:null,url:decode$3(u),children:d}))}}}function locate$5(r,e){var t,a=PROTOCOLS$1.length,o=-1,n=-1;if(!this.options.gfm)return-1;for(;++o<a;)-1!==(t=r.indexOf(PROTOCOLS$1[o],e))&&(t<n||-1===n)&&(n=t);return n}function url(r,e,t){var a,o,n,i,s,c,l,u,p,d,f,g,h=this;if(h.options.gfm){for(a="",i=-1,u=PROTOCOLS_LENGTH;++i<u;)if(c=PROTOCOLS[i],(l=e.slice(0,c.length)).toLowerCase()===c){a=l;break}if(a){for(i=a.length,u=e.length,p="",d=0;i<u&&(n=e.charAt(i),!whitespace$6(n)&&n!==C_LT$3)&&("."!==n&&","!==n&&":"!==n&&";"!==n&&'"'!==n&&"'"!==n&&")"!==n&&"]"!==n||(f=e.charAt(i+1))&&!whitespace$6(f))&&(n!==C_PAREN_OPEN$1&&n!==C_BRACKET_OPEN$2||d++,n!==C_PAREN_CLOSE$2&&n!==C_BRACKET_CLOSE$2||!(--d<0));)p+=n,i++;if(p){if(a+=p,o=a,c===MAILTO_PROTOCOL){if(-1===(s=p.indexOf(C_AT_SIGN$1))||s===u-1)return;o=o.substr(MAILTO_PROTOCOL.length);}return!!t||(g=h.enterLink(),o=h.tokenizeInline(o,r.now()),g(),r(a)({type:"link",title:null,url:decode$4(a),children:o}))}}}}function inlineHTML(r,e,t){var a,o,n=this,i=e.length;if(!("<"!==e.charAt(0)||i<3)&&(a=e.charAt(1),(alphabetical$2(a)||"?"===a||"!"===a||"/"===a)&&(o=e.match(tag$3))))return!!t||(o=o[0],!n.inLink&&EXPRESSION_HTML_LINK_OPEN.test(o)?n.inLink=!0:n.inLink&&EXPRESSION_HTML_LINK_CLOSE.test(o)&&(n.inLink=!1),r(o)({type:"html",value:o}))}function locate$8(r,e){var t=r.indexOf("[",e),a=r.indexOf("![",e);return-1===a?t:t<a?t:a}function link(r,e,t){var a,o,n,i,s,c,l,u,p,d,f,g,h,m,D,E,b,C,A,w=this,q="",v=0,$=e.charAt(0),y=w.options.pedantic,L=w.options.commonmark,S=w.options.gfm;if("!"===$&&(p=!0,q=$,$=e.charAt(++v)),$===C_BRACKET_OPEN$3&&(p||!w.inLink)){for(q+=$,D="",v++,g=e.length,m=0,(b=r.now()).column+=v,b.offset+=v;v<g;){if($=e.charAt(v),c=$,$===C_TICK$2){for(o=1;e.charAt(v+1)===C_TICK$2;)c+=$,v++,o++;n?o>=n&&(n=0):n=o;}else if($===C_BACKSLASH$3)v++,c+=e.charAt(v);else if(n&&!S||$!==C_BRACKET_OPEN$3){if((!n||S)&&$===C_BRACKET_CLOSE$3){if(!m){if(!y)for(;v<g&&($=e.charAt(v+1),whitespace$7($));)c+=$,v++;if(e.charAt(v+1)!==C_PAREN_OPEN$2)return;c+=C_PAREN_OPEN$2,a=!0,v++;break}m--;}}else m++;D+=c,c="",v++;}if(a){for(d=D,q+=D+c,v++;v<g&&($=e.charAt(v),whitespace$7($));)q+=$,v++;if($=e.charAt(v),u=L?COMMONMARK_LINK_MARKERS:LINK_MARKERS,D="",i=q,$===C_LT$4){for(v++,i+=C_LT$4;v<g&&($=e.charAt(v))!==C_GT$3;){if(L&&"\n"===$)return;D+=$,v++;}if(e.charAt(v)!==C_GT$3)return;q+=C_LT$4+D+C_GT$3,E=D,v++;}else{for($=null,c="";v<g&&($=e.charAt(v),!c||!own$2.call(u,$));){if(whitespace$7($)){if(!y)break;c+=$;}else{if($===C_PAREN_OPEN$2)m++;else if($===C_PAREN_CLOSE$3){if(0===m)break;m--;}D+=c,c="",$===C_BACKSLASH$3&&(D+=C_BACKSLASH$3,$=e.charAt(++v)),D+=$;}v++;}E=D,v=(q+=D).length;}for(D="";v<g&&($=e.charAt(v),whitespace$7($));)D+=$,v++;if($=e.charAt(v),q+=D,D&&own$2.call(u,$))if(v++,q+=$,D="",f=u[$],s=q,L){for(;v<g&&($=e.charAt(v))!==f;)$===C_BACKSLASH$3&&(D+=C_BACKSLASH$3,$=e.charAt(++v)),v++,D+=$;if(($=e.charAt(v))!==f)return;for(h=D,q+=D+$,v++;v<g&&($=e.charAt(v),whitespace$7($));)q+=$,v++;}else for(c="";v<g;){if(($=e.charAt(v))===f)l&&(D+=f+c,c=""),l=!0;else if(l){if($===C_PAREN_CLOSE$3){q+=D+f+c,h=D;break}whitespace$7($)?c+=$:(D+=f+c+$,c="",l=!1);}else D+=$;v++;}if(e.charAt(v)===C_PAREN_CLOSE$3)return!!t||(q+=C_PAREN_CLOSE$3,E=w.decode.raw(w.unescape(E),r(i).test().end),h&&(s=r(s).test().end,h=w.decode.raw(w.unescape(h),s)),A={type:p?"image":"link",title:h||null,url:E},p?A.alt=w.decode.raw(w.unescape(d),b)||null:(C=w.enterLink(),A.children=w.tokenizeInline(d,b),C()),r(q)(A))}}}function reference(r,e,t){var a,o,n,i,s,c,l,u,p=this,d=e.charAt(0),f=0,g=e.length,h="",m="",D=T_LINK,E=REFERENCE_TYPE_SHORTCUT;if("!"===d&&(D=T_IMAGE,m=d,d=e.charAt(++f)),d===C_BRACKET_OPEN$4){for(f++,m+=d,c="",p.options.footnotes&&D===T_LINK&&e.charAt(f)===C_CARET$1&&(m+=C_CARET$1,f++,D=T_FOOTNOTE),u=0;f<g;){if((d=e.charAt(f))===C_BRACKET_OPEN$4)l=!0,u++;else if(d===C_BRACKET_CLOSE$4){if(!u)break;u--;}d===C_BACKSLASH$4&&(c+=C_BACKSLASH$4,d=e.charAt(++f)),c+=d,f++;}if(h=c,a=c,(d=e.charAt(f))===C_BRACKET_CLOSE$4){for(f++,h+=d,c="";f<g&&(d=e.charAt(f),whitespace$8(d));)c+=d,f++;if(d=e.charAt(f),D!==T_FOOTNOTE&&d===C_BRACKET_OPEN$4){for(o="",c+=d,f++;f<g&&(d=e.charAt(f))!==C_BRACKET_OPEN$4&&d!==C_BRACKET_CLOSE$4;)d===C_BACKSLASH$4&&(o+=C_BACKSLASH$4,d=e.charAt(++f)),o+=d,f++;(d=e.charAt(f))===C_BRACKET_CLOSE$4?(E=o?REFERENCE_TYPE_FULL:REFERENCE_TYPE_COLLAPSED,c+=o+d,f++):o="",h+=c,c="";}else{if(!a)return;o=a;}if(E===REFERENCE_TYPE_FULL||!l)return h=m+h,D===T_LINK&&p.inLink?null:!!t||(D===T_FOOTNOTE&&-1!==a.indexOf(" ")?r(h)({type:"footnote",children:this.tokenizeInline(a,r.now())}):(n=r.now(),n.column+=m.length,n.offset+=m.length,o=E===REFERENCE_TYPE_FULL?o:a,i={type:D+"Reference",identifier:normalize$3(o)},D!==T_LINK&&D!==T_IMAGE||(i.referenceType=E),D===T_LINK?(s=p.enterLink(),i.children=p.tokenizeInline(a,n),s()):D===T_IMAGE&&(i.alt=p.decode.raw(p.unescape(a),n)||null),r(h)(i)))}}}function locate$11(r,e){var t=r.indexOf("**",e),a=r.indexOf("__",e);return-1===a?t:-1===t?a:a<t?a:t}function strong(r,e,t){var a,o,n,i,s,c,l,u=this,p=0,d=e.charAt(p);if(!(d!==C_ASTERISK$2&&d!==C_UNDERSCORE$2||e.charAt(++p)!==d||(o=u.options.pedantic,n=d,s=n+n,c=e.length,p++,i="",d="",o&&whitespace$9(e.charAt(p)))))for(;p<c;){if(l=d,!((d=e.charAt(p))!==n||e.charAt(p+1)!==n||o&&whitespace$9(l))&&(d=e.charAt(p+2))!==n){if(!trim$6(i))return;return!!t||(a=r.now(),a.column+=2,a.offset+=2,r(s+i+s)({type:"strong",children:u.tokenizeInline(i,a)}))}o||"\\"!==d||(i+=d,d=e.charAt(++p)),i+=d,p++;}}function wordCharacter(r){return re$2.test("number"==typeof r?fromCode$1(r):r.charAt(0))}function locate$13(r,e){var t=r.indexOf("*",e),a=r.indexOf("_",e);return-1===a?t:-1===t?a:a<t?a:t}function emphasis(r,e,t){var a,o,n,i,s,c,l,u=this,p=0,d=e.charAt(p);if(!(d!==C_ASTERISK$3&&d!==C_UNDERSCORE$3||(o=u.options.pedantic,s=d,n=d,c=e.length,p++,i="",d="",o&&whitespace$10(e.charAt(p)))))for(;p<c;){if(l=d,!((d=e.charAt(p))!==n||o&&whitespace$10(l))){if((d=e.charAt(++p))!==n){if(!trim$7(i)||l===n)return;if(!o&&n===C_UNDERSCORE$3&&word(d)){i+=n;continue}return!!t||(a=r.now(),a.column++,a.offset++,r(s+i+n)({type:"emphasis",children:u.tokenizeInline(i,a)}))}i+=n;}o||"\\"!==d||(i+=d,d=e.charAt(++p)),i+=d,p++;}}function locate$15(r,e){return r.indexOf("~~",e)}function strikethrough(r,e,t){var a,o,n,i=this,s="",c="",l="",u="";if(i.options.gfm&&e.charAt(0)===C_TILDE$1&&e.charAt(1)===C_TILDE$1&&!whitespace$11(e.charAt(2)))for(a=1,o=e.length,(n=r.now()).column+=2,n.offset+=2;++a<o;){if(!((s=e.charAt(a))!==C_TILDE$1||c!==C_TILDE$1||l&&whitespace$11(l)))return!!t||r(DOUBLE+u+DOUBLE)({type:"delete",children:i.tokenizeInline(u,n)});u+=c,l=c,c=s;}}function locate$17(r,e){return r.indexOf("`",e)}function inlineCode(r,e,t){for(var a,o,n,i,s,c,l,u,p=e.length,d=0,f="",g="";d<p&&e.charAt(d)===C_TICK$3;)f+=C_TICK$3,d++;if(f){for(s=f,i=d,f="",u=e.charAt(d),n=0;d<p;){if(c=u,u=e.charAt(d+1),c===C_TICK$3?(n++,g+=c):(n=0,f+=c),n&&u!==C_TICK$3){if(n===i){s+=f+g,l=!0;break}f+=g,g="";}d++;}if(!l){if(i%2!=0)return;f="";}if(t)return!0;for(a="",o="",p=f.length,d=-1;++d<p;)c=f.charAt(d),whitespace$12(c)?o+=c:(o&&(a&&(a+=o),o=""),a+=c);return r(s)({type:"inlineCode",value:a})}}function locate$19(r,e){for(var t=r.indexOf("\n",e);t>e&&" "===r.charAt(t-1);)t--;return t}function hardBreak(r,e,t){for(var a,o=e.length,n=-1,i="";++n<o;){if("\n"===(a=e.charAt(n))){if(n<MIN_BREAK_LENGTH)return;return!!t||(i+=a,r(i)({type:"break"}))}if(" "!==a)return;i+=a;}}function text(r,e,t){var a,o,n,i,s,c,l,u,p,d,f=this;if(t)return!0;for(i=(a=f.inlineMethods).length,o=f.inlineTokenizers,n=-1,p=e.length;++n<i;)"text"!==(u=a[n])&&o[u]&&((l=o[u].locator)||r.file.fail("Missing locator: `"+u+"`"),-1!==(c=l.call(f,e,1))&&c<p&&(p=c));s=e.slice(0,p),d=r.now(),f.decode(s,d,function(e,t,a){r(a||e)({type:"text",value:e});});}function Parser$1(r,e){this.file=e,this.offset={},this.options=xtend$3(this.options),this.setOptions({}),this.inList=!1,this.inBlock=!1,this.inLink=!1,this.atStart=!0,this.toOffset=vfileLocation(e).toOffset,this.unescape=unescape(this,"escape"),this.decode=decode(this);}function keys(r){var e,t=[];for(e in r)t.push(e);return t}function parse$4(r){var e=unherit(Parser);e.prototype.options=xtend$1(e.prototype.options,this.data("settings"),r),this.Parser=e;}function bail$1(r){if(r)throw r}function replaceExt(r,e){if("string"!=typeof r)return r;if(0===r.length)return r;var t=path$2.basename(r,path$2.extname(r))+e;return path$2.join(path$2.dirname(r),t)}function stringify$1(r){return r&&"object"==typeof r?own$5.call(r,"position")||own$5.call(r,"type")?location(r.position):own$5.call(r,"start")||own$5.call(r,"end")?location(r):own$5.call(r,"line")||own$5.call(r,"column")?position(r):null:null}function position(r){return r&&"object"==typeof r||(r={}),index$56(r.line)+":"+index$56(r.column)}function location(r){return r&&"object"==typeof r||(r={}),position(r.start)+"-"+position(r.end)}function index$56(r){return r&&"number"==typeof r?r:1}function isBuffer(r){return!!r.constructor&&"function"==typeof r.constructor.isBuffer&&r.constructor.isBuffer(r)}function isSlowBuffer(r){return"function"==typeof r.readFloatLE&&"function"==typeof r.slice&&isBuffer(r.slice(0,0))}function VFile(r){var e,t,a;if(r){if("string"==typeof r||buffer(r))r={contents:r};else if("message"in r&&"messages"in r)return r}else r={};if(!(this instanceof VFile))return new VFile(r);for(this.data={},this.messages=[],this.history=[],this.cwd=process.cwd(),t=-1,a=order$1.length;++t<a;)e=order$1[t],own$4.call(r,e)&&(this[e]=r[e]);for(e in r)-1===order$1.indexOf(e)&&(this[e]=r[e]);}function toString(r){var e=this.contents||"";return buffer(e)?e.toString(r):String(e)}function message(r,e,t){var a,o,n=this.path,i=stringify(e)||"1:1";return a={start:{line:null,column:null},end:{line:null,column:null}},e&&e.position&&(e=e.position),e&&(e.start?(a=e,e=e.start):a.start=e),o=new VMessage(r.message||r),o.name=(n?n+":":"")+i,o.file=n||"",o.reason=r.message||r,o.line=e?e.line:null,o.column=e?e.column:null,o.location=a,o.ruleId=t||null,o.source=null,o.fatal=!1,r.stack&&(o.stack=r.stack),this.messages.push(o),o}function fail(){var r=this.message.apply(this,arguments);throw r.fatal=!0,r}function info(){var r=this.message.apply(this,arguments);return r.fatal=null,r}function VMessagePrototype(){}function VMessage(r){this.message=r;}function assertPart(r,e){if(-1!==r.indexOf(path$1$1.sep))throw new Error("`"+e+"` cannot be a path: did not expect `"+path$1$1.sep+"`")}function assertNonEmpty(r,e){if(!r)throw new Error("`"+e+"` cannot be empty")}function assertPath(r,e){if(!r)throw new Error("Setting `"+e+"` requires `path` to be set too")}function trough$1(){function r(){function r(n){var i=t[++e],s=slice$1.call(arguments,0).slice(1),c=a.length,l=-1;if(n)o(n);else{for(;++l<c;)null!==s[l]&&void 0!==s[l]||(s[l]=a[l]);a=s,i?wrap$1(i,r).apply(null,a):o.apply(null,[null].concat(a));}}var e=-1,a=slice$1.call(arguments,0,-1),o=arguments[arguments.length-1];if("function"!=typeof o)throw new Error("Expected function as last argument, not "+o);r.apply(null,[null].concat(a));}function e(r){if("function"!=typeof r)throw new Error("Expected `fn` to be a function, not "+r);return t.push(r),a}var t=[],a={};return a.run=r,a.use=e,a}function wrap$1(r,e){function t(){var e,t=slice$1.call(arguments,0),i=r.length>t.length;i&&t.push(a);try{e=r.apply(null,t);}catch(r){if(i&&n)throw r;return a(r)}i||(e&&"function"==typeof e.then?e.then(o,a):e instanceof Error?a(e):o(e));}function a(){n||(n=!0,e.apply(null,arguments));}function o(r){a(null,r);}var n;return t}function isString(r){return"[object String]"===toString$1.call(r)}function pipelineParse(r,e){e.tree=r.parse(e.file);}function pipelineRun(r,e,t){function a(r,a,o){r?t(r):(e.tree=a,e.file=o,t());}r.run(e.tree,e.file,a);}function pipelineStringify(r,e){e.file.contents=r.stringify(e.tree,e.file);}function unified$1(){function r(){for(var r=unified$1(),e=p.length,t=-1;++t<e;)r.use.apply(null,p[t]);return r.data(extend$1(!0,{},f)),r}function e(){var e,t,a,o;if(g)return r;for(;++h<p.length;)t=(e=p[h])[0],o=null,!1!==(a=e[1])&&(!0===a&&(e[1]=void 0),o=t.apply(r,e.slice(1)),func(o)&&d.use(o));return g=!0,h=1/0,r}function t(e,t){return string(e)?2===arguments.length?(assertUnfrozen("data",g),f[e]=t,r):own$3.call(f,e)&&f[e]||null:e?(assertUnfrozen("data",g),f=e,r):f}function a(e){function t(r){n(r.plugins),r.settings&&(s=extend$1(s||{},r.settings));}function a(r){if(func(r))i(r);else{if("object"!=typeof r)throw new Error("Expected usable value, not `"+r+"`");"length"in r?i.apply(null,r):t(r);}}function n(r){var e,t;if(null===r||void 0===r);else{if(!("object"==typeof r&&"length"in r))throw new Error("Expected a list of plugins, not `"+r+"`");for(e=r.length,t=-1;++t<e;)a(r[t]);}}function i(r,e){var t=o(r);t?(plain(t[1])&&plain(e)&&(e=extend$1(t[1],e)),t[1]=e):p.push(slice.call(arguments));}var s;if(assertUnfrozen("use",g),null===e||void 0===e);else if(func(e))i.apply(null,arguments);else{if("object"!=typeof e)throw new Error("Expected usable value, not `"+e+"`");"length"in e?n(e):t(e);}return s&&(f.settings=extend$1(f.settings||{},s)),r}function o(r){for(var e,t=p.length,a=-1;++a<t;)if((e=p[a])[0]===r)return e}function n(t){var a,o=vfile(t);return e(),a=r.Parser,assertParser("parse",a),newable(a)?new a(String(o),o).parse():a(String(o),o)}function i(r,t,a){function o(e,o){function n(t,n,i){n=n||r,t?o(t):e?e(n):a(null,n,i);}d.run(r,vfile(t),n);}if(assertNode(r),e(),!a&&func(t)&&(a=t,t=null),!a)return new Promise(o);o(null,a);}function s(r,e){function t(r,e){o=!0,bail(r),a=e;}var a,o=!1;return i(r,e,t),assertDone("runSync","run",o),a}function c(t,a){var o,n=vfile(a);return e(),o=r.Compiler,assertCompiler("stringify",o),assertNode(t),newable(o)?new o(t,n).compile():o(t,n)}function l(t,a){function o(e,o){function n(r){r?o(r):e?e(i):a(null,i);}var i=vfile(t);pipeline.run(r,{file:i},n);}if(e(),assertParser("process",r.Parser),assertCompiler("process",r.Compiler),!a)return new Promise(o);o(null,a);}function u(t){function a(r){n=!0,bail(r);}var o,n=!1;return e(),assertParser("processSync",r.Parser),assertCompiler("processSync",r.Compiler),o=vfile(t),l(o,a),assertDone("processSync","process",n),o}var p=[],d=trough(),f={},g=!1,h=-1;return r.data=t,r.freeze=e,r.attachers=p,r.use=a,r.parse=n,r.stringify=c,r.run=i,r.runSync=s,r.process=l,r.processSync=u,r}function newable(r){return func(r)&&keys$1(r.prototype)}function keys$1(r){var e;for(e in r)return!0;return!1}function assertParser(r,e){if(!func(e))throw new Error("Cannot `"+r+"` without `Parser`")}function assertCompiler(r,e){if(!func(e))throw new Error("Cannot `"+r+"` without `Compiler`")}function assertUnfrozen(r,e){if(e)throw new Error("Cannot invoke `"+r+"` on a frozen processor.\nCreate a new processor first, by invoking it: use `processor()` instead of `processor`.")}function assertNode(r){if(!r||!string(r.type))throw new Error("Expected node, got `"+r+"`")}function assertDone(r,e,t){if(!t)throw new Error("`"+r+"` finished async. Use `"+e+"` instead")}function get_regex(){return create_regex(character_ranges.concat(punctuation_ranges))}function create_regex(r){return new RegExp("["+r.map(get_bracket_content).reduce(function(r,e){return r+e})+"]","g")}function get_bracket_content(r){return"number"==typeof r?get_escaped_unicode(r):get_escaped_unicode(r[0])+"-"+get_escaped_unicode(r[1])}function get_escaped_unicode(r){return"\\u"+r.toString(16)}function isExportDeclaration(r){if(r)switch(r.type){case"ExportDefaultDeclaration":case"ExportDefaultSpecifier":case"DeclareExportDeclaration":case"ExportNamedDeclaration":case"ExportAllDeclaration":return!0}return!1}function getParentExportDeclaration(r){const e=r.getParentNode();return"declaration"===r.getName()&&isExportDeclaration(e)?e:null}function getPenultimate(r){return r.length>1?r[r.length-2]:null}function getLast(r){return r.length>0?r[r.length-1]:null}function skip(r){return(e,t,a)=>{const o=a&&a.backwards;if(!1===t)return!1;const n=e.length;let i=t;for(;i>=0&&i<n;){const t=e.charAt(i);if(r instanceof RegExp){if(!r.test(t))return i}else if(-1===r.indexOf(t))return i;o?i--:i++;}if(-1===i||i===n)return i;return!1}}function skipInlineComment(r,e){if(!1===e)return!1;if("/"===r.charAt(e)&&"*"===r.charAt(e+1))for(let t=e+2;t<r.length;++t)if("*"===r.charAt(t)&&"/"===r.charAt(t+1))return t+2;return e}function skipTrailingComment(r,e){return!1!==e&&("/"===r.charAt(e)&&"/"===r.charAt(e+1)?skipEverythingButNewLine(r,e):e)}function skipNewline(r,e,t){const a=t&&t.backwards;if(!1===e)return!1;const o=r.charAt(e);if(a){if("\r"===r.charAt(e-1)&&"\n"===o)return e-2;if("\n"===o||"\r"===o||"\u2028"===o||"\u2029"===o)return e-1}else{if("\r"===o&&"\n"===r.charAt(e+1))return e+2;if("\n"===o||"\r"===o||"\u2028"===o||"\u2029"===o)return e+1}return e}function hasNewline(r,e,t){const a=skipSpaces(r,(t=t||{}).backwards?e-1:e,t);return a!==skipNewline(r,a,t)}function hasNewlineInRange(r,e,t){for(let a=e;a<t;++a)if("\n"===r.charAt(a))return!0;return!1}function isPreviousLineEmpty(r,e){let t=locStart(e)-1;return t=skipNewline(r,t=skipSpaces(r,t,{backwards:!0}),{backwards:!0}),(t=skipSpaces(r,t,{backwards:!0}))!==skipNewline(r,t,{backwards:!0})}function isNextLineEmptyAfterIndex(r,e){let t=null,a=e;for(;a!==t;)t=a,a=skipInlineComment(r,a=skipToLineEnd(r,a)),a=skipSpaces(r,a);return a=skipTrailingComment(r,a),a=skipNewline(r,a),hasNewline(r,a)}function isNextLineEmpty(r,e){return isNextLineEmptyAfterIndex(r,locEnd(e))}function getNextNonSpaceNonCommentCharacterIndex(r,e){let t=null,a=locEnd(e);for(;a!==t;)t=a,a=skipNewline(r,a=skipTrailingComment(r,a=skipInlineComment(r,a=skipSpaces(r,a))));return a}function getNextNonSpaceNonCommentCharacter(r,e){return r.charAt(getNextNonSpaceNonCommentCharacterIndex(r,e))}function hasSpaces(r,e,t){return skipSpaces(r,(t=t||{}).backwards?e-1:e,t)!==e}function locStart(r){return r.declaration&&r.declaration.decorators&&r.declaration.decorators.length>0?locStart(r.declaration.decorators[0]):r.decorators&&r.decorators.length>0?locStart(r.decorators[0]):r.__location?r.__location.startOffset:r.range?r.range[0]:"number"==typeof r.start?r.start:r.source?lineColumnToIndex(r.source.start,r.source.input.css)-1:r.loc?r.loc.start:void 0}function locEnd(r){const e=r.nodes&&getLast(r.nodes);e&&r.source&&!r.source.end&&(r=e);let t;return r.range?t=r.range[1]:"number"==typeof r.end?t=r.end:r.source&&(t=lineColumnToIndex(r.source.end,r.source.input.css)),r.__location?r.__location.endOffset:r.typeAnnotation?Math.max(t,locEnd(r.typeAnnotation)):r.loc&&!t?r.loc.end:t}function lineColumnToIndex(r,e){let t=0;for(let a=0;a<r.line-1;++a)if(-1===(t=e.indexOf("\n",t)+1))return-1;return t+r.column}function setLocStart(r,e){r.range?r.range[0]=e:r.start=e;}function setLocEnd(r,e){r.range?r.range[1]=e:r.end=e;}function getPrecedence(r){return PRECEDENCE[r]}function shouldFlatten(r,e){return getPrecedence(e)===getPrecedence(r)&&("**"!==r&&((!equalityOperators[r]||!equalityOperators[e])&&(!("%"===e&&multiplicativeOperators[r]||"%"===r&&multiplicativeOperators[e])&&(!bitshiftOperators[r]||!bitshiftOperators[e]))))}function isBitwiseOperator(r){return!!bitshiftOperators[r]||"|"===r||"^"===r||"&"===r}function startsWithNoLookaheadToken(r,e){switch((r=getLeftMost(r)).type){case"ObjectPattern":return!e;case"FunctionExpression":case"ClassExpression":return e;case"ObjectExpression":return!0;case"MemberExpression":return startsWithNoLookaheadToken(r.object,e);case"TaggedTemplateExpression":return"FunctionExpression"!==r.tag.type&&startsWithNoLookaheadToken(r.tag,e);case"CallExpression":return"FunctionExpression"!==r.callee.type&&startsWithNoLookaheadToken(r.callee,e);case"ConditionalExpression":return startsWithNoLookaheadToken(r.test,e);case"UpdateExpression":return!r.prefix&&startsWithNoLookaheadToken(r.argument,e);case"BindExpression":return r.object&&startsWithNoLookaheadToken(r.object,e);case"SequenceExpression":return startsWithNoLookaheadToken(r.expressions[0],e);case"TSAsExpression":return startsWithNoLookaheadToken(r.expression,e);default:return!1}}function getLeftMost(r){return r.left?getLeftMost(r.left):r}function hasBlockComments(r){return r.comments&&r.comments.some(isBlockComment)}function isBlockComment(r){return"Block"===r.type||"CommentBlock"===r.type}function hasClosureCompilerTypeCastComment(r,e){return e.comments&&e.comments.some(e=>e.leading&&isBlockComment(e)&&e.value.match(/^\*\s*@type\s*{[^}]+}\s*$/)&&"("===getNextNonSpaceNonCommentCharacter(r,e))}function getAlignmentSize(r,e,t){let a=0;for(let o=t=t||0;o<r.length;++o)"\t"===r[o]?a=a+e-a%e:a++;return a}function getIndentSize(r,e){const t=r.lastIndexOf("\n");return-1===t?0:getAlignmentSize(r.slice(t+1).match(/^[ \t]*/)[0],e)}function printString(r,e,t){const a=r.slice(1,-1),o={quote:'"',regex:/"/g},n={quote:"'",regex:/'/g},i=e.singleQuote?n:o,s=i===n?o:n;let c=!1,l=!1;if(a.includes(i.quote)||a.includes(s.quote)){const r=(a.match(i.regex)||[]).length,e=(a.match(s.regex)||[]).length;c=r>e;}else l=!0;const u="json"===e.parser?o.quote:c?s.quote:i.quote;return t?l?u+a+u:r:makeString(a,u,!("css"===e.parser||"less"===e.parser||"scss"===e.parser))}function makeString(r,e,t){const a='"'===e?"'":'"',o=/\\([\s\S])|(['"])/g,n=r.replace(o,(r,o,n)=>{if(o===a)return o;if(n===e)return"\\"+n;if(n)return n;return t&&/^[^\\nrvtbfux\r\n\u2028\u2029"'0-7]$/.test(o)?o:"\\"+o});return e+n+e}function printNumber(r){return r.toLowerCase().replace(/^([+-]?[\d.]+e)(?:\+|(-))?0*(\d)/,"$1$2$3").replace(/^([+-]?[\d.]+)e[+-]?0+$/,"$1").replace(/^([+-])?\./,"$10.").replace(/(\.\d+?)0+(?=e|$)/,"$1").replace(/\.(?=e|$)/,"")}function getMaxContinuousCount(r,e){const t=r.match(new RegExp(`(${escapeStringRegexp(e)})+`,"g"));return null===t?0:t.reduce((r,t)=>Math.max(r,t.length/e.length),0)}function mapDoc(r,e){if(r.parts){const t=r.parts.map(r=>mapDoc(r,e));return e(Object.assign({},r,{parts:t}))}if(r.contents){const t=mapDoc(r.contents,e);return e(Object.assign({},r,{contents:t}))}return e(r)}function splitText$1(r){function e(r){function e(e,t){return i.kind===e&&r.kind===t||i.kind===t&&r.kind===e}const i=n[n.length-1];i&&"word"===i.type&&(e(t,a)?n.push({type:"whitespace",value:" "}):e(t,o)||[i.value,r.value].some(r=>/\u3000/.test(r))||n.push({type:"whitespace",value:""})),n.push(r);}const t="non-cjk",a="cjk-character",o="cjk-punctuation",n=[];return r.replace(new RegExp(`(${cjkRegex.source})\n(${cjkRegex.source})`,"g"),"$1$2").split(/([^\S\u3000]+)/).forEach((r,i,s)=>{if(i%2==1)return void n.push({type:"whitespace",value:" "});if((0===i||i===s.length-1)&&""===r)return;r.split(new RegExp(`(${cjkRegex.source})`)).forEach((r,n,i)=>{if((0===n||n===i.length-1)&&""===r)return;if(n%2==0)return void(""!==r&&e({type:"word",value:r,kind:t}));const s=cjkPunctuationRegex.test(r)?o:a;e({type:"word",value:r,kind:s});});}),n}function getStringWidth(r){return stringWidth(r.replace(emojiRegex,"  "))}function parse(r){const e=unified().use(remarkParse,{footnotes:!0,commonmark:!0}).use(remarkFrontmatter,["yaml"]).use(restoreUnescapedCharacter(r)).use(mergeContinuousTexts).use(transformInlineCode(r)).use(splitText);return e.runSync(e.parse(r))}function map(r,e){return function r(t,a,o){const n=Object.assign({},e(t,a,o));return n.children&&(n.children=n.children.map((e,t)=>r(e,t,n))),n}(r,null,null)}function transformInlineCode(r){return()=>e=>map(e,e=>{if("inlineCode"!==e.type)return e;const t=r.slice(e.position.start.offset,e.position.end.offset);const a=t.match(/^`+/)[0];return Object.assign({},e,{value:e.value.replace(/\s+/g," "),children:[{type:"text",value:e.value,position:{start:{line:e.position.start.line,column:e.position.start.column+a.length,offset:e.position.start.offset+a.length},end:{line:e.position.end.line,column:e.position.end.column-a.length,offset:e.position.end.offset-a.length}}}]})})}function restoreUnescapedCharacter(r){return()=>e=>map(e,e=>"text"!==e.type?e:Object.assign({},e,{value:"*"!==e.value&&"_"!==e.value&&1===e.value.length&&e.position.end.offset-e.position.start.offset>1?r.slice(e.position.start.offset,e.position.end.offset):e.value}))}function mergeContinuousTexts(){return r=>map(r,r=>{if(!r.children)return r;const e=r.children.reduce((r,e)=>{const t=r[r.length-1];t&&"text"===t.type&&"text"===e.type?r.splice(-1,1,{type:"text",value:t.value+e.value,position:{start:t.position.start,end:e.position.end}}):r.push(e);return r},[]);return Object.assign({},r,{children:e})})}function splitText(){return r=>map(r,(r,e,t)=>{if("text"!==r.type)return r;let a=r.value;"paragraph"===t.type&&(0===e&&(a=a.trimLeft()),e===t.children.length-1&&(a=a.trimRight()));return{type:"sentence",position:r.position,children:util$1$1.splitText(a)}})}var util$1=_interopDefault$1(util); var path$1=_interopDefault$1(path); var immutable=extend; var hasOwnProperty=Object.prototype.hasOwnProperty; var format=createCommonjsModule(function(r){!function(){function e(){console.log(a.apply(null,arguments));}function t(r,e){return a.apply(null,[r].concat(e))}function a(r){for(var e,t,a,o,n=1,i=[].slice.call(arguments),s=0,c=r.length,l="",u=!1,p=!1,d=function(){return i[n++]};s<c;++s)if(e=r[s],u)switch(u=!1,"."==e?(p=!1,e=r[++s]):"0"==e&&"."==r[s+1]?(p=!0,e=r[s+=2]):p=!0,o=function(){for(var t="";/\d/.test(r[s]);)t+=r[s++],e=r[s];return t.length>0?parseInt(t):null}(),e){case"b":l+=parseInt(d(),10).toString(2);break;case"c":"string"==typeof(t=d())||t instanceof String?l+=t:l+=String.fromCharCode(parseInt(t,10));break;case"d":l+=parseInt(d(),10);break;case"f":a=String(parseFloat(d()).toFixed(o||6)),l+=p?a:a.replace(/^0/,"");break;case"j":l+=JSON.stringify(d());break;case"o":l+="0"+parseInt(d(),10).toString(8);break;case"s":l+=d();break;case"x":l+="0x"+parseInt(d(),10).toString(16);break;case"X":l+="0x"+parseInt(d(),10).toString(16).toUpperCase();break;default:l+=e;}else"%"===e?u=!0:l+=e;return l}var o;(o=r.exports=a).format=a,o.vsprintf=t,"undefined"!=typeof console&&"function"==typeof console.log&&(o.printf=e);}();}); var formatter=format; var fault$1=create(Error); var index$2=fault$1;fault$1.eval=create(EvalError),fault$1.range=create(RangeError),fault$1.reference=create(ReferenceError),fault$1.syntax=create(SyntaxError),fault$1.type=create(TypeError),fault$1.uri=create(URIError),fault$1.create=create;var fault=index$2; var matters_1=matters$1; var own={}.hasOwnProperty; var markers={yaml:"-",toml:"+"}; var parse$2=create$1; var compile$1=create$2; var xtend=immutable; var matters=matters_1; var parse$1=parse$2; var compile=compile$1; var index=frontmatter; var inherits_browser=createCommonjsModule(function(r){"function"==typeof Object.create?r.exports=function(r,e){r.super_=e,r.prototype=Object.create(e.prototype,{constructor:{value:r,enumerable:!1,writable:!0,configurable:!0}});}:r.exports=function(r,e){r.super_=e;var t=function(){};t.prototype=e.prototype,r.prototype=new t,r.prototype.constructor=r;};}); var inherits$1=createCommonjsModule(function(r){try{var e=util$1;if("function"!=typeof e.inherits)throw"";r.exports=e.inherits;}catch(e){r.exports=inherits_browser;}}); var xtend$2=immutable; var inherits=inherits$1; var index$6=unherit$1; var index$8=factory; var index$10=factory$1; var _unescape=factory$2; var AEli="Æ"; var AElig="Æ"; var AM="&"; var AMP="&"; var Aacut="Á"; var Aacute="Á"; var Abreve="Ă"; var Acir="Â"; var Acirc="Â"; var Acy="А"; var Afr="𝔄"; var Agrav="À"; var Agrave="À"; var Alpha="Α"; var Amacr="Ā"; var And="⩓"; var Aogon="Ą"; var Aopf="𝔸"; var ApplyFunction="⁡"; var Arin="Å"; var Aring="Å"; var Ascr="𝒜"; var Assign="≔"; var Atild="Ã"; var Atilde="Ã"; var Aum="Ä"; var Auml="Ä"; var Backslash="∖"; var Barv="⫧"; var Barwed="⌆"; var Bcy="Б"; var Because="∵"; var Bernoullis="ℬ"; var Beta="Β"; var Bfr="𝔅"; var Bopf="𝔹"; var Breve="˘"; var Bscr="ℬ"; var Bumpeq="≎"; var CHcy="Ч"; var COP="©"; var COPY="©"; var Cacute="Ć"; var Cap="⋒"; var CapitalDifferentialD="ⅅ"; var Cayleys="ℭ"; var Ccaron="Č"; var Ccedi="Ç"; var Ccedil="Ç"; var Ccirc="Ĉ"; var Cconint="∰"; var Cdot="Ċ"; var Cedilla="¸"; var CenterDot="·"; var Cfr="ℭ"; var Chi="Χ"; var CircleDot="⊙"; var CircleMinus="⊖"; var CirclePlus="⊕"; var CircleTimes="⊗"; var ClockwiseContourIntegral="∲"; var CloseCurlyDoubleQuote="”"; var CloseCurlyQuote="’"; var Colon="∷"; var Colone="⩴"; var Congruent="≡"; var Conint="∯"; var ContourIntegral="∮"; var Copf="ℂ"; var Coproduct="∐"; var CounterClockwiseContourIntegral="∳"; var Cross="⨯"; var Cscr="𝒞"; var Cup="⋓"; var CupCap="≍"; var DD="ⅅ"; var DDotrahd="⤑"; var DJcy="Ђ"; var DScy="Ѕ"; var DZcy="Џ"; var Dagger="‡"; var Darr="↡"; var Dashv="⫤"; var Dcaron="Ď"; var Dcy="Д"; var Del="∇"; var Delta="Δ"; var Dfr="𝔇"; var DiacriticalAcute="´"; var DiacriticalDot="˙"; var DiacriticalDoubleAcute="˝"; var DiacriticalGrave="`"; var DiacriticalTilde="˜"; var Diamond="⋄"; var DifferentialD="ⅆ"; var Dopf="𝔻"; var Dot="¨"; var DotDot="⃜"; var DotEqual="≐"; var DoubleContourIntegral="∯"; var DoubleDot="¨"; var DoubleDownArrow="⇓"; var DoubleLeftArrow="⇐"; var DoubleLeftRightArrow="⇔"; var DoubleLeftTee="⫤"; var DoubleLongLeftArrow="⟸"; var DoubleLongLeftRightArrow="⟺"; var DoubleLongRightArrow="⟹"; var DoubleRightArrow="⇒"; var DoubleRightTee="⊨"; var DoubleUpArrow="⇑"; var DoubleUpDownArrow="⇕"; var DoubleVerticalBar="∥"; var DownArrow="↓"; var DownArrowBar="⤓"; var DownArrowUpArrow="⇵"; var DownBreve="̑"; var DownLeftRightVector="⥐"; var DownLeftTeeVector="⥞"; var DownLeftVector="↽"; var DownLeftVectorBar="⥖"; var DownRightTeeVector="⥟"; var DownRightVector="⇁"; var DownRightVectorBar="⥗"; var DownTee="⊤"; var DownTeeArrow="↧"; var Downarrow="⇓"; var Dscr="𝒟"; var Dstrok="Đ"; var ENG="Ŋ"; var ET="Ð"; var ETH="Ð"; var Eacut="É"; var Eacute="É"; var Ecaron="Ě"; var Ecir="Ê"; var Ecirc="Ê"; var Ecy="Э"; var Edot="Ė"; var Efr="𝔈"; var Egrav="È"; var Egrave="È"; var Element="∈"; var Emacr="Ē"; var EmptySmallSquare="◻"; var EmptyVerySmallSquare="▫"; var Eogon="Ę"; var Eopf="𝔼"; var Epsilon="Ε"; var Equal="⩵"; var EqualTilde="≂"; var Equilibrium="⇌"; var Escr="ℰ"; var Esim="⩳"; var Eta="Η"; var Eum="Ë"; var Euml="Ë"; var Exists="∃"; var ExponentialE="ⅇ"; var Fcy="Ф"; var Ffr="𝔉"; var FilledSmallSquare="◼"; var FilledVerySmallSquare="▪"; var Fopf="𝔽"; var ForAll="∀"; var Fouriertrf="ℱ"; var Fscr="ℱ"; var GJcy="Ѓ"; var G=">"; var GT=">"; var Gamma="Γ"; var Gammad="Ϝ"; var Gbreve="Ğ"; var Gcedil="Ģ"; var Gcirc="Ĝ"; var Gcy="Г"; var Gdot="Ġ"; var Gfr="𝔊"; var Gg="⋙"; var Gopf="𝔾"; var GreaterEqual="≥"; var GreaterEqualLess="⋛"; var GreaterFullEqual="≧"; var GreaterGreater="⪢"; var GreaterLess="≷"; var GreaterSlantEqual="⩾"; var GreaterTilde="≳"; var Gscr="𝒢"; var Gt="≫"; var HARDcy="Ъ"; var Hacek="ˇ"; var Hat="^"; var Hcirc="Ĥ"; var Hfr="ℌ"; var HilbertSpace="ℋ"; var Hopf="ℍ"; var HorizontalLine="─"; var Hscr="ℋ"; var Hstrok="Ħ"; var HumpDownHump="≎"; var HumpEqual="≏"; var IEcy="Е"; var IJlig="Ĳ"; var IOcy="Ё"; var Iacut="Í"; var Iacute="Í"; var Icir="Î"; var Icirc="Î"; var Icy="И"; var Idot="İ"; var Ifr="ℑ"; var Igrav="Ì"; var Igrave="Ì"; var Im="ℑ"; var Imacr="Ī"; var ImaginaryI="ⅈ"; var Implies="⇒"; var Int="∬"; var Integral="∫"; var Intersection="⋂"; var InvisibleComma="⁣"; var InvisibleTimes="⁢"; var Iogon="Į"; var Iopf="𝕀"; var Iota="Ι"; var Iscr="ℐ"; var Itilde="Ĩ"; var Iukcy="І"; var Ium="Ï"; var Iuml="Ï"; var Jcirc="Ĵ"; var Jcy="Й"; var Jfr="𝔍"; var Jopf="𝕁"; var Jscr="𝒥"; var Jsercy="Ј"; var Jukcy="Є"; var KHcy="Х"; var KJcy="Ќ"; var Kappa="Κ"; var Kcedil="Ķ"; var Kcy="К"; var Kfr="𝔎"; var Kopf="𝕂"; var Kscr="𝒦"; var LJcy="Љ"; var L="<"; var LT="<"; var Lacute="Ĺ"; var Lambda="Λ"; var Lang="⟪"; var Laplacetrf="ℒ"; var Larr="↞"; var Lcaron="Ľ"; var Lcedil="Ļ"; var Lcy="Л"; var LeftAngleBracket="⟨"; var LeftArrow="←"; var LeftArrowBar="⇤"; var LeftArrowRightArrow="⇆"; var LeftCeiling="⌈"; var LeftDoubleBracket="⟦"; var LeftDownTeeVector="⥡"; var LeftDownVector="⇃"; var LeftDownVectorBar="⥙"; var LeftFloor="⌊"; var LeftRightArrow="↔"; var LeftRightVector="⥎"; var LeftTee="⊣"; var LeftTeeArrow="↤"; var LeftTeeVector="⥚"; var LeftTriangle="⊲"; var LeftTriangleBar="⧏"; var LeftTriangleEqual="⊴"; var LeftUpDownVector="⥑"; var LeftUpTeeVector="⥠"; var LeftUpVector="↿"; var LeftUpVectorBar="⥘"; var LeftVector="↼"; var LeftVectorBar="⥒"; var Leftarrow="⇐"; var Leftrightarrow="⇔"; var LessEqualGreater="⋚"; var LessFullEqual="≦"; var LessGreater="≶"; var LessLess="⪡"; var LessSlantEqual="⩽"; var LessTilde="≲"; var Lfr="𝔏"; var Ll="⋘"; var Lleftarrow="⇚"; var Lmidot="Ŀ"; var LongLeftArrow="⟵"; var LongLeftRightArrow="⟷"; var LongRightArrow="⟶"; var Longleftarrow="⟸"; var Longleftrightarrow="⟺"; var Longrightarrow="⟹"; var Lopf="𝕃"; var LowerLeftArrow="↙"; var LowerRightArrow="↘"; var Lscr="ℒ"; var Lsh="↰"; var Lstrok="Ł"; var Lt="≪"; var Mcy="М"; var MediumSpace=" "; var Mellintrf="ℳ"; var Mfr="𝔐"; var MinusPlus="∓"; var Mopf="𝕄"; var Mscr="ℳ"; var Mu="Μ"; var NJcy="Њ"; var Nacute="Ń"; var Ncaron="Ň"; var Ncedil="Ņ"; var Ncy="Н"; var NegativeMediumSpace="​"; var NegativeThickSpace="​"; var NegativeThinSpace="​"; var NegativeVeryThinSpace="​"; var NestedGreaterGreater="≫"; var NestedLessLess="≪"; var NewLine="\n"; var Nfr="𝔑"; var NoBreak="⁠"; var NonBreakingSpace=" "; var Nopf="ℕ"; var Not="⫬"; var NotCongruent="≢"; var NotCupCap="≭"; var NotDoubleVerticalBar="∦"; var NotElement="∉"; var NotEqual="≠"; var NotEqualTilde="≂̸"; var NotExists="∄"; var NotGreater="≯"; var NotGreaterEqual="≱"; var NotGreaterFullEqual="≧̸"; var NotGreaterGreater="≫̸"; var NotGreaterLess="≹"; var NotGreaterSlantEqual="⩾̸"; var NotGreaterTilde="≵"; var NotHumpDownHump="≎̸"; var NotHumpEqual="≏̸"; var NotLeftTriangle="⋪"; var NotLeftTriangleBar="⧏̸"; var NotLeftTriangleEqual="⋬"; var NotLess="≮"; var NotLessEqual="≰"; var NotLessGreater="≸"; var NotLessLess="≪̸"; var NotLessSlantEqual="⩽̸"; var NotLessTilde="≴"; var NotNestedGreaterGreater="⪢̸"; var NotNestedLessLess="⪡̸"; var NotPrecedes="⊀"; var NotPrecedesEqual="⪯̸"; var NotPrecedesSlantEqual="⋠"; var NotReverseElement="∌"; var NotRightTriangle="⋫"; var NotRightTriangleBar="⧐̸"; var NotRightTriangleEqual="⋭"; var NotSquareSubset="⊏̸"; var NotSquareSubsetEqual="⋢"; var NotSquareSuperset="⊐̸"; var NotSquareSupersetEqual="⋣"; var NotSubset="⊂⃒"; var NotSubsetEqual="⊈"; var NotSucceeds="⊁"; var NotSucceedsEqual="⪰̸"; var NotSucceedsSlantEqual="⋡"; var NotSucceedsTilde="≿̸"; var NotSuperset="⊃⃒"; var NotSupersetEqual="⊉"; var NotTilde="≁"; var NotTildeEqual="≄"; var NotTildeFullEqual="≇"; var NotTildeTilde="≉"; var NotVerticalBar="∤"; var Nscr="𝒩"; var Ntild="Ñ"; var Ntilde="Ñ"; var Nu="Ν"; var OElig="Œ"; var Oacut="Ó"; var Oacute="Ó"; var Ocir="Ô"; var Ocirc="Ô"; var Ocy="О"; var Odblac="Ő"; var Ofr="𝔒"; var Ograv="Ò"; var Ograve="Ò"; var Omacr="Ō"; var Omega="Ω"; var Omicron="Ο"; var Oopf="𝕆"; var OpenCurlyDoubleQuote="“"; var OpenCurlyQuote="‘"; var Or="⩔"; var Oscr="𝒪"; var Oslas="Ø"; var Oslash="Ø"; var Otild="Õ"; var Otilde="Õ"; var Otimes="⨷"; var Oum="Ö"; var Ouml="Ö"; var OverBar="‾"; var OverBrace="⏞"; var OverBracket="⎴"; var OverParenthesis="⏜"; var PartialD="∂"; var Pcy="П"; var Pfr="𝔓"; var Phi="Φ"; var Pi="Π"; var PlusMinus="±"; var Poincareplane="ℌ"; var Popf="ℙ"; var Pr="⪻"; var Precedes="≺"; var PrecedesEqual="⪯"; var PrecedesSlantEqual="≼"; var PrecedesTilde="≾"; var Prime="″"; var Product="∏"; var Proportion="∷"; var Proportional="∝"; var Pscr="𝒫"; var Psi="Ψ"; var QUO='"'; var QUOT='"'; var Qfr="𝔔"; var Qopf="ℚ"; var Qscr="𝒬"; var RBarr="⤐"; var RE="®"; var REG="®"; var Racute="Ŕ"; var Rang="⟫"; var Rarr="↠"; var Rarrtl="⤖"; var Rcaron="Ř"; var Rcedil="Ŗ"; var Rcy="Р"; var Re="ℜ"; var ReverseElement="∋"; var ReverseEquilibrium="⇋"; var ReverseUpEquilibrium="⥯"; var Rfr="ℜ"; var Rho="Ρ"; var RightAngleBracket="⟩"; var RightArrow="→"; var RightArrowBar="⇥"; var RightArrowLeftArrow="⇄"; var RightCeiling="⌉"; var RightDoubleBracket="⟧"; var RightDownTeeVector="⥝"; var RightDownVector="⇂"; var RightDownVectorBar="⥕"; var RightFloor="⌋"; var RightTee="⊢"; var RightTeeArrow="↦"; var RightTeeVector="⥛"; var RightTriangle="⊳"; var RightTriangleBar="⧐"; var RightTriangleEqual="⊵"; var RightUpDownVector="⥏"; var RightUpTeeVector="⥜"; var RightUpVector="↾"; var RightUpVectorBar="⥔"; var RightVector="⇀"; var RightVectorBar="⥓"; var Rightarrow="⇒"; var Ropf="ℝ"; var RoundImplies="⥰"; var Rrightarrow="⇛"; var Rscr="ℛ"; var Rsh="↱"; var RuleDelayed="⧴"; var SHCHcy="Щ"; var SHcy="Ш"; var SOFTcy="Ь"; var Sacute="Ś"; var Sc="⪼"; var Scaron="Š"; var Scedil="Ş"; var Scirc="Ŝ"; var Scy="С"; var Sfr="𝔖"; var ShortDownArrow="↓"; var ShortLeftArrow="←"; var ShortRightArrow="→"; var ShortUpArrow="↑"; var Sigma="Σ"; var SmallCircle="∘"; var Sopf="𝕊"; var Sqrt="√"; var Square="□"; var SquareIntersection="⊓"; var SquareSubset="⊏"; var SquareSubsetEqual="⊑"; var SquareSuperset="⊐"; var SquareSupersetEqual="⊒"; var SquareUnion="⊔"; var Sscr="𝒮"; var Star="⋆"; var Sub="⋐"; var Subset="⋐"; var SubsetEqual="⊆"; var Succeeds="≻"; var SucceedsEqual="⪰"; var SucceedsSlantEqual="≽"; var SucceedsTilde="≿"; var SuchThat="∋"; var Sum="∑"; var Sup="⋑"; var Superset="⊃"; var SupersetEqual="⊇"; var Supset="⋑"; var THOR="Þ"; var THORN="Þ"; var TRADE="™"; var TSHcy="Ћ"; var TScy="Ц"; var Tab="\t"; var Tau="Τ"; var Tcaron="Ť"; var Tcedil="Ţ"; var Tcy="Т"; var Tfr="𝔗"; var Therefore="∴"; var Theta="Θ"; var ThickSpace="  "; var ThinSpace=" "; var Tilde="∼"; var TildeEqual="≃"; var TildeFullEqual="≅"; var TildeTilde="≈"; var Topf="𝕋"; var TripleDot="⃛"; var Tscr="𝒯"; var Tstrok="Ŧ"; var Uacut="Ú"; var Uacute="Ú"; var Uarr="↟"; var Uarrocir="⥉"; var Ubrcy="Ў"; var Ubreve="Ŭ"; var Ucir="Û"; var Ucirc="Û"; var Ucy="У"; var Udblac="Ű"; var Ufr="𝔘"; var Ugrav="Ù"; var Ugrave="Ù"; var Umacr="Ū"; var UnderBar="_"; var UnderBrace="⏟"; var UnderBracket="⎵"; var UnderParenthesis="⏝"; var Union="⋃"; var UnionPlus="⊎"; var Uogon="Ų"; var Uopf="𝕌"; var UpArrow="↑"; var UpArrowBar="⤒"; var UpArrowDownArrow="⇅"; var UpDownArrow="↕"; var UpEquilibrium="⥮"; var UpTee="⊥"; var UpTeeArrow="↥"; var Uparrow="⇑"; var Updownarrow="⇕"; var UpperLeftArrow="↖"; var UpperRightArrow="↗"; var Upsi="ϒ"; var Upsilon="Υ"; var Uring="Ů"; var Uscr="𝒰"; var Utilde="Ũ"; var Uum="Ü"; var Uuml="Ü"; var VDash="⊫"; var Vbar="⫫"; var Vcy="В"; var Vdash="⊩"; var Vdashl="⫦"; var Vee="⋁"; var Verbar="‖"; var Vert="‖"; var VerticalBar="∣"; var VerticalLine="|"; var VerticalSeparator="❘"; var VerticalTilde="≀"; var VeryThinSpace=" "; var Vfr="𝔙"; var Vopf="𝕍"; var Vscr="𝒱"; var Vvdash="⊪"; var Wcirc="Ŵ"; var Wedge="⋀"; var Wfr="𝔚"; var Wopf="𝕎"; var Wscr="𝒲"; var Xfr="𝔛"; var Xi="Ξ"; var Xopf="𝕏"; var Xscr="𝒳"; var YAcy="Я"; var YIcy="Ї"; var YUcy="Ю"; var Yacut="Ý"; var Yacute="Ý"; var Ycirc="Ŷ"; var Ycy="Ы"; var Yfr="𝔜"; var Yopf="𝕐"; var Yscr="𝒴"; var Yuml="Ÿ"; var ZHcy="Ж"; var Zacute="Ź"; var Zcaron="Ž"; var Zcy="З"; var Zdot="Ż"; var ZeroWidthSpace="​"; var Zeta="Ζ"; var Zfr="ℨ"; var Zopf="ℤ"; var Zscr="𝒵"; var aacut="á"; var aacute="á"; var abreve="ă"; var ac="∾"; var acE="∾̳"; var acd="∿"; var acir="â"; var acirc="â"; var acut="´"; var acute="´"; var acy="а"; var aeli="æ"; var aelig="æ"; var af="⁡"; var afr="𝔞"; var agrav="à"; var agrave="à"; var alefsym="ℵ"; var aleph="ℵ"; var alpha="α"; var amacr="ā"; var amalg="⨿"; var am="&"; var amp="&"; var and="∧"; var andand="⩕"; var andd="⩜"; var andslope="⩘"; var andv="⩚"; var ang="∠"; var ange="⦤"; var angle="∠"; var angmsd="∡"; var angmsdaa="⦨"; var angmsdab="⦩"; var angmsdac="⦪"; var angmsdad="⦫"; var angmsdae="⦬"; var angmsdaf="⦭"; var angmsdag="⦮"; var angmsdah="⦯"; var angrt="∟"; var angrtvb="⊾"; var angrtvbd="⦝"; var angsph="∢"; var angst="Å"; var angzarr="⍼"; var aogon="ą"; var aopf="𝕒"; var ap="≈"; var apE="⩰"; var apacir="⩯"; var ape="≊"; var apid="≋"; var apos="'"; var approx="≈"; var approxeq="≊"; var arin="å"; var aring="å"; var ascr="𝒶"; var ast="*"; var asymp="≈"; var asympeq="≍"; var atild="ã"; var atilde="ã"; var aum="ä"; var auml="ä"; var awconint="∳"; var awint="⨑"; var bNot="⫭"; var backcong="≌"; var backepsilon="϶"; var backprime="‵"; var backsim="∽"; var backsimeq="⋍"; var barvee="⊽"; var barwed="⌅"; var barwedge="⌅"; var bbrk="⎵"; var bbrktbrk="⎶"; var bcong="≌"; var bcy="б"; var bdquo="„"; var becaus="∵"; var because="∵"; var bemptyv="⦰"; var bepsi="϶"; var bernou="ℬ"; var beta="β"; var beth="ℶ"; var between="≬"; var bfr="𝔟"; var bigcap="⋂"; var bigcirc="◯"; var bigcup="⋃"; var bigodot="⨀"; var bigoplus="⨁"; var bigotimes="⨂"; var bigsqcup="⨆"; var bigstar="★"; var bigtriangledown="▽"; var bigtriangleup="△"; var biguplus="⨄"; var bigvee="⋁"; var bigwedge="⋀"; var bkarow="⤍"; var blacklozenge="⧫"; var blacksquare="▪"; var blacktriangle="▴"; var blacktriangledown="▾"; var blacktriangleleft="◂"; var blacktriangleright="▸"; var blank="␣"; var blk12="▒"; var blk14="░"; var blk34="▓"; var block="█"; var bne="=⃥"; var bnequiv="≡⃥"; var bnot="⌐"; var bopf="𝕓"; var bot="⊥"; var bottom="⊥"; var bowtie="⋈"; var boxDL="╗"; var boxDR="╔"; var boxDl="╖"; var boxDr="╓"; var boxH="═"; var boxHD="╦"; var boxHU="╩"; var boxHd="╤"; var boxHu="╧"; var boxUL="╝"; var boxUR="╚"; var boxUl="╜"; var boxUr="╙"; var boxV="║"; var boxVH="╬"; var boxVL="╣"; var boxVR="╠"; var boxVh="╫"; var boxVl="╢"; var boxVr="╟"; var boxbox="⧉"; var boxdL="╕"; var boxdR="╒"; var boxdl="┐"; var boxdr="┌"; var boxh="─"; var boxhD="╥"; var boxhU="╨"; var boxhd="┬"; var boxhu="┴"; var boxminus="⊟"; var boxplus="⊞"; var boxtimes="⊠"; var boxuL="╛"; var boxuR="╘"; var boxul="┘"; var boxur="└"; var boxv="│"; var boxvH="╪"; var boxvL="╡"; var boxvR="╞"; var boxvh="┼"; var boxvl="┤"; var boxvr="├"; var bprime="‵"; var breve="˘"; var brvba="¦"; var brvbar="¦"; var bscr="𝒷"; var bsemi="⁏"; var bsim="∽"; var bsime="⋍"; var bsol="\\"; var bsolb="⧅"; var bsolhsub="⟈"; var bull="•"; var bullet="•"; var bump="≎"; var bumpE="⪮"; var bumpe="≏"; var bumpeq="≏"; var cacute="ć"; var cap="∩"; var capand="⩄"; var capbrcup="⩉"; var capcap="⩋"; var capcup="⩇"; var capdot="⩀"; var caps="∩︀"; var caret="⁁"; var caron="ˇ"; var ccaps="⩍"; var ccaron="č"; var ccedi="ç"; var ccedil="ç"; var ccirc="ĉ"; var ccups="⩌"; var ccupssm="⩐"; var cdot="ċ"; var cedi="¸"; var cedil="¸"; var cemptyv="⦲"; var cen="¢"; var cent="¢"; var centerdot="·"; var cfr="𝔠"; var chcy="ч"; var check="✓"; var checkmark="✓"; var chi="χ"; var cir="○"; var cirE="⧃"; var circ="ˆ"; var circeq="≗"; var circlearrowleft="↺"; var circlearrowright="↻"; var circledR="®"; var circledS="Ⓢ"; var circledast="⊛"; var circledcirc="⊚"; var circleddash="⊝"; var cire="≗"; var cirfnint="⨐"; var cirmid="⫯"; var cirscir="⧂"; var clubs="♣"; var clubsuit="♣"; var colon=":"; var colone="≔"; var coloneq="≔"; var comma=","; var commat="@"; var comp="∁"; var compfn="∘"; var complement="∁"; var complexes="ℂ"; var cong="≅"; var congdot="⩭"; var conint="∮"; var copf="𝕔"; var coprod="∐"; var cop="©"; var copy="©"; var copysr="℗"; var crarr="↵"; var cross="✗"; var cscr="𝒸"; var csub="⫏"; var csube="⫑"; var csup="⫐"; var csupe="⫒"; var ctdot="⋯"; var cudarrl="⤸"; var cudarrr="⤵"; var cuepr="⋞"; var cuesc="⋟"; var cularr="↶"; var cularrp="⤽"; var cup="∪"; var cupbrcap="⩈"; var cupcap="⩆"; var cupcup="⩊"; var cupdot="⊍"; var cupor="⩅"; var cups="∪︀"; var curarr="↷"; var curarrm="⤼"; var curlyeqprec="⋞"; var curlyeqsucc="⋟"; var curlyvee="⋎"; var curlywedge="⋏"; var curre="¤"; var curren="¤"; var curvearrowleft="↶"; var curvearrowright="↷"; var cuvee="⋎"; var cuwed="⋏"; var cwconint="∲"; var cwint="∱"; var cylcty="⌭"; var dArr="⇓"; var dHar="⥥"; var dagger="†"; var daleth="ℸ"; var darr="↓"; var dash="‐"; var dashv="⊣"; var dbkarow="⤏"; var dblac="˝"; var dcaron="ď"; var dcy="д"; var dd="ⅆ"; var ddagger="‡"; var ddarr="⇊"; var ddotseq="⩷"; var de="°"; var deg="°"; var delta="δ"; var demptyv="⦱"; var dfisht="⥿"; var dfr="𝔡"; var dharl="⇃"; var dharr="⇂"; var diam="⋄"; var diamond="⋄"; var diamondsuit="♦"; var diams="♦"; var die="¨"; var digamma="ϝ"; var disin="⋲"; var div="÷"; var divid="÷"; var divide="÷"; var divideontimes="⋇"; var divonx="⋇"; var djcy="ђ"; var dlcorn="⌞"; var dlcrop="⌍"; var dollar="$"; var dopf="𝕕"; var dot="˙"; var doteq="≐"; var doteqdot="≑"; var dotminus="∸"; var dotplus="∔"; var dotsquare="⊡"; var doublebarwedge="⌆"; var downarrow="↓"; var downdownarrows="⇊"; var downharpoonleft="⇃"; var downharpoonright="⇂"; var drbkarow="⤐"; var drcorn="⌟"; var drcrop="⌌"; var dscr="𝒹"; var dscy="ѕ"; var dsol="⧶"; var dstrok="đ"; var dtdot="⋱"; var dtri="▿"; var dtrif="▾"; var duarr="⇵"; var duhar="⥯"; var dwangle="⦦"; var dzcy="џ"; var dzigrarr="⟿"; var eDDot="⩷"; var eDot="≑"; var eacut="é"; var eacute="é"; var easter="⩮"; var ecaron="ě"; var ecir="ê"; var ecirc="ê"; var ecolon="≕"; var ecy="э"; var edot="ė"; var ee="ⅇ"; var efDot="≒"; var efr="𝔢"; var eg="⪚"; var egrav="è"; var egrave="è"; var egs="⪖"; var egsdot="⪘"; var el="⪙"; var elinters="⏧"; var ell="ℓ"; var els="⪕"; var elsdot="⪗"; var emacr="ē"; var empty="∅"; var emptyset="∅"; var emptyv="∅"; var emsp13=" "; var emsp14=" "; var emsp=" "; var eng="ŋ"; var ensp=" "; var eogon="ę"; var eopf="𝕖"; var epar="⋕"; var eparsl="⧣"; var eplus="⩱"; var epsi="ε"; var epsilon="ε"; var epsiv="ϵ"; var eqcirc="≖"; var eqcolon="≕"; var eqsim="≂"; var eqslantgtr="⪖"; var eqslantless="⪕"; var equals="="; var equest="≟"; var equiv="≡"; var equivDD="⩸"; var eqvparsl="⧥"; var erDot="≓"; var erarr="⥱"; var escr="ℯ"; var esdot="≐"; var esim="≂"; var eta="η"; var et="ð"; var eth="ð"; var eum="ë"; var euml="ë"; var euro="€"; var excl="!"; var exist="∃"; var expectation="ℰ"; var exponentiale="ⅇ"; var fallingdotseq="≒"; var fcy="ф"; var female="♀"; var ffilig="ﬃ"; var fflig="ﬀ"; var ffllig="ﬄ"; var ffr="𝔣"; var filig="ﬁ"; var fjlig="fj"; var flat="♭"; var fllig="ﬂ"; var fltns="▱"; var fnof="ƒ"; var fopf="𝕗"; var forall="∀"; var fork="⋔"; var forkv="⫙"; var fpartint="⨍"; var frac1="¼"; var frac12="½"; var frac13="⅓"; var frac14="¼"; var frac15="⅕"; var frac16="⅙"; var frac18="⅛"; var frac23="⅔"; var frac25="⅖"; var frac3="¾"; var frac34="¾"; var frac35="⅗"; var frac38="⅜"; var frac45="⅘"; var frac56="⅚"; var frac58="⅝"; var frac78="⅞"; var frasl="⁄"; var frown="⌢"; var fscr="𝒻"; var gE="≧"; var gEl="⪌"; var gacute="ǵ"; var gamma="γ"; var gammad="ϝ"; var gap="⪆"; var gbreve="ğ"; var gcirc="ĝ"; var gcy="г"; var gdot="ġ"; var ge="≥"; var gel="⋛"; var geq="≥"; var geqq="≧"; var geqslant="⩾"; var ges="⩾"; var gescc="⪩"; var gesdot="⪀"; var gesdoto="⪂"; var gesdotol="⪄"; var gesl="⋛︀"; var gesles="⪔"; var gfr="𝔤"; var gg="≫"; var ggg="⋙"; var gimel="ℷ"; var gjcy="ѓ"; var gl="≷"; var glE="⪒"; var gla="⪥"; var glj="⪤"; var gnE="≩"; var gnap="⪊"; var gnapprox="⪊"; var gne="⪈"; var gneq="⪈"; var gneqq="≩"; var gnsim="⋧"; var gopf="𝕘"; var grave="`"; var gscr="ℊ"; var gsim="≳"; var gsime="⪎"; var gsiml="⪐"; var g=">"; var gt=">"; var gtcc="⪧"; var gtcir="⩺"; var gtdot="⋗"; var gtlPar="⦕"; var gtquest="⩼"; var gtrapprox="⪆"; var gtrarr="⥸"; var gtrdot="⋗"; var gtreqless="⋛"; var gtreqqless="⪌"; var gtrless="≷"; var gtrsim="≳"; var gvertneqq="≩︀"; var gvnE="≩︀"; var hArr="⇔"; var hairsp=" "; var half="½"; var hamilt="ℋ"; var hardcy="ъ"; var harr="↔"; var harrcir="⥈"; var harrw="↭"; var hbar="ℏ"; var hcirc="ĥ"; var hearts="♥"; var heartsuit="♥"; var hellip="…"; var hercon="⊹"; var hfr="𝔥"; var hksearow="⤥"; var hkswarow="⤦"; var hoarr="⇿"; var homtht="∻"; var hookleftarrow="↩"; var hookrightarrow="↪"; var hopf="𝕙"; var horbar="―"; var hscr="𝒽"; var hslash="ℏ"; var hstrok="ħ"; var hybull="⁃"; var hyphen="‐"; var iacut="í"; var iacute="í"; var ic="⁣"; var icir="î"; var icirc="î"; var icy="и"; var iecy="е"; var iexc="¡"; var iexcl="¡"; var iff="⇔"; var ifr="𝔦"; var igrav="ì"; var igrave="ì"; var ii="ⅈ"; var iiiint="⨌"; var iiint="∭"; var iinfin="⧜"; var iiota="℩"; var ijlig="ĳ"; var imacr="ī"; var image="ℑ"; var imagline="ℐ"; var imagpart="ℑ"; var imath="ı"; var imof="⊷"; var imped="Ƶ"; var incare="℅"; var infin="∞"; var infintie="⧝"; var inodot="ı"; var int="∫"; var intcal="⊺"; var integers="ℤ"; var intercal="⊺"; var intlarhk="⨗"; var intprod="⨼"; var iocy="ё"; var iogon="į"; var iopf="𝕚"; var iota="ι"; var iprod="⨼"; var iques="¿"; var iquest="¿"; var iscr="𝒾"; var isin="∈"; var isinE="⋹"; var isindot="⋵"; var isins="⋴"; var isinsv="⋳"; var isinv="∈"; var it="⁢"; var itilde="ĩ"; var iukcy="і"; var ium="ï"; var iuml="ï"; var jcirc="ĵ"; var jcy="й"; var jfr="𝔧"; var jmath="ȷ"; var jopf="𝕛"; var jscr="𝒿"; var jsercy="ј"; var jukcy="є"; var kappa="κ"; var kappav="ϰ"; var kcedil="ķ"; var kcy="к"; var kfr="𝔨"; var kgreen="ĸ"; var khcy="х"; var kjcy="ќ"; var kopf="𝕜"; var kscr="𝓀"; var lAarr="⇚"; var lArr="⇐"; var lAtail="⤛"; var lBarr="⤎"; var lE="≦"; var lEg="⪋"; var lHar="⥢"; var lacute="ĺ"; var laemptyv="⦴"; var lagran="ℒ"; var lambda="λ"; var lang="⟨"; var langd="⦑"; var langle="⟨"; var lap="⪅"; var laqu="«"; var laquo="«"; var larr="←"; var larrb="⇤"; var larrbfs="⤟"; var larrfs="⤝"; var larrhk="↩"; var larrlp="↫"; var larrpl="⤹"; var larrsim="⥳"; var larrtl="↢"; var lat="⪫"; var latail="⤙"; var late="⪭"; var lates="⪭︀"; var lbarr="⤌"; var lbbrk="❲"; var lbrace="{"; var lbrack="["; var lbrke="⦋"; var lbrksld="⦏"; var lbrkslu="⦍"; var lcaron="ľ"; var lcedil="ļ"; var lceil="⌈"; var lcub="{"; var lcy="л"; var ldca="⤶"; var ldquo="“"; var ldquor="„"; var ldrdhar="⥧"; var ldrushar="⥋"; var ldsh="↲"; var le="≤"; var leftarrow="←"; var leftarrowtail="↢"; var leftharpoondown="↽"; var leftharpoonup="↼"; var leftleftarrows="⇇"; var leftrightarrow="↔"; var leftrightarrows="⇆"; var leftrightharpoons="⇋"; var leftrightsquigarrow="↭"; var leftthreetimes="⋋"; var leg="⋚"; var leq="≤"; var leqq="≦"; var leqslant="⩽"; var les="⩽"; var lescc="⪨"; var lesdot="⩿"; var lesdoto="⪁"; var lesdotor="⪃"; var lesg="⋚︀"; var lesges="⪓"; var lessapprox="⪅"; var lessdot="⋖"; var lesseqgtr="⋚"; var lesseqqgtr="⪋"; var lessgtr="≶"; var lesssim="≲"; var lfisht="⥼"; var lfloor="⌊"; var lfr="𝔩"; var lg="≶"; var lgE="⪑"; var lhard="↽"; var lharu="↼"; var lharul="⥪"; var lhblk="▄"; var ljcy="љ"; var ll="≪"; var llarr="⇇"; var llcorner="⌞"; var llhard="⥫"; var lltri="◺"; var lmidot="ŀ"; var lmoust="⎰"; var lmoustache="⎰"; var lnE="≨"; var lnap="⪉"; var lnapprox="⪉"; var lne="⪇"; var lneq="⪇"; var lneqq="≨"; var lnsim="⋦"; var loang="⟬"; var loarr="⇽"; var lobrk="⟦"; var longleftarrow="⟵"; var longleftrightarrow="⟷"; var longmapsto="⟼"; var longrightarrow="⟶"; var looparrowleft="↫"; var looparrowright="↬"; var lopar="⦅"; var lopf="𝕝"; var loplus="⨭"; var lotimes="⨴"; var lowast="∗"; var lowbar="_"; var loz="◊"; var lozenge="◊"; var lozf="⧫"; var lpar="("; var lparlt="⦓"; var lrarr="⇆"; var lrcorner="⌟"; var lrhar="⇋"; var lrhard="⥭"; var lrm="‎"; var lrtri="⊿"; var lsaquo="‹"; var lscr="𝓁"; var lsh="↰"; var lsim="≲"; var lsime="⪍"; var lsimg="⪏"; var lsqb="["; var lsquo="‘"; var lsquor="‚"; var lstrok="ł"; var l="<"; var lt="<"; var ltcc="⪦"; var ltcir="⩹"; var ltdot="⋖"; var lthree="⋋"; var ltimes="⋉"; var ltlarr="⥶"; var ltquest="⩻"; var ltrPar="⦖"; var ltri="◃"; var ltrie="⊴"; var ltrif="◂"; var lurdshar="⥊"; var luruhar="⥦"; var lvertneqq="≨︀"; var lvnE="≨︀"; var mDDot="∺"; var mac="¯"; var macr="¯"; var male="♂"; var malt="✠"; var maltese="✠"; var map$1="↦"; var mapsto="↦"; var mapstodown="↧"; var mapstoleft="↤"; var mapstoup="↥"; var marker="▮"; var mcomma="⨩"; var mcy="м"; var mdash="—"; var measuredangle="∡"; var mfr="𝔪"; var mho="℧"; var micr="µ"; var micro="µ"; var mid="∣"; var midast="*"; var midcir="⫰"; var middo="·"; var middot="·"; var minus="−"; var minusb="⊟"; var minusd="∸"; var minusdu="⨪"; var mlcp="⫛"; var mldr="…"; var mnplus="∓"; var models="⊧"; var mopf="𝕞"; var mp="∓"; var mscr="𝓂"; var mstpos="∾"; var mu="μ"; var multimap="⊸"; var mumap="⊸"; var nGg="⋙̸"; var nGt="≫⃒"; var nGtv="≫̸"; var nLeftarrow="⇍"; var nLeftrightarrow="⇎"; var nLl="⋘̸"; var nLt="≪⃒"; var nLtv="≪̸"; var nRightarrow="⇏"; var nVDash="⊯"; var nVdash="⊮"; var nabla="∇"; var nacute="ń"; var nang="∠⃒"; var nap="≉"; var napE="⩰̸"; var napid="≋̸"; var napos="ŉ"; var napprox="≉"; var natur="♮"; var natural="♮"; var naturals="ℕ"; var nbs=" "; var nbsp=" "; var nbump="≎̸"; var nbumpe="≏̸"; var ncap="⩃"; var ncaron="ň"; var ncedil="ņ"; var ncong="≇"; var ncongdot="⩭̸"; var ncup="⩂"; var ncy="н"; var ndash="–"; var ne="≠"; var neArr="⇗"; var nearhk="⤤"; var nearr="↗"; var nearrow="↗"; var nedot="≐̸"; var nequiv="≢"; var nesear="⤨"; var nesim="≂̸"; var nexist="∄"; var nexists="∄"; var nfr="𝔫"; var ngE="≧̸"; var nge="≱"; var ngeq="≱"; var ngeqq="≧̸"; var ngeqslant="⩾̸"; var nges="⩾̸"; var ngsim="≵"; var ngt="≯"; var ngtr="≯"; var nhArr="⇎"; var nharr="↮"; var nhpar="⫲"; var ni="∋"; var nis="⋼"; var nisd="⋺"; var niv="∋"; var njcy="њ"; var nlArr="⇍"; var nlE="≦̸"; var nlarr="↚"; var nldr="‥"; var nle="≰"; var nleftarrow="↚"; var nleftrightarrow="↮"; var nleq="≰"; var nleqq="≦̸"; var nleqslant="⩽̸"; var nles="⩽̸"; var nless="≮"; var nlsim="≴"; var nlt="≮"; var nltri="⋪"; var nltrie="⋬"; var nmid="∤"; var nopf="𝕟"; var no="¬"; var not="¬"; var notin="∉"; var notinE="⋹̸"; var notindot="⋵̸"; var notinva="∉"; var notinvb="⋷"; var notinvc="⋶"; var notni="∌"; var notniva="∌"; var notnivb="⋾"; var notnivc="⋽"; var npar="∦"; var nparallel="∦"; var nparsl="⫽⃥"; var npart="∂̸"; var npolint="⨔"; var npr="⊀"; var nprcue="⋠"; var npre="⪯̸"; var nprec="⊀"; var npreceq="⪯̸"; var nrArr="⇏"; var nrarr="↛"; var nrarrc="⤳̸"; var nrarrw="↝̸"; var nrightarrow="↛"; var nrtri="⋫"; var nrtrie="⋭"; var nsc="⊁"; var nsccue="⋡"; var nsce="⪰̸"; var nscr="𝓃"; var nshortmid="∤"; var nshortparallel="∦"; var nsim="≁"; var nsime="≄"; var nsimeq="≄"; var nsmid="∤"; var nspar="∦"; var nsqsube="⋢"; var nsqsupe="⋣"; var nsub="⊄"; var nsubE="⫅̸"; var nsube="⊈"; var nsubset="⊂⃒"; var nsubseteq="⊈"; var nsubseteqq="⫅̸"; var nsucc="⊁"; var nsucceq="⪰̸"; var nsup="⊅"; var nsupE="⫆̸"; var nsupe="⊉"; var nsupset="⊃⃒"; var nsupseteq="⊉"; var nsupseteqq="⫆̸"; var ntgl="≹"; var ntild="ñ"; var ntilde="ñ"; var ntlg="≸"; var ntriangleleft="⋪"; var ntrianglelefteq="⋬"; var ntriangleright="⋫"; var ntrianglerighteq="⋭"; var nu="ν"; var num="#"; var numero="№"; var numsp=" "; var nvDash="⊭"; var nvHarr="⤄"; var nvap="≍⃒"; var nvdash="⊬"; var nvge="≥⃒"; var nvgt=">⃒"; var nvinfin="⧞"; var nvlArr="⤂"; var nvle="≤⃒"; var nvlt="<⃒"; var nvltrie="⊴⃒"; var nvrArr="⤃"; var nvrtrie="⊵⃒"; var nvsim="∼⃒"; var nwArr="⇖"; var nwarhk="⤣"; var nwarr="↖"; var nwarrow="↖"; var nwnear="⤧"; var oS="Ⓢ"; var oacut="ó"; var oacute="ó"; var oast="⊛"; var ocir="ô"; var ocirc="ô"; var ocy="о"; var odash="⊝"; var odblac="ő"; var odiv="⨸"; var odot="⊙"; var odsold="⦼"; var oelig="œ"; var ofcir="⦿"; var ofr="𝔬"; var ogon="˛"; var ograv="ò"; var ograve="ò"; var ogt="⧁"; var ohbar="⦵"; var ohm="Ω"; var oint="∮"; var olarr="↺"; var olcir="⦾"; var olcross="⦻"; var oline="‾"; var olt="⧀"; var omacr="ō"; var omega="ω"; var omicron="ο"; var omid="⦶"; var ominus="⊖"; var oopf="𝕠"; var opar="⦷"; var operp="⦹"; var oplus="⊕"; var or="∨"; var orarr="↻"; var ord="º"; var order="ℴ"; var orderof="ℴ"; var ordf="ª"; var ordm="º"; var origof="⊶"; var oror="⩖"; var orslope="⩗"; var orv="⩛"; var oscr="ℴ"; var oslas="ø"; var oslash="ø"; var osol="⊘"; var otild="õ"; var otilde="õ"; var otimes="⊗"; var otimesas="⨶"; var oum="ö"; var ouml="ö"; var ovbar="⌽"; var par="¶"; var para="¶"; var parallel="∥"; var parsim="⫳"; var parsl="⫽"; var part="∂"; var pcy="п"; var percnt="%"; var period="."; var permil="‰"; var perp="⊥"; var pertenk="‱"; var pfr="𝔭"; var phi="φ"; var phiv="ϕ"; var phmmat="ℳ"; var phone="☎"; var pi="π"; var pitchfork="⋔"; var piv="ϖ"; var planck="ℏ"; var planckh="ℎ"; var plankv="ℏ"; var plus="+"; var plusacir="⨣"; var plusb="⊞"; var pluscir="⨢"; var plusdo="∔"; var plusdu="⨥"; var pluse="⩲"; var plusm="±"; var plusmn="±"; var plussim="⨦"; var plustwo="⨧"; var pm="±"; var pointint="⨕"; var popf="𝕡"; var poun="£"; var pound="£"; var pr="≺"; var prE="⪳"; var prap="⪷"; var prcue="≼"; var pre="⪯"; var prec="≺"; var precapprox="⪷"; var preccurlyeq="≼"; var preceq="⪯"; var precnapprox="⪹"; var precneqq="⪵"; var precnsim="⋨"; var precsim="≾"; var prime="′"; var primes="ℙ"; var prnE="⪵"; var prnap="⪹"; var prnsim="⋨"; var prod="∏"; var profalar="⌮"; var profline="⌒"; var profsurf="⌓"; var prop="∝"; var propto="∝"; var prsim="≾"; var prurel="⊰"; var pscr="𝓅"; var psi="ψ"; var puncsp=" "; var qfr="𝔮"; var qint="⨌"; var qopf="𝕢"; var qprime="⁗"; var qscr="𝓆"; var quaternions="ℍ"; var quatint="⨖"; var quest="?"; var questeq="≟"; var quo='"'; var quot='"'; var rAarr="⇛"; var rArr="⇒"; var rAtail="⤜"; var rBarr="⤏"; var rHar="⥤"; var race="∽̱"; var racute="ŕ"; var radic="√"; var raemptyv="⦳"; var rang="⟩"; var rangd="⦒"; var range="⦥"; var rangle="⟩"; var raqu="»"; var raquo="»"; var rarr="→"; var rarrap="⥵"; var rarrb="⇥"; var rarrbfs="⤠"; var rarrc="⤳"; var rarrfs="⤞"; var rarrhk="↪"; var rarrlp="↬"; var rarrpl="⥅"; var rarrsim="⥴"; var rarrtl="↣"; var rarrw="↝"; var ratail="⤚"; var ratio="∶"; var rationals="ℚ"; var rbarr="⤍"; var rbbrk="❳"; var rbrace="}"; var rbrack="]"; var rbrke="⦌"; var rbrksld="⦎"; var rbrkslu="⦐"; var rcaron="ř"; var rcedil="ŗ"; var rceil="⌉"; var rcub="}"; var rcy="р"; var rdca="⤷"; var rdldhar="⥩"; var rdquo="”"; var rdquor="”"; var rdsh="↳"; var real="ℜ"; var realine="ℛ"; var realpart="ℜ"; var reals="ℝ"; var rect="▭"; var re="®"; var reg="®"; var rfisht="⥽"; var rfloor="⌋"; var rfr="𝔯"; var rhard="⇁"; var rharu="⇀"; var rharul="⥬"; var rho="ρ"; var rhov="ϱ"; var rightarrow="→"; var rightarrowtail="↣"; var rightharpoondown="⇁"; var rightharpoonup="⇀"; var rightleftarrows="⇄"; var rightleftharpoons="⇌"; var rightrightarrows="⇉"; var rightsquigarrow="↝"; var rightthreetimes="⋌"; var ring="˚"; var risingdotseq="≓"; var rlarr="⇄"; var rlhar="⇌"; var rlm="‏"; var rmoust="⎱"; var rmoustache="⎱"; var rnmid="⫮"; var roang="⟭"; var roarr="⇾"; var robrk="⟧"; var ropar="⦆"; var ropf="𝕣"; var roplus="⨮"; var rotimes="⨵"; var rpar=")"; var rpargt="⦔"; var rppolint="⨒"; var rrarr="⇉"; var rsaquo="›"; var rscr="𝓇"; var rsh="↱"; var rsqb="]"; var rsquo="’"; var rsquor="’"; var rthree="⋌"; var rtimes="⋊"; var rtri="▹"; var rtrie="⊵"; var rtrif="▸"; var rtriltri="⧎"; var ruluhar="⥨"; var rx="℞"; var sacute="ś"; var sbquo="‚"; var sc="≻"; var scE="⪴"; var scap="⪸"; var scaron="š"; var sccue="≽"; var sce="⪰"; var scedil="ş"; var scirc="ŝ"; var scnE="⪶"; var scnap="⪺"; var scnsim="⋩"; var scpolint="⨓"; var scsim="≿"; var scy="с"; var sdot="⋅"; var sdotb="⊡"; var sdote="⩦"; var seArr="⇘"; var searhk="⤥"; var searr="↘"; var searrow="↘"; var sec="§"; var sect="§"; var semi=";"; var seswar="⤩"; var setminus="∖"; var setmn="∖"; var sext="✶"; var sfr="𝔰"; var sfrown="⌢"; var sharp="♯"; var shchcy="щ"; var shcy="ш"; var shortmid="∣"; var shortparallel="∥"; var sh="­"; var shy="­"; var sigma="σ"; var sigmaf="ς"; var sigmav="ς"; var sim="∼"; var simdot="⩪"; var sime="≃"; var simeq="≃"; var simg="⪞"; var simgE="⪠"; var siml="⪝"; var simlE="⪟"; var simne="≆"; var simplus="⨤"; var simrarr="⥲"; var slarr="←"; var smallsetminus="∖"; var smashp="⨳"; var smeparsl="⧤"; var smid="∣"; var smile="⌣"; var smt="⪪"; var smte="⪬"; var smtes="⪬︀"; var softcy="ь"; var sol="/"; var solb="⧄"; var solbar="⌿"; var sopf="𝕤"; var spades="♠"; var spadesuit="♠"; var spar="∥"; var sqcap="⊓"; var sqcaps="⊓︀"; var sqcup="⊔"; var sqcups="⊔︀"; var sqsub="⊏"; var sqsube="⊑"; var sqsubset="⊏"; var sqsubseteq="⊑"; var sqsup="⊐"; var sqsupe="⊒"; var sqsupset="⊐"; var sqsupseteq="⊒"; var squ="□"; var square="□"; var squarf="▪"; var squf="▪"; var srarr="→"; var sscr="𝓈"; var ssetmn="∖"; var ssmile="⌣"; var sstarf="⋆"; var star="☆"; var starf="★"; var straightepsilon="ϵ"; var straightphi="ϕ"; var strns="¯"; var sub="⊂"; var subE="⫅"; var subdot="⪽"; var sube="⊆"; var subedot="⫃"; var submult="⫁"; var subnE="⫋"; var subne="⊊"; var subplus="⪿"; var subrarr="⥹"; var subset="⊂"; var subseteq="⊆"; var subseteqq="⫅"; var subsetneq="⊊"; var subsetneqq="⫋"; var subsim="⫇"; var subsub="⫕"; var subsup="⫓"; var succ="≻"; var succapprox="⪸"; var succcurlyeq="≽"; var succeq="⪰"; var succnapprox="⪺"; var succneqq="⪶"; var succnsim="⋩"; var succsim="≿"; var sum="∑"; var sung="♪"; var sup="⊃"; var sup1="¹"; var sup2="²"; var sup3="³"; var supE="⫆"; var supdot="⪾"; var supdsub="⫘"; var supe="⊇"; var supedot="⫄"; var suphsol="⟉"; var suphsub="⫗"; var suplarr="⥻"; var supmult="⫂"; var supnE="⫌"; var supne="⊋"; var supplus="⫀"; var supset="⊃"; var supseteq="⊇"; var supseteqq="⫆"; var supsetneq="⊋"; var supsetneqq="⫌"; var supsim="⫈"; var supsub="⫔"; var supsup="⫖"; var swArr="⇙"; var swarhk="⤦"; var swarr="↙"; var swarrow="↙"; var swnwar="⤪"; var szli="ß"; var szlig="ß"; var target="⌖"; var tau="τ"; var tbrk="⎴"; var tcaron="ť"; var tcedil="ţ"; var tcy="т"; var tdot="⃛"; var telrec="⌕"; var tfr="𝔱"; var there4="∴"; var therefore="∴"; var theta="θ"; var thetasym="ϑ"; var thetav="ϑ"; var thickapprox="≈"; var thicksim="∼"; var thinsp=" "; var thkap="≈"; var thksim="∼"; var thor="þ"; var thorn="þ"; var tilde="˜"; var time="×"; var times="×"; var timesb="⊠"; var timesbar="⨱"; var timesd="⨰"; var tint="∭"; var toea="⤨"; var top="⊤"; var topbot="⌶"; var topcir="⫱"; var topf="𝕥"; var topfork="⫚"; var tosa="⤩"; var tprime="‴"; var trade="™"; var triangle="▵"; var triangledown="▿"; var triangleleft="◃"; var trianglelefteq="⊴"; var triangleq="≜"; var triangleright="▹"; var trianglerighteq="⊵"; var tridot="◬"; var trie="≜"; var triminus="⨺"; var triplus="⨹"; var trisb="⧍"; var tritime="⨻"; var trpezium="⏢"; var tscr="𝓉"; var tscy="ц"; var tshcy="ћ"; var tstrok="ŧ"; var twixt="≬"; var twoheadleftarrow="↞"; var twoheadrightarrow="↠"; var uArr="⇑"; var uHar="⥣"; var uacut="ú"; var uacute="ú"; var uarr="↑"; var ubrcy="ў"; var ubreve="ŭ"; var ucir="û"; var ucirc="û"; var ucy="у"; var udarr="⇅"; var udblac="ű"; var udhar="⥮"; var ufisht="⥾"; var ufr="𝔲"; var ugrav="ù"; var ugrave="ù"; var uharl="↿"; var uharr="↾"; var uhblk="▀"; var ulcorn="⌜"; var ulcorner="⌜"; var ulcrop="⌏"; var ultri="◸"; var umacr="ū"; var um="¨"; var uml="¨"; var uogon="ų"; var uopf="𝕦"; var uparrow="↑"; var updownarrow="↕"; var upharpoonleft="↿"; var upharpoonright="↾"; var uplus="⊎"; var upsi="υ"; var upsih="ϒ"; var upsilon="υ"; var upuparrows="⇈"; var urcorn="⌝"; var urcorner="⌝"; var urcrop="⌎"; var uring="ů"; var urtri="◹"; var uscr="𝓊"; var utdot="⋰"; var utilde="ũ"; var utri="▵"; var utrif="▴"; var uuarr="⇈"; var uum="ü"; var uuml="ü"; var uwangle="⦧"; var vArr="⇕"; var vBar="⫨"; var vBarv="⫩"; var vDash="⊨"; var vangrt="⦜"; var varepsilon="ϵ"; var varkappa="ϰ"; var varnothing="∅"; var varphi="ϕ"; var varpi="ϖ"; var varpropto="∝"; var varr="↕"; var varrho="ϱ"; var varsigma="ς"; var varsubsetneq="⊊︀"; var varsubsetneqq="⫋︀"; var varsupsetneq="⊋︀"; var varsupsetneqq="⫌︀"; var vartheta="ϑ"; var vartriangleleft="⊲"; var vartriangleright="⊳"; var vcy="в"; var vdash="⊢"; var vee="∨"; var veebar="⊻"; var veeeq="≚"; var vellip="⋮"; var verbar="|"; var vert="|"; var vfr="𝔳"; var vltri="⊲"; var vnsub="⊂⃒"; var vnsup="⊃⃒"; var vopf="𝕧"; var vprop="∝"; var vrtri="⊳"; var vscr="𝓋"; var vsubnE="⫋︀"; var vsubne="⊊︀"; var vsupnE="⫌︀"; var vsupne="⊋︀"; var vzigzag="⦚"; var wcirc="ŵ"; var wedbar="⩟"; var wedge="∧"; var wedgeq="≙"; var weierp="℘"; var wfr="𝔴"; var wopf="𝕨"; var wp="℘"; var wr="≀"; var wreath="≀"; var wscr="𝓌"; var xcap="⋂"; var xcirc="◯"; var xcup="⋃"; var xdtri="▽"; var xfr="𝔵"; var xhArr="⟺"; var xharr="⟷"; var xi="ξ"; var xlArr="⟸"; var xlarr="⟵"; var xmap="⟼"; var xnis="⋻"; var xodot="⨀"; var xopf="𝕩"; var xoplus="⨁"; var xotime="⨂"; var xrArr="⟹"; var xrarr="⟶"; var xscr="𝓍"; var xsqcup="⨆"; var xuplus="⨄"; var xutri="△"; var xvee="⋁"; var xwedge="⋀"; var yacut="ý"; var yacute="ý"; var yacy="я"; var ycirc="ŷ"; var ycy="ы"; var ye="¥"; var yen="¥"; var yfr="𝔶"; var yicy="ї"; var yopf="𝕪"; var yscr="𝓎"; var yucy="ю"; var yum="ÿ"; var yuml="ÿ"; var zacute="ź"; var zcaron="ž"; var zcy="з"; var zdot="ż"; var zeetrf="ℨ"; var zeta="ζ"; var zfr="𝔷"; var zhcy="ж"; var zigrarr="⇝"; var zopf="𝕫"; var zscr="𝓏"; var zwj="‍"; var zwnj="‌"; var index$14={AEli:AEli,AElig:AElig,AM:AM,AMP:AMP,Aacut:Aacut,Aacute:Aacute,Abreve:Abreve,Acir:Acir,Acirc:Acirc,Acy:Acy,Afr:Afr,Agrav:Agrav,Agrave:Agrave,Alpha:Alpha,Amacr:Amacr,And:And,Aogon:Aogon,Aopf:Aopf,ApplyFunction:ApplyFunction,Arin:Arin,Aring:Aring,Ascr:Ascr,Assign:Assign,Atild:Atild,Atilde:Atilde,Aum:Aum,Auml:Auml,Backslash:Backslash,Barv:Barv,Barwed:Barwed,Bcy:Bcy,Because:Because,Bernoullis:Bernoullis,Beta:Beta,Bfr:Bfr,Bopf:Bopf,Breve:Breve,Bscr:Bscr,Bumpeq:Bumpeq,CHcy:CHcy,COP:COP,COPY:COPY,Cacute:Cacute,Cap:Cap,CapitalDifferentialD:CapitalDifferentialD,Cayleys:Cayleys,Ccaron:Ccaron,Ccedi:Ccedi,Ccedil:Ccedil,Ccirc:Ccirc,Cconint:Cconint,Cdot:Cdot,Cedilla:Cedilla,CenterDot:CenterDot,Cfr:Cfr,Chi:Chi,CircleDot:CircleDot,CircleMinus:CircleMinus,CirclePlus:CirclePlus,CircleTimes:CircleTimes,ClockwiseContourIntegral:ClockwiseContourIntegral,CloseCurlyDoubleQuote:CloseCurlyDoubleQuote,CloseCurlyQuote:CloseCurlyQuote,Colon:Colon,Colone:Colone,Congruent:Congruent,Conint:Conint,ContourIntegral:ContourIntegral,Copf:Copf,Coproduct:Coproduct,CounterClockwiseContourIntegral:CounterClockwiseContourIntegral,Cross:Cross,Cscr:Cscr,Cup:Cup,CupCap:CupCap,DD:DD,DDotrahd:DDotrahd,DJcy:DJcy,DScy:DScy,DZcy:DZcy,Dagger:Dagger,Darr:Darr,Dashv:Dashv,Dcaron:Dcaron,Dcy:Dcy,Del:Del,Delta:Delta,Dfr:Dfr,DiacriticalAcute:DiacriticalAcute,DiacriticalDot:DiacriticalDot,DiacriticalDoubleAcute:DiacriticalDoubleAcute,DiacriticalGrave:DiacriticalGrave,DiacriticalTilde:DiacriticalTilde,Diamond:Diamond,DifferentialD:DifferentialD,Dopf:Dopf,Dot:Dot,DotDot:DotDot,DotEqual:DotEqual,DoubleContourIntegral:DoubleContourIntegral,DoubleDot:DoubleDot,DoubleDownArrow:DoubleDownArrow,DoubleLeftArrow:DoubleLeftArrow,DoubleLeftRightArrow:DoubleLeftRightArrow,DoubleLeftTee:DoubleLeftTee,DoubleLongLeftArrow:DoubleLongLeftArrow,DoubleLongLeftRightArrow:DoubleLongLeftRightArrow,DoubleLongRightArrow:DoubleLongRightArrow,DoubleRightArrow:DoubleRightArrow,DoubleRightTee:DoubleRightTee,DoubleUpArrow:DoubleUpArrow,DoubleUpDownArrow:DoubleUpDownArrow,DoubleVerticalBar:DoubleVerticalBar,DownArrow:DownArrow,DownArrowBar:DownArrowBar,DownArrowUpArrow:DownArrowUpArrow,DownBreve:DownBreve,DownLeftRightVector:DownLeftRightVector,DownLeftTeeVector:DownLeftTeeVector,DownLeftVector:DownLeftVector,DownLeftVectorBar:DownLeftVectorBar,DownRightTeeVector:DownRightTeeVector,DownRightVector:DownRightVector,DownRightVectorBar:DownRightVectorBar,DownTee:DownTee,DownTeeArrow:DownTeeArrow,Downarrow:Downarrow,Dscr:Dscr,Dstrok:Dstrok,ENG:ENG,ET:ET,ETH:ETH,Eacut:Eacut,Eacute:Eacute,Ecaron:Ecaron,Ecir:Ecir,Ecirc:Ecirc,Ecy:Ecy,Edot:Edot,Efr:Efr,Egrav:Egrav,Egrave:Egrave,Element:Element,Emacr:Emacr,EmptySmallSquare:EmptySmallSquare,EmptyVerySmallSquare:EmptyVerySmallSquare,Eogon:Eogon,Eopf:Eopf,Epsilon:Epsilon,Equal:Equal,EqualTilde:EqualTilde,Equilibrium:Equilibrium,Escr:Escr,Esim:Esim,Eta:Eta,Eum:Eum,Euml:Euml,Exists:Exists,ExponentialE:ExponentialE,Fcy:Fcy,Ffr:Ffr,FilledSmallSquare:FilledSmallSquare,FilledVerySmallSquare:FilledVerySmallSquare,Fopf:Fopf,ForAll:ForAll,Fouriertrf:Fouriertrf,Fscr:Fscr,GJcy:GJcy,G:G,GT:GT,Gamma:Gamma,Gammad:Gammad,Gbreve:Gbreve,Gcedil:Gcedil,Gcirc:Gcirc,Gcy:Gcy,Gdot:Gdot,Gfr:Gfr,Gg:Gg,Gopf:Gopf,GreaterEqual:GreaterEqual,GreaterEqualLess:GreaterEqualLess,GreaterFullEqual:GreaterFullEqual,GreaterGreater:GreaterGreater,GreaterLess:GreaterLess,GreaterSlantEqual:GreaterSlantEqual,GreaterTilde:GreaterTilde,Gscr:Gscr,Gt:Gt,HARDcy:HARDcy,Hacek:Hacek,Hat:Hat,Hcirc:Hcirc,Hfr:Hfr,HilbertSpace:HilbertSpace,Hopf:Hopf,HorizontalLine:HorizontalLine,Hscr:Hscr,Hstrok:Hstrok,HumpDownHump:HumpDownHump,HumpEqual:HumpEqual,IEcy:IEcy,IJlig:IJlig,IOcy:IOcy,Iacut:Iacut,Iacute:Iacute,Icir:Icir,Icirc:Icirc,Icy:Icy,Idot:Idot,Ifr:Ifr,Igrav:Igrav,Igrave:Igrave,Im:Im,Imacr:Imacr,ImaginaryI:ImaginaryI,Implies:Implies,Int:Int,Integral:Integral,Intersection:Intersection,InvisibleComma:InvisibleComma,InvisibleTimes:InvisibleTimes,Iogon:Iogon,Iopf:Iopf,Iota:Iota,Iscr:Iscr,Itilde:Itilde,Iukcy:Iukcy,Ium:Ium,Iuml:Iuml,Jcirc:Jcirc,Jcy:Jcy,Jfr:Jfr,Jopf:Jopf,Jscr:Jscr,Jsercy:Jsercy,Jukcy:Jukcy,KHcy:KHcy,KJcy:KJcy,Kappa:Kappa,Kcedil:Kcedil,Kcy:Kcy,Kfr:Kfr,Kopf:Kopf,Kscr:Kscr,LJcy:LJcy,L:L,LT:LT,Lacute:Lacute,Lambda:Lambda,Lang:Lang,Laplacetrf:Laplacetrf,Larr:Larr,Lcaron:Lcaron,Lcedil:Lcedil,Lcy:Lcy,LeftAngleBracket:LeftAngleBracket,LeftArrow:LeftArrow,LeftArrowBar:LeftArrowBar,LeftArrowRightArrow:LeftArrowRightArrow,LeftCeiling:LeftCeiling,LeftDoubleBracket:LeftDoubleBracket,LeftDownTeeVector:LeftDownTeeVector,LeftDownVector:LeftDownVector,LeftDownVectorBar:LeftDownVectorBar,LeftFloor:LeftFloor,LeftRightArrow:LeftRightArrow,LeftRightVector:LeftRightVector,LeftTee:LeftTee,LeftTeeArrow:LeftTeeArrow,LeftTeeVector:LeftTeeVector,LeftTriangle:LeftTriangle,LeftTriangleBar:LeftTriangleBar,LeftTriangleEqual:LeftTriangleEqual,LeftUpDownVector:LeftUpDownVector,LeftUpTeeVector:LeftUpTeeVector,LeftUpVector:LeftUpVector,LeftUpVectorBar:LeftUpVectorBar,LeftVector:LeftVector,LeftVectorBar:LeftVectorBar,Leftarrow:Leftarrow,Leftrightarrow:Leftrightarrow,LessEqualGreater:LessEqualGreater,LessFullEqual:LessFullEqual,LessGreater:LessGreater,LessLess:LessLess,LessSlantEqual:LessSlantEqual,LessTilde:LessTilde,Lfr:Lfr,Ll:Ll,Lleftarrow:Lleftarrow,Lmidot:Lmidot,LongLeftArrow:LongLeftArrow,LongLeftRightArrow:LongLeftRightArrow,LongRightArrow:LongRightArrow,Longleftarrow:Longleftarrow,Longleftrightarrow:Longleftrightarrow,Longrightarrow:Longrightarrow,Lopf:Lopf,LowerLeftArrow:LowerLeftArrow,LowerRightArrow:LowerRightArrow,Lscr:Lscr,Lsh:Lsh,Lstrok:Lstrok,Lt:Lt,Mcy:Mcy,MediumSpace:MediumSpace,Mellintrf:Mellintrf,Mfr:Mfr,MinusPlus:MinusPlus,Mopf:Mopf,Mscr:Mscr,Mu:Mu,NJcy:NJcy,Nacute:Nacute,Ncaron:Ncaron,Ncedil:Ncedil,Ncy:Ncy,NegativeMediumSpace:NegativeMediumSpace,NegativeThickSpace:NegativeThickSpace,NegativeThinSpace:NegativeThinSpace,NegativeVeryThinSpace:NegativeVeryThinSpace,NestedGreaterGreater:NestedGreaterGreater,NestedLessLess:NestedLessLess,NewLine:NewLine,Nfr:Nfr,NoBreak:NoBreak,NonBreakingSpace:NonBreakingSpace,Nopf:Nopf,Not:Not,NotCongruent:NotCongruent,NotCupCap:NotCupCap,NotDoubleVerticalBar:NotDoubleVerticalBar,NotElement:NotElement,NotEqual:NotEqual,NotEqualTilde:NotEqualTilde,NotExists:NotExists,NotGreater:NotGreater,NotGreaterEqual:NotGreaterEqual,NotGreaterFullEqual:NotGreaterFullEqual,NotGreaterGreater:NotGreaterGreater,NotGreaterLess:NotGreaterLess,NotGreaterSlantEqual:NotGreaterSlantEqual,NotGreaterTilde:NotGreaterTilde,NotHumpDownHump:NotHumpDownHump,NotHumpEqual:NotHumpEqual,NotLeftTriangle:NotLeftTriangle,NotLeftTriangleBar:NotLeftTriangleBar,NotLeftTriangleEqual:NotLeftTriangleEqual,NotLess:NotLess,NotLessEqual:NotLessEqual,NotLessGreater:NotLessGreater,NotLessLess:NotLessLess,NotLessSlantEqual:NotLessSlantEqual,NotLessTilde:NotLessTilde,NotNestedGreaterGreater:NotNestedGreaterGreater,NotNestedLessLess:NotNestedLessLess,NotPrecedes:NotPrecedes,NotPrecedesEqual:NotPrecedesEqual,NotPrecedesSlantEqual:NotPrecedesSlantEqual,NotReverseElement:NotReverseElement,NotRightTriangle:NotRightTriangle,NotRightTriangleBar:NotRightTriangleBar,NotRightTriangleEqual:NotRightTriangleEqual,NotSquareSubset:NotSquareSubset,NotSquareSubsetEqual:NotSquareSubsetEqual,NotSquareSuperset:NotSquareSuperset,NotSquareSupersetEqual:NotSquareSupersetEqual,NotSubset:NotSubset,NotSubsetEqual:NotSubsetEqual,NotSucceeds:NotSucceeds,NotSucceedsEqual:NotSucceedsEqual,NotSucceedsSlantEqual:NotSucceedsSlantEqual,NotSucceedsTilde:NotSucceedsTilde,NotSuperset:NotSuperset,NotSupersetEqual:NotSupersetEqual,NotTilde:NotTilde,NotTildeEqual:NotTildeEqual,NotTildeFullEqual:NotTildeFullEqual,NotTildeTilde:NotTildeTilde,NotVerticalBar:NotVerticalBar,Nscr:Nscr,Ntild:Ntild,Ntilde:Ntilde,Nu:Nu,OElig:OElig,Oacut:Oacut,Oacute:Oacute,Ocir:Ocir,Ocirc:Ocirc,Ocy:Ocy,Odblac:Odblac,Ofr:Ofr,Ograv:Ograv,Ograve:Ograve,Omacr:Omacr,Omega:Omega,Omicron:Omicron,Oopf:Oopf,OpenCurlyDoubleQuote:OpenCurlyDoubleQuote,OpenCurlyQuote:OpenCurlyQuote,Or:Or,Oscr:Oscr,Oslas:Oslas,Oslash:Oslash,Otild:Otild,Otilde:Otilde,Otimes:Otimes,Oum:Oum,Ouml:Ouml,OverBar:OverBar,OverBrace:OverBrace,OverBracket:OverBracket,OverParenthesis:OverParenthesis,PartialD:PartialD,Pcy:Pcy,Pfr:Pfr,Phi:Phi,Pi:Pi,PlusMinus:PlusMinus,Poincareplane:Poincareplane,Popf:Popf,Pr:Pr,Precedes:Precedes,PrecedesEqual:PrecedesEqual,PrecedesSlantEqual:PrecedesSlantEqual,PrecedesTilde:PrecedesTilde,Prime:Prime,Product:Product,Proportion:Proportion,Proportional:Proportional,Pscr:Pscr,Psi:Psi,QUO:QUO,QUOT:QUOT,Qfr:Qfr,Qopf:Qopf,Qscr:Qscr,RBarr:RBarr,RE:RE,REG:REG,Racute:Racute,Rang:Rang,Rarr:Rarr,Rarrtl:Rarrtl,Rcaron:Rcaron,Rcedil:Rcedil,Rcy:Rcy,Re:Re,ReverseElement:ReverseElement,ReverseEquilibrium:ReverseEquilibrium,ReverseUpEquilibrium:ReverseUpEquilibrium,Rfr:Rfr,Rho:Rho,RightAngleBracket:RightAngleBracket,RightArrow:RightArrow,RightArrowBar:RightArrowBar,RightArrowLeftArrow:RightArrowLeftArrow,RightCeiling:RightCeiling,RightDoubleBracket:RightDoubleBracket,RightDownTeeVector:RightDownTeeVector,RightDownVector:RightDownVector,RightDownVectorBar:RightDownVectorBar,RightFloor:RightFloor,RightTee:RightTee,RightTeeArrow:RightTeeArrow,RightTeeVector:RightTeeVector,RightTriangle:RightTriangle,RightTriangleBar:RightTriangleBar,RightTriangleEqual:RightTriangleEqual,RightUpDownVector:RightUpDownVector,RightUpTeeVector:RightUpTeeVector,RightUpVector:RightUpVector,RightUpVectorBar:RightUpVectorBar,RightVector:RightVector,RightVectorBar:RightVectorBar,Rightarrow:Rightarrow,Ropf:Ropf,RoundImplies:RoundImplies,Rrightarrow:Rrightarrow,Rscr:Rscr,Rsh:Rsh,RuleDelayed:RuleDelayed,SHCHcy:SHCHcy,SHcy:SHcy,SOFTcy:SOFTcy,Sacute:Sacute,Sc:Sc,Scaron:Scaron,Scedil:Scedil,Scirc:Scirc,Scy:Scy,Sfr:Sfr,ShortDownArrow:ShortDownArrow,ShortLeftArrow:ShortLeftArrow,ShortRightArrow:ShortRightArrow,ShortUpArrow:ShortUpArrow,Sigma:Sigma,SmallCircle:SmallCircle,Sopf:Sopf,Sqrt:Sqrt,Square:Square,SquareIntersection:SquareIntersection,SquareSubset:SquareSubset,SquareSubsetEqual:SquareSubsetEqual,SquareSuperset:SquareSuperset,SquareSupersetEqual:SquareSupersetEqual,SquareUnion:SquareUnion,Sscr:Sscr,Star:Star,Sub:Sub,Subset:Subset,SubsetEqual:SubsetEqual,Succeeds:Succeeds,SucceedsEqual:SucceedsEqual,SucceedsSlantEqual:SucceedsSlantEqual,SucceedsTilde:SucceedsTilde,SuchThat:SuchThat,Sum:Sum,Sup:Sup,Superset:Superset,SupersetEqual:SupersetEqual,Supset:Supset,THOR:THOR,THORN:THORN,TRADE:TRADE,TSHcy:TSHcy,TScy:TScy,Tab:Tab,Tau:Tau,Tcaron:Tcaron,Tcedil:Tcedil,Tcy:Tcy,Tfr:Tfr,Therefore:Therefore,Theta:Theta,ThickSpace:ThickSpace,ThinSpace:ThinSpace,Tilde:Tilde,TildeEqual:TildeEqual,TildeFullEqual:TildeFullEqual,TildeTilde:TildeTilde,Topf:Topf,TripleDot:TripleDot,Tscr:Tscr,Tstrok:Tstrok,Uacut:Uacut,Uacute:Uacute,Uarr:Uarr,Uarrocir:Uarrocir,Ubrcy:Ubrcy,Ubreve:Ubreve,Ucir:Ucir,Ucirc:Ucirc,Ucy:Ucy,Udblac:Udblac,Ufr:Ufr,Ugrav:Ugrav,Ugrave:Ugrave,Umacr:Umacr,UnderBar:UnderBar,UnderBrace:UnderBrace,UnderBracket:UnderBracket,UnderParenthesis:UnderParenthesis,Union:Union,UnionPlus:UnionPlus,Uogon:Uogon,Uopf:Uopf,UpArrow:UpArrow,UpArrowBar:UpArrowBar,UpArrowDownArrow:UpArrowDownArrow,UpDownArrow:UpDownArrow,UpEquilibrium:UpEquilibrium,UpTee:UpTee,UpTeeArrow:UpTeeArrow,Uparrow:Uparrow,Updownarrow:Updownarrow,UpperLeftArrow:UpperLeftArrow,UpperRightArrow:UpperRightArrow,Upsi:Upsi,Upsilon:Upsilon,Uring:Uring,Uscr:Uscr,Utilde:Utilde,Uum:Uum,Uuml:Uuml,VDash:VDash,Vbar:Vbar,Vcy:Vcy,Vdash:Vdash,Vdashl:Vdashl,Vee:Vee,Verbar:Verbar,Vert:Vert,VerticalBar:VerticalBar,VerticalLine:VerticalLine,VerticalSeparator:VerticalSeparator,VerticalTilde:VerticalTilde,VeryThinSpace:VeryThinSpace,Vfr:Vfr,Vopf:Vopf,Vscr:Vscr,Vvdash:Vvdash,Wcirc:Wcirc,Wedge:Wedge,Wfr:Wfr,Wopf:Wopf,Wscr:Wscr,Xfr:Xfr,Xi:Xi,Xopf:Xopf,Xscr:Xscr,YAcy:YAcy,YIcy:YIcy,YUcy:YUcy,Yacut:Yacut,Yacute:Yacute,Ycirc:Ycirc,Ycy:Ycy,Yfr:Yfr,Yopf:Yopf,Yscr:Yscr,Yuml:Yuml,ZHcy:ZHcy,Zacute:Zacute,Zcaron:Zcaron,Zcy:Zcy,Zdot:Zdot,ZeroWidthSpace:ZeroWidthSpace,Zeta:Zeta,Zfr:Zfr,Zopf:Zopf,Zscr:Zscr,aacut:aacut,aacute:aacute,abreve:abreve,ac:ac,acE:acE,acd:acd,acir:acir,acirc:acirc,acut:acut,acute:acute,acy:acy,aeli:aeli,aelig:aelig,af:af,afr:afr,agrav:agrav,agrave:agrave,alefsym:alefsym,aleph:aleph,alpha:alpha,amacr:amacr,amalg:amalg,am:am,amp:amp,and:and,andand:andand,andd:andd,andslope:andslope,andv:andv,ang:ang,ange:ange,angle:angle,angmsd:angmsd,angmsdaa:angmsdaa,angmsdab:angmsdab,angmsdac:angmsdac,angmsdad:angmsdad,angmsdae:angmsdae,angmsdaf:angmsdaf,angmsdag:angmsdag,angmsdah:angmsdah,angrt:angrt,angrtvb:angrtvb,angrtvbd:angrtvbd,angsph:angsph,angst:angst,angzarr:angzarr,aogon:aogon,aopf:aopf,ap:ap,apE:apE,apacir:apacir,ape:ape,apid:apid,apos:apos,approx:approx,approxeq:approxeq,arin:arin,aring:aring,ascr:ascr,ast:ast,asymp:asymp,asympeq:asympeq,atild:atild,atilde:atilde,aum:aum,auml:auml,awconint:awconint,awint:awint,bNot:bNot,backcong:backcong,backepsilon:backepsilon,backprime:backprime,backsim:backsim,backsimeq:backsimeq,barvee:barvee,barwed:barwed,barwedge:barwedge,bbrk:bbrk,bbrktbrk:bbrktbrk,bcong:bcong,bcy:bcy,bdquo:bdquo,becaus:becaus,because:because,bemptyv:bemptyv,bepsi:bepsi,bernou:bernou,beta:beta,beth:beth,between:between,bfr:bfr,bigcap:bigcap,bigcirc:bigcirc,bigcup:bigcup,bigodot:bigodot,bigoplus:bigoplus,bigotimes:bigotimes,bigsqcup:bigsqcup,bigstar:bigstar,bigtriangledown:bigtriangledown,bigtriangleup:bigtriangleup,biguplus:biguplus,bigvee:bigvee,bigwedge:bigwedge,bkarow:bkarow,blacklozenge:blacklozenge,blacksquare:blacksquare,blacktriangle:blacktriangle,blacktriangledown:blacktriangledown,blacktriangleleft:blacktriangleleft,blacktriangleright:blacktriangleright,blank:blank,blk12:blk12,blk14:blk14,blk34:blk34,block:block,bne:bne,bnequiv:bnequiv,bnot:bnot,bopf:bopf,bot:bot,bottom:bottom,bowtie:bowtie,boxDL:boxDL,boxDR:boxDR,boxDl:boxDl,boxDr:boxDr,boxH:boxH,boxHD:boxHD,boxHU:boxHU,boxHd:boxHd,boxHu:boxHu,boxUL:boxUL,boxUR:boxUR,boxUl:boxUl,boxUr:boxUr,boxV:boxV,boxVH:boxVH,boxVL:boxVL,boxVR:boxVR,boxVh:boxVh,boxVl:boxVl,boxVr:boxVr,boxbox:boxbox,boxdL:boxdL,boxdR:boxdR,boxdl:boxdl,boxdr:boxdr,boxh:boxh,boxhD:boxhD,boxhU:boxhU,boxhd:boxhd,boxhu:boxhu,boxminus:boxminus,boxplus:boxplus,boxtimes:boxtimes,boxuL:boxuL,boxuR:boxuR,boxul:boxul,boxur:boxur,boxv:boxv,boxvH:boxvH,boxvL:boxvL,boxvR:boxvR,boxvh:boxvh,boxvl:boxvl,boxvr:boxvr,bprime:bprime,breve:breve,brvba:brvba,brvbar:brvbar,bscr:bscr,bsemi:bsemi,bsim:bsim,bsime:bsime,bsol:bsol,bsolb:bsolb,bsolhsub:bsolhsub,bull:bull,bullet:bullet,bump:bump,bumpE:bumpE,bumpe:bumpe,bumpeq:bumpeq,cacute:cacute,cap:cap,capand:capand,capbrcup:capbrcup,capcap:capcap,capcup:capcup,capdot:capdot,caps:caps,caret:caret,caron:caron,ccaps:ccaps,ccaron:ccaron,ccedi:ccedi,ccedil:ccedil,ccirc:ccirc,ccups:ccups,ccupssm:ccupssm,cdot:cdot,cedi:cedi,cedil:cedil,cemptyv:cemptyv,cen:cen,cent:cent,centerdot:centerdot,cfr:cfr,chcy:chcy,check:check,checkmark:checkmark,chi:chi,cir:cir,cirE:cirE,circ:circ,circeq:circeq,circlearrowleft:circlearrowleft,circlearrowright:circlearrowright,circledR:circledR,circledS:circledS,circledast:circledast,circledcirc:circledcirc,circleddash:circleddash,cire:cire,cirfnint:cirfnint,cirmid:cirmid,cirscir:cirscir,clubs:clubs,clubsuit:clubsuit,colon:colon,colone:colone,coloneq:coloneq,comma:comma,commat:commat,comp:comp,compfn:compfn,complement:complement,complexes:complexes,cong:cong,congdot:congdot,conint:conint,copf:copf,coprod:coprod,cop:cop,copy:copy,copysr:copysr,crarr:crarr,cross:cross,cscr:cscr,csub:csub,csube:csube,csup:csup,csupe:csupe,ctdot:ctdot,cudarrl:cudarrl,cudarrr:cudarrr,cuepr:cuepr,cuesc:cuesc,cularr:cularr,cularrp:cularrp,cup:cup,cupbrcap:cupbrcap,cupcap:cupcap,cupcup:cupcup,cupdot:cupdot,cupor:cupor,cups:cups,curarr:curarr,curarrm:curarrm,curlyeqprec:curlyeqprec,curlyeqsucc:curlyeqsucc,curlyvee:curlyvee,curlywedge:curlywedge,curre:curre,curren:curren,curvearrowleft:curvearrowleft,curvearrowright:curvearrowright,cuvee:cuvee,cuwed:cuwed,cwconint:cwconint,cwint:cwint,cylcty:cylcty,dArr:dArr,dHar:dHar,dagger:dagger,daleth:daleth,darr:darr,dash:dash,dashv:dashv,dbkarow:dbkarow,dblac:dblac,dcaron:dcaron,dcy:dcy,dd:dd,ddagger:ddagger,ddarr:ddarr,ddotseq:ddotseq,de:de,deg:deg,delta:delta,demptyv:demptyv,dfisht:dfisht,dfr:dfr,dharl:dharl,dharr:dharr,diam:diam,diamond:diamond,diamondsuit:diamondsuit,diams:diams,die:die,digamma:digamma,disin:disin,div:div,divid:divid,divide:divide,divideontimes:divideontimes,divonx:divonx,djcy:djcy,dlcorn:dlcorn,dlcrop:dlcrop,dollar:dollar,dopf:dopf,dot:dot,doteq:doteq,doteqdot:doteqdot,dotminus:dotminus,dotplus:dotplus,dotsquare:dotsquare,doublebarwedge:doublebarwedge,downarrow:downarrow,downdownarrows:downdownarrows,downharpoonleft:downharpoonleft,downharpoonright:downharpoonright,drbkarow:drbkarow,drcorn:drcorn,drcrop:drcrop,dscr:dscr,dscy:dscy,dsol:dsol,dstrok:dstrok,dtdot:dtdot,dtri:dtri,dtrif:dtrif,duarr:duarr,duhar:duhar,dwangle:dwangle,dzcy:dzcy,dzigrarr:dzigrarr,eDDot:eDDot,eDot:eDot,eacut:eacut,eacute:eacute,easter:easter,ecaron:ecaron,ecir:ecir,ecirc:ecirc,ecolon:ecolon,ecy:ecy,edot:edot,ee:ee,efDot:efDot,efr:efr,eg:eg,egrav:egrav,egrave:egrave,egs:egs,egsdot:egsdot,el:el,elinters:elinters,ell:ell,els:els,elsdot:elsdot,emacr:emacr,empty:empty,emptyset:emptyset,emptyv:emptyv,emsp13:emsp13,emsp14:emsp14,emsp:emsp,eng:eng,ensp:ensp,eogon:eogon,eopf:eopf,epar:epar,eparsl:eparsl,eplus:eplus,epsi:epsi,epsilon:epsilon,epsiv:epsiv,eqcirc:eqcirc,eqcolon:eqcolon,eqsim:eqsim,eqslantgtr:eqslantgtr,eqslantless:eqslantless,equals:equals,equest:equest,equiv:equiv,equivDD:equivDD,eqvparsl:eqvparsl,erDot:erDot,erarr:erarr,escr:escr,esdot:esdot,esim:esim,eta:eta,et:et,eth:eth,eum:eum,euml:euml,euro:euro,excl:excl,exist:exist,expectation:expectation,exponentiale:exponentiale,fallingdotseq:fallingdotseq,fcy:fcy,female:female,ffilig:ffilig,fflig:fflig,ffllig:ffllig,ffr:ffr,filig:filig,fjlig:fjlig,flat:flat,fllig:fllig,fltns:fltns,fnof:fnof,fopf:fopf,forall:forall,fork:fork,forkv:forkv,fpartint:fpartint,frac1:frac1,frac12:frac12,frac13:frac13,frac14:frac14,frac15:frac15,frac16:frac16,frac18:frac18,frac23:frac23,frac25:frac25,frac3:frac3,frac34:frac34,frac35:frac35,frac38:frac38,frac45:frac45,frac56:frac56,frac58:frac58,frac78:frac78,frasl:frasl,frown:frown,fscr:fscr,gE:gE,gEl:gEl,gacute:gacute,gamma:gamma,gammad:gammad,gap:gap,gbreve:gbreve,gcirc:gcirc,gcy:gcy,gdot:gdot,ge:ge,gel:gel,geq:geq,geqq:geqq,geqslant:geqslant,ges:ges,gescc:gescc,gesdot:gesdot,gesdoto:gesdoto,gesdotol:gesdotol,gesl:gesl,gesles:gesles,gfr:gfr,gg:gg,ggg:ggg,gimel:gimel,gjcy:gjcy,gl:gl,glE:glE,gla:gla,glj:glj,gnE:gnE,gnap:gnap,gnapprox:gnapprox,gne:gne,gneq:gneq,gneqq:gneqq,gnsim:gnsim,gopf:gopf,grave:grave,gscr:gscr,gsim:gsim,gsime:gsime,gsiml:gsiml,g:g,gt:gt,gtcc:gtcc,gtcir:gtcir,gtdot:gtdot,gtlPar:gtlPar,gtquest:gtquest,gtrapprox:gtrapprox,gtrarr:gtrarr,gtrdot:gtrdot,gtreqless:gtreqless,gtreqqless:gtreqqless,gtrless:gtrless,gtrsim:gtrsim,gvertneqq:gvertneqq,gvnE:gvnE,hArr:hArr,hairsp:hairsp,half:half,hamilt:hamilt,hardcy:hardcy,harr:harr,harrcir:harrcir,harrw:harrw,hbar:hbar,hcirc:hcirc,hearts:hearts,heartsuit:heartsuit,hellip:hellip,hercon:hercon,hfr:hfr,hksearow:hksearow,hkswarow:hkswarow,hoarr:hoarr,homtht:homtht,hookleftarrow:hookleftarrow,hookrightarrow:hookrightarrow,hopf:hopf,horbar:horbar,hscr:hscr,hslash:hslash,hstrok:hstrok,hybull:hybull,hyphen:hyphen,iacut:iacut,iacute:iacute,ic:ic,icir:icir,icirc:icirc,icy:icy,iecy:iecy,iexc:iexc,iexcl:iexcl,iff:iff,ifr:ifr,igrav:igrav,igrave:igrave,ii:ii,iiiint:iiiint,iiint:iiint,iinfin:iinfin,iiota:iiota,ijlig:ijlig,imacr:imacr,image:image,imagline:imagline,imagpart:imagpart,imath:imath,imof:imof,imped:imped,incare:incare,infin:infin,infintie:infintie,inodot:inodot,int:int,intcal:intcal,integers:integers,intercal:intercal,intlarhk:intlarhk,intprod:intprod,iocy:iocy,iogon:iogon,iopf:iopf,iota:iota,iprod:iprod,iques:iques,iquest:iquest,iscr:iscr,isin:isin,isinE:isinE,isindot:isindot,isins:isins,isinsv:isinsv,isinv:isinv,it:it,itilde:itilde,iukcy:iukcy,ium:ium,iuml:iuml,jcirc:jcirc,jcy:jcy,jfr:jfr,jmath:jmath,jopf:jopf,jscr:jscr,jsercy:jsercy,jukcy:jukcy,kappa:kappa,kappav:kappav,kcedil:kcedil,kcy:kcy,kfr:kfr,kgreen:kgreen,khcy:khcy,kjcy:kjcy,kopf:kopf,kscr:kscr,lAarr:lAarr,lArr:lArr,lAtail:lAtail,lBarr:lBarr,lE:lE,lEg:lEg,lHar:lHar,lacute:lacute,laemptyv:laemptyv,lagran:lagran,lambda:lambda,lang:lang,langd:langd,langle:langle,lap:lap,laqu:laqu,laquo:laquo,larr:larr,larrb:larrb,larrbfs:larrbfs,larrfs:larrfs,larrhk:larrhk,larrlp:larrlp,larrpl:larrpl,larrsim:larrsim,larrtl:larrtl,lat:lat,latail:latail,late:late,lates:lates,lbarr:lbarr,lbbrk:lbbrk,lbrace:lbrace,lbrack:lbrack,lbrke:lbrke,lbrksld:lbrksld,lbrkslu:lbrkslu,lcaron:lcaron,lcedil:lcedil,lceil:lceil,lcub:lcub,lcy:lcy,ldca:ldca,ldquo:ldquo,ldquor:ldquor,ldrdhar:ldrdhar,ldrushar:ldrushar,ldsh:ldsh,le:le,leftarrow:leftarrow,leftarrowtail:leftarrowtail,leftharpoondown:leftharpoondown,leftharpoonup:leftharpoonup,leftleftarrows:leftleftarrows,leftrightarrow:leftrightarrow,leftrightarrows:leftrightarrows,leftrightharpoons:leftrightharpoons,leftrightsquigarrow:leftrightsquigarrow,leftthreetimes:leftthreetimes,leg:leg,leq:leq,leqq:leqq,leqslant:leqslant,les:les,lescc:lescc,lesdot:lesdot,lesdoto:lesdoto,lesdotor:lesdotor,lesg:lesg,lesges:lesges,lessapprox:lessapprox,lessdot:lessdot,lesseqgtr:lesseqgtr,lesseqqgtr:lesseqqgtr,lessgtr:lessgtr,lesssim:lesssim,lfisht:lfisht,lfloor:lfloor,lfr:lfr,lg:lg,lgE:lgE,lhard:lhard,lharu:lharu,lharul:lharul,lhblk:lhblk,ljcy:ljcy,ll:ll,llarr:llarr,llcorner:llcorner,llhard:llhard,lltri:lltri,lmidot:lmidot,lmoust:lmoust,lmoustache:lmoustache,lnE:lnE,lnap:lnap,lnapprox:lnapprox,lne:lne,lneq:lneq,lneqq:lneqq,lnsim:lnsim,loang:loang,loarr:loarr,lobrk:lobrk,longleftarrow:longleftarrow,longleftrightarrow:longleftrightarrow,longmapsto:longmapsto,longrightarrow:longrightarrow,looparrowleft:looparrowleft,looparrowright:looparrowright,lopar:lopar,lopf:lopf,loplus:loplus,lotimes:lotimes,lowast:lowast,lowbar:lowbar,loz:loz,lozenge:lozenge,lozf:lozf,lpar:lpar,lparlt:lparlt,lrarr:lrarr,lrcorner:lrcorner,lrhar:lrhar,lrhard:lrhard,lrm:lrm,lrtri:lrtri,lsaquo:lsaquo,lscr:lscr,lsh:lsh,lsim:lsim,lsime:lsime,lsimg:lsimg,lsqb:lsqb,lsquo:lsquo,lsquor:lsquor,lstrok:lstrok,l:l,lt:lt,ltcc:ltcc,ltcir:ltcir,ltdot:ltdot,lthree:lthree,ltimes:ltimes,ltlarr:ltlarr,ltquest:ltquest,ltrPar:ltrPar,ltri:ltri,ltrie:ltrie,ltrif:ltrif,lurdshar:lurdshar,luruhar:luruhar,lvertneqq:lvertneqq,lvnE:lvnE,mDDot:mDDot,mac:mac,macr:macr,male:male,malt:malt,maltese:maltese,map:map$1,mapsto:mapsto,mapstodown:mapstodown,mapstoleft:mapstoleft,mapstoup:mapstoup,marker:marker,mcomma:mcomma,mcy:mcy,mdash:mdash,measuredangle:measuredangle,mfr:mfr,mho:mho,micr:micr,micro:micro,mid:mid,midast:midast,midcir:midcir,middo:middo,middot:middot,minus:minus,minusb:minusb,minusd:minusd,minusdu:minusdu,mlcp:mlcp,mldr:mldr,mnplus:mnplus,models:models,mopf:mopf,mp:mp,mscr:mscr,mstpos:mstpos,mu:mu,multimap:multimap,mumap:mumap,nGg:nGg,nGt:nGt,nGtv:nGtv,nLeftarrow:nLeftarrow,nLeftrightarrow:nLeftrightarrow,nLl:nLl,nLt:nLt,nLtv:nLtv,nRightarrow:nRightarrow,nVDash:nVDash,nVdash:nVdash,nabla:nabla,nacute:nacute,nang:nang,nap:nap,napE:napE,napid:napid,napos:napos,napprox:napprox,natur:natur,natural:natural,naturals:naturals,nbs:nbs,nbsp:nbsp,nbump:nbump,nbumpe:nbumpe,ncap:ncap,ncaron:ncaron,ncedil:ncedil,ncong:ncong,ncongdot:ncongdot,ncup:ncup,ncy:ncy,ndash:ndash,ne:ne,neArr:neArr,nearhk:nearhk,nearr:nearr,nearrow:nearrow,nedot:nedot,nequiv:nequiv,nesear:nesear,nesim:nesim,nexist:nexist,nexists:nexists,nfr:nfr,ngE:ngE,nge:nge,ngeq:ngeq,ngeqq:ngeqq,ngeqslant:ngeqslant,nges:nges,ngsim:ngsim,ngt:ngt,ngtr:ngtr,nhArr:nhArr,nharr:nharr,nhpar:nhpar,ni:ni,nis:nis,nisd:nisd,niv:niv,njcy:njcy,nlArr:nlArr,nlE:nlE,nlarr:nlarr,nldr:nldr,nle:nle,nleftarrow:nleftarrow,nleftrightarrow:nleftrightarrow,nleq:nleq,nleqq:nleqq,nleqslant:nleqslant,nles:nles,nless:nless,nlsim:nlsim,nlt:nlt,nltri:nltri,nltrie:nltrie,nmid:nmid,nopf:nopf,no:no,not:not,notin:notin,notinE:notinE,notindot:notindot,notinva:notinva,notinvb:notinvb,notinvc:notinvc,notni:notni,notniva:notniva,notnivb:notnivb,notnivc:notnivc,npar:npar,nparallel:nparallel,nparsl:nparsl,npart:npart,npolint:npolint,npr:npr,nprcue:nprcue,npre:npre,nprec:nprec,npreceq:npreceq,nrArr:nrArr,nrarr:nrarr,nrarrc:nrarrc,nrarrw:nrarrw,nrightarrow:nrightarrow,nrtri:nrtri,nrtrie:nrtrie,nsc:nsc,nsccue:nsccue,nsce:nsce,nscr:nscr,nshortmid:nshortmid,nshortparallel:nshortparallel,nsim:nsim,nsime:nsime,nsimeq:nsimeq,nsmid:nsmid,nspar:nspar,nsqsube:nsqsube,nsqsupe:nsqsupe,nsub:nsub,nsubE:nsubE,nsube:nsube,nsubset:nsubset,nsubseteq:nsubseteq,nsubseteqq:nsubseteqq,nsucc:nsucc,nsucceq:nsucceq,nsup:nsup,nsupE:nsupE,nsupe:nsupe,nsupset:nsupset,nsupseteq:nsupseteq,nsupseteqq:nsupseteqq,ntgl:ntgl,ntild:ntild,ntilde:ntilde,ntlg:ntlg,ntriangleleft:ntriangleleft,ntrianglelefteq:ntrianglelefteq,ntriangleright:ntriangleright,ntrianglerighteq:ntrianglerighteq,nu:nu,num:num,numero:numero,numsp:numsp,nvDash:nvDash,nvHarr:nvHarr,nvap:nvap,nvdash:nvdash,nvge:nvge,nvgt:nvgt,nvinfin:nvinfin,nvlArr:nvlArr,nvle:nvle,nvlt:nvlt,nvltrie:nvltrie,nvrArr:nvrArr,nvrtrie:nvrtrie,nvsim:nvsim,nwArr:nwArr,nwarhk:nwarhk,nwarr:nwarr,nwarrow:nwarrow,nwnear:nwnear,oS:oS,oacut:oacut,oacute:oacute,oast:oast,ocir:ocir,ocirc:ocirc,ocy:ocy,odash:odash,odblac:odblac,odiv:odiv,odot:odot,odsold:odsold,oelig:oelig,ofcir:ofcir,ofr:ofr,ogon:ogon,ograv:ograv,ograve:ograve,ogt:ogt,ohbar:ohbar,ohm:ohm,oint:oint,olarr:olarr,olcir:olcir,olcross:olcross,oline:oline,olt:olt,omacr:omacr,omega:omega,omicron:omicron,omid:omid,ominus:ominus,oopf:oopf,opar:opar,operp:operp,oplus:oplus,or:or,orarr:orarr,ord:ord,order:order,orderof:orderof,ordf:ordf,ordm:ordm,origof:origof,oror:oror,orslope:orslope,orv:orv,oscr:oscr,oslas:oslas,oslash:oslash,osol:osol,otild:otild,otilde:otilde,otimes:otimes,otimesas:otimesas,oum:oum,ouml:ouml,ovbar:ovbar,par:par,para:para,parallel:parallel,parsim:parsim,parsl:parsl,part:part,pcy:pcy,percnt:percnt,period:period,permil:permil,perp:perp,pertenk:pertenk,pfr:pfr,phi:phi,phiv:phiv,phmmat:phmmat,phone:phone,pi:pi,pitchfork:pitchfork,piv:piv,planck:planck,planckh:planckh,plankv:plankv,plus:plus,plusacir:plusacir,plusb:plusb,pluscir:pluscir,plusdo:plusdo,plusdu:plusdu,pluse:pluse,plusm:plusm,plusmn:plusmn,plussim:plussim,plustwo:plustwo,pm:pm,pointint:pointint,popf:popf,poun:poun,pound:pound,pr:pr,prE:prE,prap:prap,prcue:prcue,pre:pre,prec:prec,precapprox:precapprox,preccurlyeq:preccurlyeq,preceq:preceq,precnapprox:precnapprox,precneqq:precneqq,precnsim:precnsim,precsim:precsim,prime:prime,primes:primes,prnE:prnE,prnap:prnap,prnsim:prnsim,prod:prod,profalar:profalar,profline:profline,profsurf:profsurf,prop:prop,propto:propto,prsim:prsim,prurel:prurel,pscr:pscr,psi:psi,puncsp:puncsp,qfr:qfr,qint:qint,qopf:qopf,qprime:qprime,qscr:qscr,quaternions:quaternions,quatint:quatint,quest:quest,questeq:questeq,quo:quo,quot:quot,rAarr:rAarr,rArr:rArr,rAtail:rAtail,rBarr:rBarr,rHar:rHar,race:race,racute:racute,radic:radic,raemptyv:raemptyv,rang:rang,rangd:rangd,range:range,rangle:rangle,raqu:raqu,raquo:raquo,rarr:rarr,rarrap:rarrap,rarrb:rarrb,rarrbfs:rarrbfs,rarrc:rarrc,rarrfs:rarrfs,rarrhk:rarrhk,rarrlp:rarrlp,rarrpl:rarrpl,rarrsim:rarrsim,rarrtl:rarrtl,rarrw:rarrw,ratail:ratail,ratio:ratio,rationals:rationals,rbarr:rbarr,rbbrk:rbbrk,rbrace:rbrace,rbrack:rbrack,rbrke:rbrke,rbrksld:rbrksld,rbrkslu:rbrkslu,rcaron:rcaron,rcedil:rcedil,rceil:rceil,rcub:rcub,rcy:rcy,rdca:rdca,rdldhar:rdldhar,rdquo:rdquo,rdquor:rdquor,rdsh:rdsh,real:real,realine:realine,realpart:realpart,reals:reals,rect:rect,re:re,reg:reg,rfisht:rfisht,rfloor:rfloor,rfr:rfr,rhard:rhard,rharu:rharu,rharul:rharul,rho:rho,rhov:rhov,rightarrow:rightarrow,rightarrowtail:rightarrowtail,rightharpoondown:rightharpoondown,rightharpoonup:rightharpoonup,rightleftarrows:rightleftarrows,rightleftharpoons:rightleftharpoons,rightrightarrows:rightrightarrows,rightsquigarrow:rightsquigarrow,rightthreetimes:rightthreetimes,ring:ring,risingdotseq:risingdotseq,rlarr:rlarr,rlhar:rlhar,rlm:rlm,rmoust:rmoust,rmoustache:rmoustache,rnmid:rnmid,roang:roang,roarr:roarr,robrk:robrk,ropar:ropar,ropf:ropf,roplus:roplus,rotimes:rotimes,rpar:rpar,rpargt:rpargt,rppolint:rppolint,rrarr:rrarr,rsaquo:rsaquo,rscr:rscr,rsh:rsh,rsqb:rsqb,rsquo:rsquo,rsquor:rsquor,rthree:rthree,rtimes:rtimes,rtri:rtri,rtrie:rtrie,rtrif:rtrif,rtriltri:rtriltri,ruluhar:ruluhar,rx:rx,sacute:sacute,sbquo:sbquo,sc:sc,scE:scE,scap:scap,scaron:scaron,sccue:sccue,sce:sce,scedil:scedil,scirc:scirc,scnE:scnE,scnap:scnap,scnsim:scnsim,scpolint:scpolint,scsim:scsim,scy:scy,sdot:sdot,sdotb:sdotb,sdote:sdote,seArr:seArr,searhk:searhk,searr:searr,searrow:searrow,sec:sec,sect:sect,semi:semi,seswar:seswar,setminus:setminus,setmn:setmn,sext:sext,sfr:sfr,sfrown:sfrown,sharp:sharp,shchcy:shchcy,shcy:shcy,shortmid:shortmid,shortparallel:shortparallel,sh:sh,shy:shy,sigma:sigma,sigmaf:sigmaf,sigmav:sigmav,sim:sim,simdot:simdot,sime:sime,simeq:simeq,simg:simg,simgE:simgE,siml:siml,simlE:simlE,simne:simne,simplus:simplus,simrarr:simrarr,slarr:slarr,smallsetminus:smallsetminus,smashp:smashp,smeparsl:smeparsl,smid:smid,smile:smile,smt:smt,smte:smte,smtes:smtes,softcy:softcy,sol:sol,solb:solb,solbar:solbar,sopf:sopf,spades:spades,spadesuit:spadesuit,spar:spar,sqcap:sqcap,sqcaps:sqcaps,sqcup:sqcup,sqcups:sqcups,sqsub:sqsub,sqsube:sqsube,sqsubset:sqsubset,sqsubseteq:sqsubseteq,sqsup:sqsup,sqsupe:sqsupe,sqsupset:sqsupset,sqsupseteq:sqsupseteq,squ:squ,square:square,squarf:squarf,squf:squf,srarr:srarr,sscr:sscr,ssetmn:ssetmn,ssmile:ssmile,sstarf:sstarf,star:star,starf:starf,straightepsilon:straightepsilon,straightphi:straightphi,strns:strns,sub:sub,subE:subE,subdot:subdot,sube:sube,subedot:subedot,submult:submult,subnE:subnE,subne:subne,subplus:subplus,subrarr:subrarr,subset:subset,subseteq:subseteq,subseteqq:subseteqq,subsetneq:subsetneq,subsetneqq:subsetneqq,subsim:subsim,subsub:subsub,subsup:subsup,succ:succ,succapprox:succapprox,succcurlyeq:succcurlyeq,succeq:succeq,succnapprox:succnapprox,succneqq:succneqq,succnsim:succnsim,succsim:succsim,sum:sum,sung:sung,sup:sup,sup1:sup1,sup2:sup2,sup3:sup3,supE:supE,supdot:supdot,supdsub:supdsub,supe:supe,supedot:supedot,suphsol:suphsol,suphsub:suphsub,suplarr:suplarr,supmult:supmult,supnE:supnE,supne:supne,supplus:supplus,supset:supset,supseteq:supseteq,supseteqq:supseteqq,supsetneq:supsetneq,supsetneqq:supsetneqq,supsim:supsim,supsub:supsub,supsup:supsup,swArr:swArr,swarhk:swarhk,swarr:swarr,swarrow:swarrow,swnwar:swnwar,szli:szli,szlig:szlig,target:target,tau:tau,tbrk:tbrk,tcaron:tcaron,tcedil:tcedil,tcy:tcy,tdot:tdot,telrec:telrec,tfr:tfr,there4:there4,therefore:therefore,theta:theta,thetasym:thetasym,thetav:thetav,thickapprox:thickapprox,thicksim:thicksim,thinsp:thinsp,thkap:thkap,thksim:thksim,thor:thor,thorn:thorn,tilde:tilde,time:time,times:times,timesb:timesb,timesbar:timesbar,timesd:timesd,tint:tint,toea:toea,top:top,topbot:topbot,topcir:topcir,topf:topf,topfork:topfork,tosa:tosa,tprime:tprime,trade:trade,triangle:triangle,triangledown:triangledown,triangleleft:triangleleft,trianglelefteq:trianglelefteq,triangleq:triangleq,triangleright:triangleright,trianglerighteq:trianglerighteq,tridot:tridot,trie:trie,triminus:triminus,triplus:triplus,trisb:trisb,tritime:tritime,trpezium:trpezium,tscr:tscr,tscy:tscy,tshcy:tshcy,tstrok:tstrok,twixt:twixt,twoheadleftarrow:twoheadleftarrow,twoheadrightarrow:twoheadrightarrow,uArr:uArr,uHar:uHar,uacut:uacut,uacute:uacute,uarr:uarr,ubrcy:ubrcy,ubreve:ubreve,ucir:ucir,ucirc:ucirc,ucy:ucy,udarr:udarr,udblac:udblac,udhar:udhar,ufisht:ufisht,ufr:ufr,ugrav:ugrav,ugrave:ugrave,uharl:uharl,uharr:uharr,uhblk:uhblk,ulcorn:ulcorn,ulcorner:ulcorner,ulcrop:ulcrop,ultri:ultri,umacr:umacr,um:um,uml:uml,uogon:uogon,uopf:uopf,uparrow:uparrow,updownarrow:updownarrow,upharpoonleft:upharpoonleft,upharpoonright:upharpoonright,uplus:uplus,upsi:upsi,upsih:upsih,upsilon:upsilon,upuparrows:upuparrows,urcorn:urcorn,urcorner:urcorner,urcrop:urcrop,uring:uring,urtri:urtri,uscr:uscr,utdot:utdot,utilde:utilde,utri:utri,utrif:utrif,uuarr:uuarr,uum:uum,uuml:uuml,uwangle:uwangle,vArr:vArr,vBar:vBar,vBarv:vBarv,vDash:vDash,vangrt:vangrt,varepsilon:varepsilon,varkappa:varkappa,varnothing:varnothing,varphi:varphi,varpi:varpi,varpropto:varpropto,varr:varr,varrho:varrho,varsigma:varsigma,varsubsetneq:varsubsetneq,varsubsetneqq:varsubsetneqq,varsupsetneq:varsupsetneq,varsupsetneqq:varsupsetneqq,vartheta:vartheta,vartriangleleft:vartriangleleft,vartriangleright:vartriangleright,vcy:vcy,vdash:vdash,vee:vee,veebar:veebar,veeeq:veeeq,vellip:vellip,verbar:verbar,vert:vert,vfr:vfr,vltri:vltri,vnsub:vnsub,vnsup:vnsup,vopf:vopf,vprop:vprop,vrtri:vrtri,vscr:vscr,vsubnE:vsubnE,vsubne:vsubne,vsupnE:vsupnE,vsupne:vsupne,vzigzag:vzigzag,wcirc:wcirc,wedbar:wedbar,wedge:wedge,wedgeq:wedgeq,weierp:weierp,wfr:wfr,wopf:wopf,wp:wp,wr:wr,wreath:wreath,wscr:wscr,xcap:xcap,xcirc:xcirc,xcup:xcup,xdtri:xdtri,xfr:xfr,xhArr:xhArr,xharr:xharr,xi:xi,xlArr:xlArr,xlarr:xlarr,xmap:xmap,xnis:xnis,xodot:xodot,xopf:xopf,xoplus:xoplus,xotime:xotime,xrArr:xrArr,xrarr:xrarr,xscr:xscr,xsqcup:xsqcup,xuplus:xuplus,xutri:xutri,xvee:xvee,xwedge:xwedge,yacut:yacut,yacute:yacute,yacy:yacy,ycirc:ycirc,ycy:ycy,ye:ye,yen:yen,yfr:yfr,yicy:yicy,yopf:yopf,yscr:yscr,yucy:yucy,yum:yum,yuml:yuml,zacute:zacute,zcaron:zcaron,zcy:zcy,zdot:zdot,zeetrf:zeetrf,zeta:zeta,zfr:zfr,zhcy:zhcy,zigrarr:zigrarr,zopf:zopf,zscr:zscr,zwj:zwj,zwnj:zwnj,Map:"⤅",in:"∈"}; var index$15=Object.freeze({AEli:AEli,AElig:AElig,AM:AM,AMP:AMP,Aacut:Aacut,Aacute:Aacute,Abreve:Abreve,Acir:Acir,Acirc:Acirc,Acy:Acy,Afr:Afr,Agrav:Agrav,Agrave:Agrave,Alpha:Alpha,Amacr:Amacr,And:And,Aogon:Aogon,Aopf:Aopf,ApplyFunction:ApplyFunction,Arin:Arin,Aring:Aring,Ascr:Ascr,Assign:Assign,Atild:Atild,Atilde:Atilde,Aum:Aum,Auml:Auml,Backslash:Backslash,Barv:Barv,Barwed:Barwed,Bcy:Bcy,Because:Because,Bernoullis:Bernoullis,Beta:Beta,Bfr:Bfr,Bopf:Bopf,Breve:Breve,Bscr:Bscr,Bumpeq:Bumpeq,CHcy:CHcy,COP:COP,COPY:COPY,Cacute:Cacute,Cap:Cap,CapitalDifferentialD:CapitalDifferentialD,Cayleys:Cayleys,Ccaron:Ccaron,Ccedi:Ccedi,Ccedil:Ccedil,Ccirc:Ccirc,Cconint:Cconint,Cdot:Cdot,Cedilla:Cedilla,CenterDot:CenterDot,Cfr:Cfr,Chi:Chi,CircleDot:CircleDot,CircleMinus:CircleMinus,CirclePlus:CirclePlus,CircleTimes:CircleTimes,ClockwiseContourIntegral:ClockwiseContourIntegral,CloseCurlyDoubleQuote:CloseCurlyDoubleQuote,CloseCurlyQuote:CloseCurlyQuote,Colon:Colon,Colone:Colone,Congruent:Congruent,Conint:Conint,ContourIntegral:ContourIntegral,Copf:Copf,Coproduct:Coproduct,CounterClockwiseContourIntegral:CounterClockwiseContourIntegral,Cross:Cross,Cscr:Cscr,Cup:Cup,CupCap:CupCap,DD:DD,DDotrahd:DDotrahd,DJcy:DJcy,DScy:DScy,DZcy:DZcy,Dagger:Dagger,Darr:Darr,Dashv:Dashv,Dcaron:Dcaron,Dcy:Dcy,Del:Del,Delta:Delta,Dfr:Dfr,DiacriticalAcute:DiacriticalAcute,DiacriticalDot:DiacriticalDot,DiacriticalDoubleAcute:DiacriticalDoubleAcute,DiacriticalGrave:DiacriticalGrave,DiacriticalTilde:DiacriticalTilde,Diamond:Diamond,DifferentialD:DifferentialD,Dopf:Dopf,Dot:Dot,DotDot:DotDot,DotEqual:DotEqual,DoubleContourIntegral:DoubleContourIntegral,DoubleDot:DoubleDot,DoubleDownArrow:DoubleDownArrow,DoubleLeftArrow:DoubleLeftArrow,DoubleLeftRightArrow:DoubleLeftRightArrow,DoubleLeftTee:DoubleLeftTee,DoubleLongLeftArrow:DoubleLongLeftArrow,DoubleLongLeftRightArrow:DoubleLongLeftRightArrow,DoubleLongRightArrow:DoubleLongRightArrow,DoubleRightArrow:DoubleRightArrow,DoubleRightTee:DoubleRightTee,DoubleUpArrow:DoubleUpArrow,DoubleUpDownArrow:DoubleUpDownArrow,DoubleVerticalBar:DoubleVerticalBar,DownArrow:DownArrow,DownArrowBar:DownArrowBar,DownArrowUpArrow:DownArrowUpArrow,DownBreve:DownBreve,DownLeftRightVector:DownLeftRightVector,DownLeftTeeVector:DownLeftTeeVector,DownLeftVector:DownLeftVector,DownLeftVectorBar:DownLeftVectorBar,DownRightTeeVector:DownRightTeeVector,DownRightVector:DownRightVector,DownRightVectorBar:DownRightVectorBar,DownTee:DownTee,DownTeeArrow:DownTeeArrow,Downarrow:Downarrow,Dscr:Dscr,Dstrok:Dstrok,ENG:ENG,ET:ET,ETH:ETH,Eacut:Eacut,Eacute:Eacute,Ecaron:Ecaron,Ecir:Ecir,Ecirc:Ecirc,Ecy:Ecy,Edot:Edot,Efr:Efr,Egrav:Egrav,Egrave:Egrave,Element:Element,Emacr:Emacr,EmptySmallSquare:EmptySmallSquare,EmptyVerySmallSquare:EmptyVerySmallSquare,Eogon:Eogon,Eopf:Eopf,Epsilon:Epsilon,Equal:Equal,EqualTilde:EqualTilde,Equilibrium:Equilibrium,Escr:Escr,Esim:Esim,Eta:Eta,Eum:Eum,Euml:Euml,Exists:Exists,ExponentialE:ExponentialE,Fcy:Fcy,Ffr:Ffr,FilledSmallSquare:FilledSmallSquare,FilledVerySmallSquare:FilledVerySmallSquare,Fopf:Fopf,ForAll:ForAll,Fouriertrf:Fouriertrf,Fscr:Fscr,GJcy:GJcy,G:G,GT:GT,Gamma:Gamma,Gammad:Gammad,Gbreve:Gbreve,Gcedil:Gcedil,Gcirc:Gcirc,Gcy:Gcy,Gdot:Gdot,Gfr:Gfr,Gg:Gg,Gopf:Gopf,GreaterEqual:GreaterEqual,GreaterEqualLess:GreaterEqualLess,GreaterFullEqual:GreaterFullEqual,GreaterGreater:GreaterGreater,GreaterLess:GreaterLess,GreaterSlantEqual:GreaterSlantEqual,GreaterTilde:GreaterTilde,Gscr:Gscr,Gt:Gt,HARDcy:HARDcy,Hacek:Hacek,Hat:Hat,Hcirc:Hcirc,Hfr:Hfr,HilbertSpace:HilbertSpace,Hopf:Hopf,HorizontalLine:HorizontalLine,Hscr:Hscr,Hstrok:Hstrok,HumpDownHump:HumpDownHump,HumpEqual:HumpEqual,IEcy:IEcy,IJlig:IJlig,IOcy:IOcy,Iacut:Iacut,Iacute:Iacute,Icir:Icir,Icirc:Icirc,Icy:Icy,Idot:Idot,Ifr:Ifr,Igrav:Igrav,Igrave:Igrave,Im:Im,Imacr:Imacr,ImaginaryI:ImaginaryI,Implies:Implies,Int:Int,Integral:Integral,Intersection:Intersection,InvisibleComma:InvisibleComma,InvisibleTimes:InvisibleTimes,Iogon:Iogon,Iopf:Iopf,Iota:Iota,Iscr:Iscr,Itilde:Itilde,Iukcy:Iukcy,Ium:Ium,Iuml:Iuml,Jcirc:Jcirc,Jcy:Jcy,Jfr:Jfr,Jopf:Jopf,Jscr:Jscr,Jsercy:Jsercy,Jukcy:Jukcy,KHcy:KHcy,KJcy:KJcy,Kappa:Kappa,Kcedil:Kcedil,Kcy:Kcy,Kfr:Kfr,Kopf:Kopf,Kscr:Kscr,LJcy:LJcy,L:L,LT:LT,Lacute:Lacute,Lambda:Lambda,Lang:Lang,Laplacetrf:Laplacetrf,Larr:Larr,Lcaron:Lcaron,Lcedil:Lcedil,Lcy:Lcy,LeftAngleBracket:LeftAngleBracket,LeftArrow:LeftArrow,LeftArrowBar:LeftArrowBar,LeftArrowRightArrow:LeftArrowRightArrow,LeftCeiling:LeftCeiling,LeftDoubleBracket:LeftDoubleBracket,LeftDownTeeVector:LeftDownTeeVector,LeftDownVector:LeftDownVector,LeftDownVectorBar:LeftDownVectorBar,LeftFloor:LeftFloor,LeftRightArrow:LeftRightArrow,LeftRightVector:LeftRightVector,LeftTee:LeftTee,LeftTeeArrow:LeftTeeArrow,LeftTeeVector:LeftTeeVector,LeftTriangle:LeftTriangle,LeftTriangleBar:LeftTriangleBar,LeftTriangleEqual:LeftTriangleEqual,LeftUpDownVector:LeftUpDownVector,LeftUpTeeVector:LeftUpTeeVector,LeftUpVector:LeftUpVector,LeftUpVectorBar:LeftUpVectorBar,LeftVector:LeftVector,LeftVectorBar:LeftVectorBar,Leftarrow:Leftarrow,Leftrightarrow:Leftrightarrow,LessEqualGreater:LessEqualGreater,LessFullEqual:LessFullEqual,LessGreater:LessGreater,LessLess:LessLess,LessSlantEqual:LessSlantEqual,LessTilde:LessTilde,Lfr:Lfr,Ll:Ll,Lleftarrow:Lleftarrow,Lmidot:Lmidot,LongLeftArrow:LongLeftArrow,LongLeftRightArrow:LongLeftRightArrow,LongRightArrow:LongRightArrow,Longleftarrow:Longleftarrow,Longleftrightarrow:Longleftrightarrow,Longrightarrow:Longrightarrow,Lopf:Lopf,LowerLeftArrow:LowerLeftArrow,LowerRightArrow:LowerRightArrow,Lscr:Lscr,Lsh:Lsh,Lstrok:Lstrok,Lt:Lt,Mcy:Mcy,MediumSpace:MediumSpace,Mellintrf:Mellintrf,Mfr:Mfr,MinusPlus:MinusPlus,Mopf:Mopf,Mscr:Mscr,Mu:Mu,NJcy:NJcy,Nacute:Nacute,Ncaron:Ncaron,Ncedil:Ncedil,Ncy:Ncy,NegativeMediumSpace:NegativeMediumSpace,NegativeThickSpace:NegativeThickSpace,NegativeThinSpace:NegativeThinSpace,NegativeVeryThinSpace:NegativeVeryThinSpace,NestedGreaterGreater:NestedGreaterGreater,NestedLessLess:NestedLessLess,NewLine:NewLine,Nfr:Nfr,NoBreak:NoBreak,NonBreakingSpace:NonBreakingSpace,Nopf:Nopf,Not:Not,NotCongruent:NotCongruent,NotCupCap:NotCupCap,NotDoubleVerticalBar:NotDoubleVerticalBar,NotElement:NotElement,NotEqual:NotEqual,NotEqualTilde:NotEqualTilde,NotExists:NotExists,NotGreater:NotGreater,NotGreaterEqual:NotGreaterEqual,NotGreaterFullEqual:NotGreaterFullEqual,NotGreaterGreater:NotGreaterGreater,NotGreaterLess:NotGreaterLess,NotGreaterSlantEqual:NotGreaterSlantEqual,NotGreaterTilde:NotGreaterTilde,NotHumpDownHump:NotHumpDownHump,NotHumpEqual:NotHumpEqual,NotLeftTriangle:NotLeftTriangle,NotLeftTriangleBar:NotLeftTriangleBar,NotLeftTriangleEqual:NotLeftTriangleEqual,NotLess:NotLess,NotLessEqual:NotLessEqual,NotLessGreater:NotLessGreater,NotLessLess:NotLessLess,NotLessSlantEqual:NotLessSlantEqual,NotLessTilde:NotLessTilde,NotNestedGreaterGreater:NotNestedGreaterGreater,NotNestedLessLess:NotNestedLessLess,NotPrecedes:NotPrecedes,NotPrecedesEqual:NotPrecedesEqual,NotPrecedesSlantEqual:NotPrecedesSlantEqual,NotReverseElement:NotReverseElement,NotRightTriangle:NotRightTriangle,NotRightTriangleBar:NotRightTriangleBar,NotRightTriangleEqual:NotRightTriangleEqual,NotSquareSubset:NotSquareSubset,NotSquareSubsetEqual:NotSquareSubsetEqual,NotSquareSuperset:NotSquareSuperset,NotSquareSupersetEqual:NotSquareSupersetEqual,NotSubset:NotSubset,NotSubsetEqual:NotSubsetEqual,NotSucceeds:NotSucceeds,NotSucceedsEqual:NotSucceedsEqual,NotSucceedsSlantEqual:NotSucceedsSlantEqual,NotSucceedsTilde:NotSucceedsTilde,NotSuperset:NotSuperset,NotSupersetEqual:NotSupersetEqual,NotTilde:NotTilde,NotTildeEqual:NotTildeEqual,NotTildeFullEqual:NotTildeFullEqual,NotTildeTilde:NotTildeTilde,NotVerticalBar:NotVerticalBar,Nscr:Nscr,Ntild:Ntild,Ntilde:Ntilde,Nu:Nu,OElig:OElig,Oacut:Oacut,Oacute:Oacute,Ocir:Ocir,Ocirc:Ocirc,Ocy:Ocy,Odblac:Odblac,Ofr:Ofr,Ograv:Ograv,Ograve:Ograve,Omacr:Omacr,Omega:Omega,Omicron:Omicron,Oopf:Oopf,OpenCurlyDoubleQuote:OpenCurlyDoubleQuote,OpenCurlyQuote:OpenCurlyQuote,Or:Or,Oscr:Oscr,Oslas:Oslas,Oslash:Oslash,Otild:Otild,Otilde:Otilde,Otimes:Otimes,Oum:Oum,Ouml:Ouml,OverBar:OverBar,OverBrace:OverBrace,OverBracket:OverBracket,OverParenthesis:OverParenthesis,PartialD:PartialD,Pcy:Pcy,Pfr:Pfr,Phi:Phi,Pi:Pi,PlusMinus:PlusMinus,Poincareplane:Poincareplane,Popf:Popf,Pr:Pr,Precedes:Precedes,PrecedesEqual:PrecedesEqual,PrecedesSlantEqual:PrecedesSlantEqual,PrecedesTilde:PrecedesTilde,Prime:Prime,Product:Product,Proportion:Proportion,Proportional:Proportional,Pscr:Pscr,Psi:Psi,QUO:QUO,QUOT:QUOT,Qfr:Qfr,Qopf:Qopf,Qscr:Qscr,RBarr:RBarr,RE:RE,REG:REG,Racute:Racute,Rang:Rang,Rarr:Rarr,Rarrtl:Rarrtl,Rcaron:Rcaron,Rcedil:Rcedil,Rcy:Rcy,Re:Re,ReverseElement:ReverseElement,ReverseEquilibrium:ReverseEquilibrium,ReverseUpEquilibrium:ReverseUpEquilibrium,Rfr:Rfr,Rho:Rho,RightAngleBracket:RightAngleBracket,RightArrow:RightArrow,RightArrowBar:RightArrowBar,RightArrowLeftArrow:RightArrowLeftArrow,RightCeiling:RightCeiling,RightDoubleBracket:RightDoubleBracket,RightDownTeeVector:RightDownTeeVector,RightDownVector:RightDownVector,RightDownVectorBar:RightDownVectorBar,RightFloor:RightFloor,RightTee:RightTee,RightTeeArrow:RightTeeArrow,RightTeeVector:RightTeeVector,RightTriangle:RightTriangle,RightTriangleBar:RightTriangleBar,RightTriangleEqual:RightTriangleEqual,RightUpDownVector:RightUpDownVector,RightUpTeeVector:RightUpTeeVector,RightUpVector:RightUpVector,RightUpVectorBar:RightUpVectorBar,RightVector:RightVector,RightVectorBar:RightVectorBar,Rightarrow:Rightarrow,Ropf:Ropf,RoundImplies:RoundImplies,Rrightarrow:Rrightarrow,Rscr:Rscr,Rsh:Rsh,RuleDelayed:RuleDelayed,SHCHcy:SHCHcy,SHcy:SHcy,SOFTcy:SOFTcy,Sacute:Sacute,Sc:Sc,Scaron:Scaron,Scedil:Scedil,Scirc:Scirc,Scy:Scy,Sfr:Sfr,ShortDownArrow:ShortDownArrow,ShortLeftArrow:ShortLeftArrow,ShortRightArrow:ShortRightArrow,ShortUpArrow:ShortUpArrow,Sigma:Sigma,SmallCircle:SmallCircle,Sopf:Sopf,Sqrt:Sqrt,Square:Square,SquareIntersection:SquareIntersection,SquareSubset:SquareSubset,SquareSubsetEqual:SquareSubsetEqual,SquareSuperset:SquareSuperset,SquareSupersetEqual:SquareSupersetEqual,SquareUnion:SquareUnion,Sscr:Sscr,Star:Star,Sub:Sub,Subset:Subset,SubsetEqual:SubsetEqual,Succeeds:Succeeds,SucceedsEqual:SucceedsEqual,SucceedsSlantEqual:SucceedsSlantEqual,SucceedsTilde:SucceedsTilde,SuchThat:SuchThat,Sum:Sum,Sup:Sup,Superset:Superset,SupersetEqual:SupersetEqual,Supset:Supset,THOR:THOR,THORN:THORN,TRADE:TRADE,TSHcy:TSHcy,TScy:TScy,Tab:Tab,Tau:Tau,Tcaron:Tcaron,Tcedil:Tcedil,Tcy:Tcy,Tfr:Tfr,Therefore:Therefore,Theta:Theta,ThickSpace:ThickSpace,ThinSpace:ThinSpace,Tilde:Tilde,TildeEqual:TildeEqual,TildeFullEqual:TildeFullEqual,TildeTilde:TildeTilde,Topf:Topf,TripleDot:TripleDot,Tscr:Tscr,Tstrok:Tstrok,Uacut:Uacut,Uacute:Uacute,Uarr:Uarr,Uarrocir:Uarrocir,Ubrcy:Ubrcy,Ubreve:Ubreve,Ucir:Ucir,Ucirc:Ucirc,Ucy:Ucy,Udblac:Udblac,Ufr:Ufr,Ugrav:Ugrav,Ugrave:Ugrave,Umacr:Umacr,UnderBar:UnderBar,UnderBrace:UnderBrace,UnderBracket:UnderBracket,UnderParenthesis:UnderParenthesis,Union:Union,UnionPlus:UnionPlus,Uogon:Uogon,Uopf:Uopf,UpArrow:UpArrow,UpArrowBar:UpArrowBar,UpArrowDownArrow:UpArrowDownArrow,UpDownArrow:UpDownArrow,UpEquilibrium:UpEquilibrium,UpTee:UpTee,UpTeeArrow:UpTeeArrow,Uparrow:Uparrow,Updownarrow:Updownarrow,UpperLeftArrow:UpperLeftArrow,UpperRightArrow:UpperRightArrow,Upsi:Upsi,Upsilon:Upsilon,Uring:Uring,Uscr:Uscr,Utilde:Utilde,Uum:Uum,Uuml:Uuml,VDash:VDash,Vbar:Vbar,Vcy:Vcy,Vdash:Vdash,Vdashl:Vdashl,Vee:Vee,Verbar:Verbar,Vert:Vert,VerticalBar:VerticalBar,VerticalLine:VerticalLine,VerticalSeparator:VerticalSeparator,VerticalTilde:VerticalTilde,VeryThinSpace:VeryThinSpace,Vfr:Vfr,Vopf:Vopf,Vscr:Vscr,Vvdash:Vvdash,Wcirc:Wcirc,Wedge:Wedge,Wfr:Wfr,Wopf:Wopf,Wscr:Wscr,Xfr:Xfr,Xi:Xi,Xopf:Xopf,Xscr:Xscr,YAcy:YAcy,YIcy:YIcy,YUcy:YUcy,Yacut:Yacut,Yacute:Yacute,Ycirc:Ycirc,Ycy:Ycy,Yfr:Yfr,Yopf:Yopf,Yscr:Yscr,Yuml:Yuml,ZHcy:ZHcy,Zacute:Zacute,Zcaron:Zcaron,Zcy:Zcy,Zdot:Zdot,ZeroWidthSpace:ZeroWidthSpace,Zeta:Zeta,Zfr:Zfr,Zopf:Zopf,Zscr:Zscr,aacut:aacut,aacute:aacute,abreve:abreve,ac:ac,acE:acE,acd:acd,acir:acir,acirc:acirc,acut:acut,acute:acute,acy:acy,aeli:aeli,aelig:aelig,af:af,afr:afr,agrav:agrav,agrave:agrave,alefsym:alefsym,aleph:aleph,alpha:alpha,amacr:amacr,amalg:amalg,am:am,amp:amp,and:and,andand:andand,andd:andd,andslope:andslope,andv:andv,ang:ang,ange:ange,angle:angle,angmsd:angmsd,angmsdaa:angmsdaa,angmsdab:angmsdab,angmsdac:angmsdac,angmsdad:angmsdad,angmsdae:angmsdae,angmsdaf:angmsdaf,angmsdag:angmsdag,angmsdah:angmsdah,angrt:angrt,angrtvb:angrtvb,angrtvbd:angrtvbd,angsph:angsph,angst:angst,angzarr:angzarr,aogon:aogon,aopf:aopf,ap:ap,apE:apE,apacir:apacir,ape:ape,apid:apid,apos:apos,approx:approx,approxeq:approxeq,arin:arin,aring:aring,ascr:ascr,ast:ast,asymp:asymp,asympeq:asympeq,atild:atild,atilde:atilde,aum:aum,auml:auml,awconint:awconint,awint:awint,bNot:bNot,backcong:backcong,backepsilon:backepsilon,backprime:backprime,backsim:backsim,backsimeq:backsimeq,barvee:barvee,barwed:barwed,barwedge:barwedge,bbrk:bbrk,bbrktbrk:bbrktbrk,bcong:bcong,bcy:bcy,bdquo:bdquo,becaus:becaus,because:because,bemptyv:bemptyv,bepsi:bepsi,bernou:bernou,beta:beta,beth:beth,between:between,bfr:bfr,bigcap:bigcap,bigcirc:bigcirc,bigcup:bigcup,bigodot:bigodot,bigoplus:bigoplus,bigotimes:bigotimes,bigsqcup:bigsqcup,bigstar:bigstar,bigtriangledown:bigtriangledown,bigtriangleup:bigtriangleup,biguplus:biguplus,bigvee:bigvee,bigwedge:bigwedge,bkarow:bkarow,blacklozenge:blacklozenge,blacksquare:blacksquare,blacktriangle:blacktriangle,blacktriangledown:blacktriangledown,blacktriangleleft:blacktriangleleft,blacktriangleright:blacktriangleright,blank:blank,blk12:blk12,blk14:blk14,blk34:blk34,block:block,bne:bne,bnequiv:bnequiv,bnot:bnot,bopf:bopf,bot:bot,bottom:bottom,bowtie:bowtie,boxDL:boxDL,boxDR:boxDR,boxDl:boxDl,boxDr:boxDr,boxH:boxH,boxHD:boxHD,boxHU:boxHU,boxHd:boxHd,boxHu:boxHu,boxUL:boxUL,boxUR:boxUR,boxUl:boxUl,boxUr:boxUr,boxV:boxV,boxVH:boxVH,boxVL:boxVL,boxVR:boxVR,boxVh:boxVh,boxVl:boxVl,boxVr:boxVr,boxbox:boxbox,boxdL:boxdL,boxdR:boxdR,boxdl:boxdl,boxdr:boxdr,boxh:boxh,boxhD:boxhD,boxhU:boxhU,boxhd:boxhd,boxhu:boxhu,boxminus:boxminus,boxplus:boxplus,boxtimes:boxtimes,boxuL:boxuL,boxuR:boxuR,boxul:boxul,boxur:boxur,boxv:boxv,boxvH:boxvH,boxvL:boxvL,boxvR:boxvR,boxvh:boxvh,boxvl:boxvl,boxvr:boxvr,bprime:bprime,breve:breve,brvba:brvba,brvbar:brvbar,bscr:bscr,bsemi:bsemi,bsim:bsim,bsime:bsime,bsol:bsol,bsolb:bsolb,bsolhsub:bsolhsub,bull:bull,bullet:bullet,bump:bump,bumpE:bumpE,bumpe:bumpe,bumpeq:bumpeq,cacute:cacute,cap:cap,capand:capand,capbrcup:capbrcup,capcap:capcap,capcup:capcup,capdot:capdot,caps:caps,caret:caret,caron:caron,ccaps:ccaps,ccaron:ccaron,ccedi:ccedi,ccedil:ccedil,ccirc:ccirc,ccups:ccups,ccupssm:ccupssm,cdot:cdot,cedi:cedi,cedil:cedil,cemptyv:cemptyv,cen:cen,cent:cent,centerdot:centerdot,cfr:cfr,chcy:chcy,check:check,checkmark:checkmark,chi:chi,cir:cir,cirE:cirE,circ:circ,circeq:circeq,circlearrowleft:circlearrowleft,circlearrowright:circlearrowright,circledR:circledR,circledS:circledS,circledast:circledast,circledcirc:circledcirc,circleddash:circleddash,cire:cire,cirfnint:cirfnint,cirmid:cirmid,cirscir:cirscir,clubs:clubs,clubsuit:clubsuit,colon:colon,colone:colone,coloneq:coloneq,comma:comma,commat:commat,comp:comp,compfn:compfn,complement:complement,complexes:complexes,cong:cong,congdot:congdot,conint:conint,copf:copf,coprod:coprod,cop:cop,copy:copy,copysr:copysr,crarr:crarr,cross:cross,cscr:cscr,csub:csub,csube:csube,csup:csup,csupe:csupe,ctdot:ctdot,cudarrl:cudarrl,cudarrr:cudarrr,cuepr:cuepr,cuesc:cuesc,cularr:cularr,cularrp:cularrp,cup:cup,cupbrcap:cupbrcap,cupcap:cupcap,cupcup:cupcup,cupdot:cupdot,cupor:cupor,cups:cups,curarr:curarr,curarrm:curarrm,curlyeqprec:curlyeqprec,curlyeqsucc:curlyeqsucc,curlyvee:curlyvee,curlywedge:curlywedge,curre:curre,curren:curren,curvearrowleft:curvearrowleft,curvearrowright:curvearrowright,cuvee:cuvee,cuwed:cuwed,cwconint:cwconint,cwint:cwint,cylcty:cylcty,dArr:dArr,dHar:dHar,dagger:dagger,daleth:daleth,darr:darr,dash:dash,dashv:dashv,dbkarow:dbkarow,dblac:dblac,dcaron:dcaron,dcy:dcy,dd:dd,ddagger:ddagger,ddarr:ddarr,ddotseq:ddotseq,de:de,deg:deg,delta:delta,demptyv:demptyv,dfisht:dfisht,dfr:dfr,dharl:dharl,dharr:dharr,diam:diam,diamond:diamond,diamondsuit:diamondsuit,diams:diams,die:die,digamma:digamma,disin:disin,div:div,divid:divid,divide:divide,divideontimes:divideontimes,divonx:divonx,djcy:djcy,dlcorn:dlcorn,dlcrop:dlcrop,dollar:dollar,dopf:dopf,dot:dot,doteq:doteq,doteqdot:doteqdot,dotminus:dotminus,dotplus:dotplus,dotsquare:dotsquare,doublebarwedge:doublebarwedge,downarrow:downarrow,downdownarrows:downdownarrows,downharpoonleft:downharpoonleft,downharpoonright:downharpoonright,drbkarow:drbkarow,drcorn:drcorn,drcrop:drcrop,dscr:dscr,dscy:dscy,dsol:dsol,dstrok:dstrok,dtdot:dtdot,dtri:dtri,dtrif:dtrif,duarr:duarr,duhar:duhar,dwangle:dwangle,dzcy:dzcy,dzigrarr:dzigrarr,eDDot:eDDot,eDot:eDot,eacut:eacut,eacute:eacute,easter:easter,ecaron:ecaron,ecir:ecir,ecirc:ecirc,ecolon:ecolon,ecy:ecy,edot:edot,ee:ee,efDot:efDot,efr:efr,eg:eg,egrav:egrav,egrave:egrave,egs:egs,egsdot:egsdot,el:el,elinters:elinters,ell:ell,els:els,elsdot:elsdot,emacr:emacr,empty:empty,emptyset:emptyset,emptyv:emptyv,emsp13:emsp13,emsp14:emsp14,emsp:emsp,eng:eng,ensp:ensp,eogon:eogon,eopf:eopf,epar:epar,eparsl:eparsl,eplus:eplus,epsi:epsi,epsilon:epsilon,epsiv:epsiv,eqcirc:eqcirc,eqcolon:eqcolon,eqsim:eqsim,eqslantgtr:eqslantgtr,eqslantless:eqslantless,equals:equals,equest:equest,equiv:equiv,equivDD:equivDD,eqvparsl:eqvparsl,erDot:erDot,erarr:erarr,escr:escr,esdot:esdot,esim:esim,eta:eta,et:et,eth:eth,eum:eum,euml:euml,euro:euro,excl:excl,exist:exist,expectation:expectation,exponentiale:exponentiale,fallingdotseq:fallingdotseq,fcy:fcy,female:female,ffilig:ffilig,fflig:fflig,ffllig:ffllig,ffr:ffr,filig:filig,fjlig:fjlig,flat:flat,fllig:fllig,fltns:fltns,fnof:fnof,fopf:fopf,forall:forall,fork:fork,forkv:forkv,fpartint:fpartint,frac1:frac1,frac12:frac12,frac13:frac13,frac14:frac14,frac15:frac15,frac16:frac16,frac18:frac18,frac23:frac23,frac25:frac25,frac3:frac3,frac34:frac34,frac35:frac35,frac38:frac38,frac45:frac45,frac56:frac56,frac58:frac58,frac78:frac78,frasl:frasl,frown:frown,fscr:fscr,gE:gE,gEl:gEl,gacute:gacute,gamma:gamma,gammad:gammad,gap:gap,gbreve:gbreve,gcirc:gcirc,gcy:gcy,gdot:gdot,ge:ge,gel:gel,geq:geq,geqq:geqq,geqslant:geqslant,ges:ges,gescc:gescc,gesdot:gesdot,gesdoto:gesdoto,gesdotol:gesdotol,gesl:gesl,gesles:gesles,gfr:gfr,gg:gg,ggg:ggg,gimel:gimel,gjcy:gjcy,gl:gl,glE:glE,gla:gla,glj:glj,gnE:gnE,gnap:gnap,gnapprox:gnapprox,gne:gne,gneq:gneq,gneqq:gneqq,gnsim:gnsim,gopf:gopf,grave:grave,gscr:gscr,gsim:gsim,gsime:gsime,gsiml:gsiml,g:g,gt:gt,gtcc:gtcc,gtcir:gtcir,gtdot:gtdot,gtlPar:gtlPar,gtquest:gtquest,gtrapprox:gtrapprox,gtrarr:gtrarr,gtrdot:gtrdot,gtreqless:gtreqless,gtreqqless:gtreqqless,gtrless:gtrless,gtrsim:gtrsim,gvertneqq:gvertneqq,gvnE:gvnE,hArr:hArr,hairsp:hairsp,half:half,hamilt:hamilt,hardcy:hardcy,harr:harr,harrcir:harrcir,harrw:harrw,hbar:hbar,hcirc:hcirc,hearts:hearts,heartsuit:heartsuit,hellip:hellip,hercon:hercon,hfr:hfr,hksearow:hksearow,hkswarow:hkswarow,hoarr:hoarr,homtht:homtht,hookleftarrow:hookleftarrow,hookrightarrow:hookrightarrow,hopf:hopf,horbar:horbar,hscr:hscr,hslash:hslash,hstrok:hstrok,hybull:hybull,hyphen:hyphen,iacut:iacut,iacute:iacute,ic:ic,icir:icir,icirc:icirc,icy:icy,iecy:iecy,iexc:iexc,iexcl:iexcl,iff:iff,ifr:ifr,igrav:igrav,igrave:igrave,ii:ii,iiiint:iiiint,iiint:iiint,iinfin:iinfin,iiota:iiota,ijlig:ijlig,imacr:imacr,image:image,imagline:imagline,imagpart:imagpart,imath:imath,imof:imof,imped:imped,incare:incare,infin:infin,infintie:infintie,inodot:inodot,int:int,intcal:intcal,integers:integers,intercal:intercal,intlarhk:intlarhk,intprod:intprod,iocy:iocy,iogon:iogon,iopf:iopf,iota:iota,iprod:iprod,iques:iques,iquest:iquest,iscr:iscr,isin:isin,isinE:isinE,isindot:isindot,isins:isins,isinsv:isinsv,isinv:isinv,it:it,itilde:itilde,iukcy:iukcy,ium:ium,iuml:iuml,jcirc:jcirc,jcy:jcy,jfr:jfr,jmath:jmath,jopf:jopf,jscr:jscr,jsercy:jsercy,jukcy:jukcy,kappa:kappa,kappav:kappav,kcedil:kcedil,kcy:kcy,kfr:kfr,kgreen:kgreen,khcy:khcy,kjcy:kjcy,kopf:kopf,kscr:kscr,lAarr:lAarr,lArr:lArr,lAtail:lAtail,lBarr:lBarr,lE:lE,lEg:lEg,lHar:lHar,lacute:lacute,laemptyv:laemptyv,lagran:lagran,lambda:lambda,lang:lang,langd:langd,langle:langle,lap:lap,laqu:laqu,laquo:laquo,larr:larr,larrb:larrb,larrbfs:larrbfs,larrfs:larrfs,larrhk:larrhk,larrlp:larrlp,larrpl:larrpl,larrsim:larrsim,larrtl:larrtl,lat:lat,latail:latail,late:late,lates:lates,lbarr:lbarr,lbbrk:lbbrk,lbrace:lbrace,lbrack:lbrack,lbrke:lbrke,lbrksld:lbrksld,lbrkslu:lbrkslu,lcaron:lcaron,lcedil:lcedil,lceil:lceil,lcub:lcub,lcy:lcy,ldca:ldca,ldquo:ldquo,ldquor:ldquor,ldrdhar:ldrdhar,ldrushar:ldrushar,ldsh:ldsh,le:le,leftarrow:leftarrow,leftarrowtail:leftarrowtail,leftharpoondown:leftharpoondown,leftharpoonup:leftharpoonup,leftleftarrows:leftleftarrows,leftrightarrow:leftrightarrow,leftrightarrows:leftrightarrows,leftrightharpoons:leftrightharpoons,leftrightsquigarrow:leftrightsquigarrow,leftthreetimes:leftthreetimes,leg:leg,leq:leq,leqq:leqq,leqslant:leqslant,les:les,lescc:lescc,lesdot:lesdot,lesdoto:lesdoto,lesdotor:lesdotor,lesg:lesg,lesges:lesges,lessapprox:lessapprox,lessdot:lessdot,lesseqgtr:lesseqgtr,lesseqqgtr:lesseqqgtr,lessgtr:lessgtr,lesssim:lesssim,lfisht:lfisht,lfloor:lfloor,lfr:lfr,lg:lg,lgE:lgE,lhard:lhard,lharu:lharu,lharul:lharul,lhblk:lhblk,ljcy:ljcy,ll:ll,llarr:llarr,llcorner:llcorner,llhard:llhard,lltri:lltri,lmidot:lmidot,lmoust:lmoust,lmoustache:lmoustache,lnE:lnE,lnap:lnap,lnapprox:lnapprox,lne:lne,lneq:lneq,lneqq:lneqq,lnsim:lnsim,loang:loang,loarr:loarr,lobrk:lobrk,longleftarrow:longleftarrow,longleftrightarrow:longleftrightarrow,longmapsto:longmapsto,longrightarrow:longrightarrow,looparrowleft:looparrowleft,looparrowright:looparrowright,lopar:lopar,lopf:lopf,loplus:loplus,lotimes:lotimes,lowast:lowast,lowbar:lowbar,loz:loz,lozenge:lozenge,lozf:lozf,lpar:lpar,lparlt:lparlt,lrarr:lrarr,lrcorner:lrcorner,lrhar:lrhar,lrhard:lrhard,lrm:lrm,lrtri:lrtri,lsaquo:lsaquo,lscr:lscr,lsh:lsh,lsim:lsim,lsime:lsime,lsimg:lsimg,lsqb:lsqb,lsquo:lsquo,lsquor:lsquor,lstrok:lstrok,l:l,lt:lt,ltcc:ltcc,ltcir:ltcir,ltdot:ltdot,lthree:lthree,ltimes:ltimes,ltlarr:ltlarr,ltquest:ltquest,ltrPar:ltrPar,ltri:ltri,ltrie:ltrie,ltrif:ltrif,lurdshar:lurdshar,luruhar:luruhar,lvertneqq:lvertneqq,lvnE:lvnE,mDDot:mDDot,mac:mac,macr:macr,male:male,malt:malt,maltese:maltese,map:map$1,mapsto:mapsto,mapstodown:mapstodown,mapstoleft:mapstoleft,mapstoup:mapstoup,marker:marker,mcomma:mcomma,mcy:mcy,mdash:mdash,measuredangle:measuredangle,mfr:mfr,mho:mho,micr:micr,micro:micro,mid:mid,midast:midast,midcir:midcir,middo:middo,middot:middot,minus:minus,minusb:minusb,minusd:minusd,minusdu:minusdu,mlcp:mlcp,mldr:mldr,mnplus:mnplus,models:models,mopf:mopf,mp:mp,mscr:mscr,mstpos:mstpos,mu:mu,multimap:multimap,mumap:mumap,nGg:nGg,nGt:nGt,nGtv:nGtv,nLeftarrow:nLeftarrow,nLeftrightarrow:nLeftrightarrow,nLl:nLl,nLt:nLt,nLtv:nLtv,nRightarrow:nRightarrow,nVDash:nVDash,nVdash:nVdash,nabla:nabla,nacute:nacute,nang:nang,nap:nap,napE:napE,napid:napid,napos:napos,napprox:napprox,natur:natur,natural:natural,naturals:naturals,nbs:nbs,nbsp:nbsp,nbump:nbump,nbumpe:nbumpe,ncap:ncap,ncaron:ncaron,ncedil:ncedil,ncong:ncong,ncongdot:ncongdot,ncup:ncup,ncy:ncy,ndash:ndash,ne:ne,neArr:neArr,nearhk:nearhk,nearr:nearr,nearrow:nearrow,nedot:nedot,nequiv:nequiv,nesear:nesear,nesim:nesim,nexist:nexist,nexists:nexists,nfr:nfr,ngE:ngE,nge:nge,ngeq:ngeq,ngeqq:ngeqq,ngeqslant:ngeqslant,nges:nges,ngsim:ngsim,ngt:ngt,ngtr:ngtr,nhArr:nhArr,nharr:nharr,nhpar:nhpar,ni:ni,nis:nis,nisd:nisd,niv:niv,njcy:njcy,nlArr:nlArr,nlE:nlE,nlarr:nlarr,nldr:nldr,nle:nle,nleftarrow:nleftarrow,nleftrightarrow:nleftrightarrow,nleq:nleq,nleqq:nleqq,nleqslant:nleqslant,nles:nles,nless:nless,nlsim:nlsim,nlt:nlt,nltri:nltri,nltrie:nltrie,nmid:nmid,nopf:nopf,no:no,not:not,notin:notin,notinE:notinE,notindot:notindot,notinva:notinva,notinvb:notinvb,notinvc:notinvc,notni:notni,notniva:notniva,notnivb:notnivb,notnivc:notnivc,npar:npar,nparallel:nparallel,nparsl:nparsl,npart:npart,npolint:npolint,npr:npr,nprcue:nprcue,npre:npre,nprec:nprec,npreceq:npreceq,nrArr:nrArr,nrarr:nrarr,nrarrc:nrarrc,nrarrw:nrarrw,nrightarrow:nrightarrow,nrtri:nrtri,nrtrie:nrtrie,nsc:nsc,nsccue:nsccue,nsce:nsce,nscr:nscr,nshortmid:nshortmid,nshortparallel:nshortparallel,nsim:nsim,nsime:nsime,nsimeq:nsimeq,nsmid:nsmid,nspar:nspar,nsqsube:nsqsube,nsqsupe:nsqsupe,nsub:nsub,nsubE:nsubE,nsube:nsube,nsubset:nsubset,nsubseteq:nsubseteq,nsubseteqq:nsubseteqq,nsucc:nsucc,nsucceq:nsucceq,nsup:nsup,nsupE:nsupE,nsupe:nsupe,nsupset:nsupset,nsupseteq:nsupseteq,nsupseteqq:nsupseteqq,ntgl:ntgl,ntild:ntild,ntilde:ntilde,ntlg:ntlg,ntriangleleft:ntriangleleft,ntrianglelefteq:ntrianglelefteq,ntriangleright:ntriangleright,ntrianglerighteq:ntrianglerighteq,nu:nu,num:num,numero:numero,numsp:numsp,nvDash:nvDash,nvHarr:nvHarr,nvap:nvap,nvdash:nvdash,nvge:nvge,nvgt:nvgt,nvinfin:nvinfin,nvlArr:nvlArr,nvle:nvle,nvlt:nvlt,nvltrie:nvltrie,nvrArr:nvrArr,nvrtrie:nvrtrie,nvsim:nvsim,nwArr:nwArr,nwarhk:nwarhk,nwarr:nwarr,nwarrow:nwarrow,nwnear:nwnear,oS:oS,oacut:oacut,oacute:oacute,oast:oast,ocir:ocir,ocirc:ocirc,ocy:ocy,odash:odash,odblac:odblac,odiv:odiv,odot:odot,odsold:odsold,oelig:oelig,ofcir:ofcir,ofr:ofr,ogon:ogon,ograv:ograv,ograve:ograve,ogt:ogt,ohbar:ohbar,ohm:ohm,oint:oint,olarr:olarr,olcir:olcir,olcross:olcross,oline:oline,olt:olt,omacr:omacr,omega:omega,omicron:omicron,omid:omid,ominus:ominus,oopf:oopf,opar:opar,operp:operp,oplus:oplus,or:or,orarr:orarr,ord:ord,order:order,orderof:orderof,ordf:ordf,ordm:ordm,origof:origof,oror:oror,orslope:orslope,orv:orv,oscr:oscr,oslas:oslas,oslash:oslash,osol:osol,otild:otild,otilde:otilde,otimes:otimes,otimesas:otimesas,oum:oum,ouml:ouml,ovbar:ovbar,par:par,para:para,parallel:parallel,parsim:parsim,parsl:parsl,part:part,pcy:pcy,percnt:percnt,period:period,permil:permil,perp:perp,pertenk:pertenk,pfr:pfr,phi:phi,phiv:phiv,phmmat:phmmat,phone:phone,pi:pi,pitchfork:pitchfork,piv:piv,planck:planck,planckh:planckh,plankv:plankv,plus:plus,plusacir:plusacir,plusb:plusb,pluscir:pluscir,plusdo:plusdo,plusdu:plusdu,pluse:pluse,plusm:plusm,plusmn:plusmn,plussim:plussim,plustwo:plustwo,pm:pm,pointint:pointint,popf:popf,poun:poun,pound:pound,pr:pr,prE:prE,prap:prap,prcue:prcue,pre:pre,prec:prec,precapprox:precapprox,preccurlyeq:preccurlyeq,preceq:preceq,precnapprox:precnapprox,precneqq:precneqq,precnsim:precnsim,precsim:precsim,prime:prime,primes:primes,prnE:prnE,prnap:prnap,prnsim:prnsim,prod:prod,profalar:profalar,profline:profline,profsurf:profsurf,prop:prop,propto:propto,prsim:prsim,prurel:prurel,pscr:pscr,psi:psi,puncsp:puncsp,qfr:qfr,qint:qint,qopf:qopf,qprime:qprime,qscr:qscr,quaternions:quaternions,quatint:quatint,quest:quest,questeq:questeq,quo:quo,quot:quot,rAarr:rAarr,rArr:rArr,rAtail:rAtail,rBarr:rBarr,rHar:rHar,race:race,racute:racute,radic:radic,raemptyv:raemptyv,rang:rang,rangd:rangd,range:range,rangle:rangle,raqu:raqu,raquo:raquo,rarr:rarr,rarrap:rarrap,rarrb:rarrb,rarrbfs:rarrbfs,rarrc:rarrc,rarrfs:rarrfs,rarrhk:rarrhk,rarrlp:rarrlp,rarrpl:rarrpl,rarrsim:rarrsim,rarrtl:rarrtl,rarrw:rarrw,ratail:ratail,ratio:ratio,rationals:rationals,rbarr:rbarr,rbbrk:rbbrk,rbrace:rbrace,rbrack:rbrack,rbrke:rbrke,rbrksld:rbrksld,rbrkslu:rbrkslu,rcaron:rcaron,rcedil:rcedil,rceil:rceil,rcub:rcub,rcy:rcy,rdca:rdca,rdldhar:rdldhar,rdquo:rdquo,rdquor:rdquor,rdsh:rdsh,real:real,realine:realine,realpart:realpart,reals:reals,rect:rect,re:re,reg:reg,rfisht:rfisht,rfloor:rfloor,rfr:rfr,rhard:rhard,rharu:rharu,rharul:rharul,rho:rho,rhov:rhov,rightarrow:rightarrow,rightarrowtail:rightarrowtail,rightharpoondown:rightharpoondown,rightharpoonup:rightharpoonup,rightleftarrows:rightleftarrows,rightleftharpoons:rightleftharpoons,rightrightarrows:rightrightarrows,rightsquigarrow:rightsquigarrow,rightthreetimes:rightthreetimes,ring:ring,risingdotseq:risingdotseq,rlarr:rlarr,rlhar:rlhar,rlm:rlm,rmoust:rmoust,rmoustache:rmoustache,rnmid:rnmid,roang:roang,roarr:roarr,robrk:robrk,ropar:ropar,ropf:ropf,roplus:roplus,rotimes:rotimes,rpar:rpar,rpargt:rpargt,rppolint:rppolint,rrarr:rrarr,rsaquo:rsaquo,rscr:rscr,rsh:rsh,rsqb:rsqb,rsquo:rsquo,rsquor:rsquor,rthree:rthree,rtimes:rtimes,rtri:rtri,rtrie:rtrie,rtrif:rtrif,rtriltri:rtriltri,ruluhar:ruluhar,rx:rx,sacute:sacute,sbquo:sbquo,sc:sc,scE:scE,scap:scap,scaron:scaron,sccue:sccue,sce:sce,scedil:scedil,scirc:scirc,scnE:scnE,scnap:scnap,scnsim:scnsim,scpolint:scpolint,scsim:scsim,scy:scy,sdot:sdot,sdotb:sdotb,sdote:sdote,seArr:seArr,searhk:searhk,searr:searr,searrow:searrow,sec:sec,sect:sect,semi:semi,seswar:seswar,setminus:setminus,setmn:setmn,sext:sext,sfr:sfr,sfrown:sfrown,sharp:sharp,shchcy:shchcy,shcy:shcy,shortmid:shortmid,shortparallel:shortparallel,sh:sh,shy:shy,sigma:sigma,sigmaf:sigmaf,sigmav:sigmav,sim:sim,simdot:simdot,sime:sime,simeq:simeq,simg:simg,simgE:simgE,siml:siml,simlE:simlE,simne:simne,simplus:simplus,simrarr:simrarr,slarr:slarr,smallsetminus:smallsetminus,smashp:smashp,smeparsl:smeparsl,smid:smid,smile:smile,smt:smt,smte:smte,smtes:smtes,softcy:softcy,sol:sol,solb:solb,solbar:solbar,sopf:sopf,spades:spades,spadesuit:spadesuit,spar:spar,sqcap:sqcap,sqcaps:sqcaps,sqcup:sqcup,sqcups:sqcups,sqsub:sqsub,sqsube:sqsube,sqsubset:sqsubset,sqsubseteq:sqsubseteq,sqsup:sqsup,sqsupe:sqsupe,sqsupset:sqsupset,sqsupseteq:sqsupseteq,squ:squ,square:square,squarf:squarf,squf:squf,srarr:srarr,sscr:sscr,ssetmn:ssetmn,ssmile:ssmile,sstarf:sstarf,star:star,starf:starf,straightepsilon:straightepsilon,straightphi:straightphi,strns:strns,sub:sub,subE:subE,subdot:subdot,sube:sube,subedot:subedot,submult:submult,subnE:subnE,subne:subne,subplus:subplus,subrarr:subrarr,subset:subset,subseteq:subseteq,subseteqq:subseteqq,subsetneq:subsetneq,subsetneqq:subsetneqq,subsim:subsim,subsub:subsub,subsup:subsup,succ:succ,succapprox:succapprox,succcurlyeq:succcurlyeq,succeq:succeq,succnapprox:succnapprox,succneqq:succneqq,succnsim:succnsim,succsim:succsim,sum:sum,sung:sung,sup:sup,sup1:sup1,sup2:sup2,sup3:sup3,supE:supE,supdot:supdot,supdsub:supdsub,supe:supe,supedot:supedot,suphsol:suphsol,suphsub:suphsub,suplarr:suplarr,supmult:supmult,supnE:supnE,supne:supne,supplus:supplus,supset:supset,supseteq:supseteq,supseteqq:supseteqq,supsetneq:supsetneq,supsetneqq:supsetneqq,supsim:supsim,supsub:supsub,supsup:supsup,swArr:swArr,swarhk:swarhk,swarr:swarr,swarrow:swarrow,swnwar:swnwar,szli:szli,szlig:szlig,target:target,tau:tau,tbrk:tbrk,tcaron:tcaron,tcedil:tcedil,tcy:tcy,tdot:tdot,telrec:telrec,tfr:tfr,there4:there4,therefore:therefore,theta:theta,thetasym:thetasym,thetav:thetav,thickapprox:thickapprox,thicksim:thicksim,thinsp:thinsp,thkap:thkap,thksim:thksim,thor:thor,thorn:thorn,tilde:tilde,time:time,times:times,timesb:timesb,timesbar:timesbar,timesd:timesd,tint:tint,toea:toea,top:top,topbot:topbot,topcir:topcir,topf:topf,topfork:topfork,tosa:tosa,tprime:tprime,trade:trade,triangle:triangle,triangledown:triangledown,triangleleft:triangleleft,trianglelefteq:trianglelefteq,triangleq:triangleq,triangleright:triangleright,trianglerighteq:trianglerighteq,tridot:tridot,trie:trie,triminus:triminus,triplus:triplus,trisb:trisb,tritime:tritime,trpezium:trpezium,tscr:tscr,tscy:tscy,tshcy:tshcy,tstrok:tstrok,twixt:twixt,twoheadleftarrow:twoheadleftarrow,twoheadrightarrow:twoheadrightarrow,uArr:uArr,uHar:uHar,uacut:uacut,uacute:uacute,uarr:uarr,ubrcy:ubrcy,ubreve:ubreve,ucir:ucir,ucirc:ucirc,ucy:ucy,udarr:udarr,udblac:udblac,udhar:udhar,ufisht:ufisht,ufr:ufr,ugrav:ugrav,ugrave:ugrave,uharl:uharl,uharr:uharr,uhblk:uhblk,ulcorn:ulcorn,ulcorner:ulcorner,ulcrop:ulcrop,ultri:ultri,umacr:umacr,um:um,uml:uml,uogon:uogon,uopf:uopf,uparrow:uparrow,updownarrow:updownarrow,upharpoonleft:upharpoonleft,upharpoonright:upharpoonright,uplus:uplus,upsi:upsi,upsih:upsih,upsilon:upsilon,upuparrows:upuparrows,urcorn:urcorn,urcorner:urcorner,urcrop:urcrop,uring:uring,urtri:urtri,uscr:uscr,utdot:utdot,utilde:utilde,utri:utri,utrif:utrif,uuarr:uuarr,uum:uum,uuml:uuml,uwangle:uwangle,vArr:vArr,vBar:vBar,vBarv:vBarv,vDash:vDash,vangrt:vangrt,varepsilon:varepsilon,varkappa:varkappa,varnothing:varnothing,varphi:varphi,varpi:varpi,varpropto:varpropto,varr:varr,varrho:varrho,varsigma:varsigma,varsubsetneq:varsubsetneq,varsubsetneqq:varsubsetneqq,varsupsetneq:varsupsetneq,varsupsetneqq:varsupsetneqq,vartheta:vartheta,vartriangleleft:vartriangleleft,vartriangleright:vartriangleright,vcy:vcy,vdash:vdash,vee:vee,veebar:veebar,veeeq:veeeq,vellip:vellip,verbar:verbar,vert:vert,vfr:vfr,vltri:vltri,vnsub:vnsub,vnsup:vnsup,vopf:vopf,vprop:vprop,vrtri:vrtri,vscr:vscr,vsubnE:vsubnE,vsubne:vsubne,vsupnE:vsupnE,vsupne:vsupne,vzigzag:vzigzag,wcirc:wcirc,wedbar:wedbar,wedge:wedge,wedgeq:wedgeq,weierp:weierp,wfr:wfr,wopf:wopf,wp:wp,wr:wr,wreath:wreath,wscr:wscr,xcap:xcap,xcirc:xcirc,xcup:xcup,xdtri:xdtri,xfr:xfr,xhArr:xhArr,xharr:xharr,xi:xi,xlArr:xlArr,xlarr:xlarr,xmap:xmap,xnis:xnis,xodot:xodot,xopf:xopf,xoplus:xoplus,xotime:xotime,xrArr:xrArr,xrarr:xrarr,xscr:xscr,xsqcup:xsqcup,xuplus:xuplus,xutri:xutri,xvee:xvee,xwedge:xwedge,yacut:yacut,yacute:yacute,yacy:yacy,ycirc:ycirc,ycy:ycy,ye:ye,yen:yen,yfr:yfr,yicy:yicy,yopf:yopf,yscr:yscr,yucy:yucy,yum:yum,yuml:yuml,zacute:zacute,zcaron:zcaron,zcy:zcy,zdot:zdot,zeetrf:zeetrf,zeta:zeta,zfr:zfr,zhcy:zhcy,zigrarr:zigrarr,zopf:zopf,zscr:zscr,zwj:zwj,zwnj:zwnj,default:index$14}); var AElig$1="Æ"; var AMP$1="&"; var Aacute$1="Á"; var Acirc$1="Â"; var Agrave$1="À"; var Aring$1="Å"; var Atilde$1="Ã"; var Auml$1="Ä"; var COPY$1="©"; var Ccedil$1="Ç"; var ETH$1="Ð"; var Eacute$1="É"; var Ecirc$1="Ê"; var Egrave$1="È"; var Euml$1="Ë"; var GT$1=">"; var Iacute$1="Í"; var Icirc$1="Î"; var Igrave$1="Ì"; var Iuml$1="Ï"; var LT$1="<"; var Ntilde$1="Ñ"; var Oacute$1="Ó"; var Ocirc$1="Ô"; var Ograve$1="Ò"; var Oslash$1="Ø"; var Otilde$1="Õ"; var Ouml$1="Ö"; var QUOT$1='"'; var REG$1="®"; var THORN$1="Þ"; var Uacute$1="Ú"; var Ucirc$1="Û"; var Ugrave$1="Ù"; var Uuml$1="Ü"; var Yacute$1="Ý"; var aacute$1="á"; var acirc$1="â"; var acute$1="´"; var aelig$1="æ"; var agrave$1="à"; var amp$1="&"; var aring$1="å"; var atilde$1="ã"; var auml$1="ä"; var brvbar$1="¦"; var ccedil$1="ç"; var cedil$1="¸"; var cent$1="¢"; var copy$1="©"; var curren$1="¤"; var deg$1="°"; var divide$1="÷"; var eacute$1="é"; var ecirc$1="ê"; var egrave$1="è"; var eth$1="ð"; var euml$1="ë"; var frac12$1="½"; var frac14$1="¼"; var frac34$1="¾"; var gt$1=">"; var iacute$1="í"; var icirc$1="î"; var iexcl$1="¡"; var igrave$1="ì"; var iquest$1="¿"; var iuml$1="ï"; var laquo$1="«"; var lt$1="<"; var macr$1="¯"; var micro$1="µ"; var middot$1="·"; var nbsp$1=" "; var not$1="¬"; var ntilde$1="ñ"; var oacute$1="ó"; var ocirc$1="ô"; var ograve$1="ò"; var ordf$1="ª"; var ordm$1="º"; var oslash$1="ø"; var otilde$1="õ"; var ouml$1="ö"; var para$1="¶"; var plusmn$1="±"; var pound$1="£"; var quot$1='"'; var raquo$1="»"; var reg$1="®"; var sect$1="§"; var shy$1="­"; var sup1$1="¹"; var sup2$1="²"; var sup3$1="³"; var szlig$1="ß"; var thorn$1="þ"; var times$1="×"; var uacute$1="ú"; var ucirc$1="û"; var ugrave$1="ù"; var uml$1="¨"; var uuml$1="ü"; var yacute$1="ý"; var yen$1="¥"; var yuml$1="ÿ"; var index$16={AElig:AElig$1,AMP:AMP$1,Aacute:Aacute$1,Acirc:Acirc$1,Agrave:Agrave$1,Aring:Aring$1,Atilde:Atilde$1,Auml:Auml$1,COPY:COPY$1,Ccedil:Ccedil$1,ETH:ETH$1,Eacute:Eacute$1,Ecirc:Ecirc$1,Egrave:Egrave$1,Euml:Euml$1,GT:GT$1,Iacute:Iacute$1,Icirc:Icirc$1,Igrave:Igrave$1,Iuml:Iuml$1,LT:LT$1,Ntilde:Ntilde$1,Oacute:Oacute$1,Ocirc:Ocirc$1,Ograve:Ograve$1,Oslash:Oslash$1,Otilde:Otilde$1,Ouml:Ouml$1,QUOT:QUOT$1,REG:REG$1,THORN:THORN$1,Uacute:Uacute$1,Ucirc:Ucirc$1,Ugrave:Ugrave$1,Uuml:Uuml$1,Yacute:Yacute$1,aacute:aacute$1,acirc:acirc$1,acute:acute$1,aelig:aelig$1,agrave:agrave$1,amp:amp$1,aring:aring$1,atilde:atilde$1,auml:auml$1,brvbar:brvbar$1,ccedil:ccedil$1,cedil:cedil$1,cent:cent$1,copy:copy$1,curren:curren$1,deg:deg$1,divide:divide$1,eacute:eacute$1,ecirc:ecirc$1,egrave:egrave$1,eth:eth$1,euml:euml$1,frac12:frac12$1,frac14:frac14$1,frac34:frac34$1,gt:gt$1,iacute:iacute$1,icirc:icirc$1,iexcl:iexcl$1,igrave:igrave$1,iquest:iquest$1,iuml:iuml$1,laquo:laquo$1,lt:lt$1,macr:macr$1,micro:micro$1,middot:middot$1,nbsp:nbsp$1,not:not$1,ntilde:ntilde$1,oacute:oacute$1,ocirc:ocirc$1,ograve:ograve$1,ordf:ordf$1,ordm:ordm$1,oslash:oslash$1,otilde:otilde$1,ouml:ouml$1,para:para$1,plusmn:plusmn$1,pound:pound$1,quot:quot$1,raquo:raquo$1,reg:reg$1,sect:sect$1,shy:shy$1,sup1:sup1$1,sup2:sup2$1,sup3:sup3$1,szlig:szlig$1,thorn:thorn$1,times:times$1,uacute:uacute$1,ucirc:ucirc$1,ugrave:ugrave$1,uml:uml$1,uuml:uuml$1,yacute:yacute$1,yen:yen$1,yuml:yuml$1}; var index$17=Object.freeze({AElig:AElig$1,AMP:AMP$1,Aacute:Aacute$1,Acirc:Acirc$1,Agrave:Agrave$1,Aring:Aring$1,Atilde:Atilde$1,Auml:Auml$1,COPY:COPY$1,Ccedil:Ccedil$1,ETH:ETH$1,Eacute:Eacute$1,Ecirc:Ecirc$1,Egrave:Egrave$1,Euml:Euml$1,GT:GT$1,Iacute:Iacute$1,Icirc:Icirc$1,Igrave:Igrave$1,Iuml:Iuml$1,LT:LT$1,Ntilde:Ntilde$1,Oacute:Oacute$1,Ocirc:Ocirc$1,Ograve:Ograve$1,Oslash:Oslash$1,Otilde:Otilde$1,Ouml:Ouml$1,QUOT:QUOT$1,REG:REG$1,THORN:THORN$1,Uacute:Uacute$1,Ucirc:Ucirc$1,Ugrave:Ugrave$1,Uuml:Uuml$1,Yacute:Yacute$1,aacute:aacute$1,acirc:acirc$1,acute:acute$1,aelig:aelig$1,agrave:agrave$1,amp:amp$1,aring:aring$1,atilde:atilde$1,auml:auml$1,brvbar:brvbar$1,ccedil:ccedil$1,cedil:cedil$1,cent:cent$1,copy:copy$1,curren:curren$1,deg:deg$1,divide:divide$1,eacute:eacute$1,ecirc:ecirc$1,egrave:egrave$1,eth:eth$1,euml:euml$1,frac12:frac12$1,frac14:frac14$1,frac34:frac34$1,gt:gt$1,iacute:iacute$1,icirc:icirc$1,iexcl:iexcl$1,igrave:igrave$1,iquest:iquest$1,iuml:iuml$1,laquo:laquo$1,lt:lt$1,macr:macr$1,micro:micro$1,middot:middot$1,nbsp:nbsp$1,not:not$1,ntilde:ntilde$1,oacute:oacute$1,ocirc:ocirc$1,ograve:ograve$1,ordf:ordf$1,ordm:ordm$1,oslash:oslash$1,otilde:otilde$1,ouml:ouml$1,para:para$1,plusmn:plusmn$1,pound:pound$1,quot:quot$1,raquo:raquo$1,reg:reg$1,sect:sect$1,shy:shy$1,sup1:sup1$1,sup2:sup2$1,sup3:sup3$1,szlig:szlig$1,thorn:thorn$1,times:times$1,uacute:uacute$1,ucirc:ucirc$1,ugrave:ugrave$1,uml:uml$1,uuml:uuml$1,yacute:yacute$1,yen:yen$1,yuml:yuml$1,default:index$16}); var index$18={0:"�",128:"€",130:"‚",131:"ƒ",132:"„",133:"…",134:"†",135:"‡",136:"ˆ",137:"‰",138:"Š",139:"‹",140:"Œ",142:"Ž",145:"‘",146:"’",147:"“",148:"”",149:"•",150:"–",151:"—",152:"˜",153:"™",154:"š",155:"›",156:"œ",158:"ž",159:"Ÿ"}; var index$19=Object.freeze({default:index$18}); var index$20=decimal$1; var index$22=hexadecimal$1; var index$26=alphabetical$1; var alphabetical=index$26; var decimal$2=index$20; var index$24=alphanumerical$1; var require$$0$5=index$15&&index$15.default||index$15; var require$$1$4=index$17&&index$17.default||index$17; var require$$2$1=index$19&&index$19.default||index$19; var characterEntities=require$$0$5; var legacy=require$$1$4; var invalid=require$$2$1; var decimal=index$20; var hexadecimal=index$22; var alphanumerical=index$24; var index$12=wrapper; var own$1={}.hasOwnProperty; var fromCharCode=String.fromCharCode; var noop=Function.prototype; var REPLACEMENT="�"; var FORM_FEED="\f"; var AMPERSAND="&"; var OCTOTHORP="#"; var SEMICOLON=";"; var NEWLINE="\n"; var X_LOWER="x"; var X_UPPER="X"; var SPACE=" "; var LESS_THAN="<"; var EQUAL="="; var EMPTY=""; var TAB="\t"; var defaults={warning:null,reference:null,text:null,warningContext:null,referenceContext:null,textContext:null,position:{},additional:null,attribute:!1,nonTerminated:!0}; var NAMED="named"; var HEXADECIMAL="hexadecimal"; var DECIMAL="decimal"; var BASE={};BASE[HEXADECIMAL]=16,BASE[DECIMAL]=10;var TESTS={};TESTS[NAMED]=alphanumerical,TESTS[DECIMAL]=decimal,TESTS[HEXADECIMAL]=hexadecimal;var NAMED_NOT_TERMINATED=1; var NUMERIC_NOT_TERMINATED=2; var NAMED_EMPTY=3; var NUMERIC_EMPTY=4; var NAMED_UNKNOWN=5; var NUMERIC_DISALLOWED=6; var NUMERIC_PROHIBITED=7; var NUMERIC_REFERENCE="Numeric character references"; var NAMED_REFERENCE="Named character references"; var TERMINATED=" must be terminated by a semicolon"; var VOID=" cannot be empty"; var MESSAGES={};MESSAGES[NAMED_NOT_TERMINATED]=NAMED_REFERENCE+TERMINATED,MESSAGES[NUMERIC_NOT_TERMINATED]=NUMERIC_REFERENCE+TERMINATED,MESSAGES[NAMED_EMPTY]=NAMED_REFERENCE+VOID,MESSAGES[NUMERIC_EMPTY]=NUMERIC_REFERENCE+VOID,MESSAGES[NAMED_UNKNOWN]=NAMED_REFERENCE+" must be known",MESSAGES[NUMERIC_DISALLOWED]=NUMERIC_REFERENCE+" cannot be disallowed",MESSAGES[NUMERIC_PROHIBITED]=NUMERIC_REFERENCE+" cannot be outside the permissible Unicode range";var entities=index$12; var decode$1=factory$3; var tokenizer$1=factory$4; var MERGEABLE_NODES={text:mergeText,blockquote:mergeBlockquote}; var index$28=escapes$1; var defaults$2=["\\","`","*","{","}","[","]","(",")","#","+","-",".","!","_",">"]; var gfm=defaults$2.concat(["~","|"]); var commonmark=gfm.concat(["\n",'"',"$","%","&","'",",","/",":",";","<","=","?","@","^"]);escapes$1.default=defaults$2,escapes$1.gfm=gfm,escapes$1.commonmark=commonmark;var blockElements=["address","article","aside","base","basefont","blockquote","body","caption","center","col","colgroup","dd","details","dialog","dir","div","dl","dt","fieldset","figcaption","figure","footer","form","frame","frameset","h1","h2","h3","h4","h5","h6","head","header","hgroup","hr","html","iframe","legend","li","link","main","menu","menuitem","meta","nav","noframes","ol","optgroup","option","p","param","pre","section","source","title","summary","table","tbody","td","tfoot","th","thead","title","tr","track","ul"]; var blockElements$1=Object.freeze({default:blockElements}); var require$$0$7=blockElements$1&&blockElements$1.default||blockElements$1; var defaults$3={position:!0,gfm:!0,commonmark:!1,footnotes:!1,pedantic:!1,blocks:require$$0$7}; var xtend$4=immutable; var escapes=index$28; var defaults$1=defaults$3; var setOptions_1=setOptions; var index$32=visit$1; var visit=index$32; var index$30=removePosition$1; var xtend$5=immutable; var removePosition=index$30; var parse_1=parse$6; var C_NEWLINE="\n"; var EXPRESSION_LINE_BREAKS=/\r\n|\r/g; var index$34=whitespace$1; var fromCode=String.fromCharCode; var re$1=/\s/; var whitespace=index$34; var newline_1=newline; var res=""; var cache; var index$36=repeat$1; var index$38=trimTrailingLines; var line="\n"; var repeat=index$36; var trim=index$38; var codeIndented=indentedCode; var C_NEWLINE$1="\n"; var C_TAB="\t"; var C_SPACE=" "; var CODE_INDENT_COUNT=4; var CODE_INDENT=repeat(C_SPACE,CODE_INDENT_COUNT); var trim$1=index$38; var codeFenced=fencedCode; var C_NEWLINE$2="\n"; var C_TAB$1="\t"; var C_SPACE$1=" "; var C_TILDE="~"; var C_TICK="`"; var MIN_FENCE_COUNT=3; var CODE_INDENT_COUNT$1=4; var index$40=createCommonjsModule(function(r,e){function t(r){return r.replace(/^\s*|\s*$/g,"")}(e=r.exports=t).left=function(r){return r.replace(/^\s*/,"")},e.right=function(r){return r.replace(/\s*$/,"")};}); var interrupt_1=interrupt$1; var trim$2=index$40; var interrupt=interrupt_1; var blockquote_1=blockquote; var C_NEWLINE$3="\n"; var C_TAB$2="\t"; var C_SPACE$2=" "; var C_GT=">"; var headingAtx=atxHeading; var C_NEWLINE$4="\n"; var C_TAB$3="\t"; var C_SPACE$3=" "; var C_HASH="#"; var MAX_ATX_COUNT=6; var thematicBreak_1=thematicBreak; var C_NEWLINE$5="\n"; var C_TAB$4="\t"; var C_SPACE$4=" "; var C_ASTERISK="*"; var C_UNDERSCORE="_"; var C_DASH="-"; var THEMATIC_BREAK_MARKER_COUNT=3; var getIndentation=indentation; var characters={" ":1,"\t":4}; var trim$4=index$40; var repeat$3=index$36; var getIndent$1=getIndentation; var removeIndentation=indentation$1; var C_SPACE$6=" "; var C_NEWLINE$7="\n"; var C_TAB$6="\t"; var trim$3=index$40; var repeat$2=index$36; var decimal$3=index$20; var getIndent=getIndentation; var removeIndent=removeIndentation; var interrupt$2=interrupt_1; var list_1=list; var C_ASTERISK$1="*"; var C_UNDERSCORE$1="_"; var C_PLUS="+"; var C_DASH$1="-"; var C_DOT="."; var C_SPACE$5=" "; var C_NEWLINE$6="\n"; var C_TAB$5="\t"; var C_PAREN_CLOSE=")"; var C_X_LOWER="x"; var TAB_SIZE=4; var EXPRESSION_LOOSE_LIST_ITEM=/\n\n(?!\s*$)/; var EXPRESSION_TASK_ITEM=/^\[([ \t]|x|X)][ \t]/; var EXPRESSION_BULLET=/^([ \t]*)([*+-]|\d+[.)])( {1,4}(?! )| |\t|$|(?=\n))([^\n]*)/; var EXPRESSION_PEDANTIC_BULLET=/^([ \t]*)([*+-]|\d+[.)])([ \t]+)/; var EXPRESSION_INITIAL_INDENT=/^( {1,4}|\t)?/gm; var LIST_UNORDERED_MARKERS={};LIST_UNORDERED_MARKERS[C_ASTERISK$1]=!0,LIST_UNORDERED_MARKERS[C_PLUS]=!0,LIST_UNORDERED_MARKERS[C_DASH$1]=!0;var LIST_ORDERED_MARKERS={};LIST_ORDERED_MARKERS[C_DOT]=!0;var LIST_ORDERED_COMMONMARK_MARKERS={};LIST_ORDERED_COMMONMARK_MARKERS[C_DOT]=!0,LIST_ORDERED_COMMONMARK_MARKERS[C_PAREN_CLOSE]=!0;var headingSetext=setextHeading; var C_NEWLINE$8="\n"; var C_TAB$7="\t"; var C_SPACE$7=" "; var C_EQUALS="="; var C_DASH$2="-"; var MAX_HEADING_INDENT=3; var SETEXT_MARKERS={};SETEXT_MARKERS[C_EQUALS]=1,SETEXT_MARKERS[C_DASH$2]=2;var attributeName="[a-zA-Z_:][a-zA-Z0-9:._-]*"; var unquoted="[^\"'=<>`\\u0000-\\u0020]+"; var singleQuoted="'[^']*'"; var doubleQuoted='"[^"]*"'; var attributeValue="(?:"+unquoted+"|"+singleQuoted+"|"+doubleQuoted+")"; var attribute="(?:\\s+"+attributeName+"(?:\\s*=\\s*"+attributeValue+")?)"; var openTag="<[A-Za-z][A-Za-z0-9\\-]*"+attribute+"*\\s*\\/?>"; var closeTag="<\\/[A-Za-z][A-Za-z0-9\\-]*\\s*>"; var comment="\x3c!----\x3e|\x3c!--(?:-?[^>-])(?:-?[^-])*--\x3e"; var processing="<[?].*?[?]>"; var declaration="<![A-Za-z]+\\s+[^>]*>"; var cdata="<!\\[CDATA\\[[\\s\\S]*?\\]\\]>"; var openCloseTag$1=new RegExp("^(?:"+openTag+"|"+closeTag+")"); var tag=new RegExp("^(?:"+openTag+"|"+closeTag+"|"+comment+"|"+processing+"|"+declaration+"|"+cdata+")"); var html={openCloseTag:openCloseTag$1,tag:tag}; var openCloseTag=html.openCloseTag; var htmlBlock=blockHTML; var C_TAB$8="\t"; var C_SPACE$8=" "; var C_NEWLINE$9="\n"; var C_LT="<"; var index$42=collapse; var collapseWhiteSpace=index$42; var normalize_1=normalize$1; var whitespace$2=index$34; var normalize=normalize_1; var footnoteDefinition_1=footnoteDefinition;footnoteDefinition.notInList=!0,footnoteDefinition.notInBlock=!0;var C_BACKSLASH="\\"; var C_NEWLINE$10="\n"; var C_TAB$9="\t"; var C_SPACE$9=" "; var C_BRACKET_OPEN="["; var C_BRACKET_CLOSE="]"; var C_CARET="^"; var C_COLON=":"; var EXPRESSION_INITIAL_TAB=/^( {4}|\t)?/gm; var whitespace$3=index$34; var normalize$2=normalize_1; var definition_1=definition;definition.notInList=!0,definition.notInBlock=!0;var C_DOUBLE_QUOTE='"'; var C_SINGLE_QUOTE="'"; var C_BACKSLASH$1="\\"; var C_NEWLINE$11="\n"; var C_TAB$10="\t"; var C_SPACE$10=" "; var C_BRACKET_OPEN$1="["; var C_BRACKET_CLOSE$1="]"; var C_PAREN_OPEN="("; var C_PAREN_CLOSE$1=")"; var C_COLON$1=":"; var C_LT$1="<"; var C_GT$1=">";isEnclosedURLCharacter.delimiter=C_GT$1;var whitespace$4=index$34; var table_1=table; var C_BACKSLASH$2="\\"; var C_TICK$1="`"; var C_DASH$3="-"; var C_PIPE="|"; var C_COLON$2=":"; var C_SPACE$11=" "; var C_NEWLINE$12="\n"; var C_TAB$11="\t"; var MIN_TABLE_COLUMNS=1; var MIN_TABLE_ROWS=2; var TABLE_ALIGN_LEFT="left"; var TABLE_ALIGN_CENTER="center"; var TABLE_ALIGN_RIGHT="right"; var TABLE_ALIGN_NONE=null; var trim$5=index$40; var decimal$4=index$20; var trimTrailingLines$1=index$38; var interrupt$3=interrupt_1; var paragraph_1=paragraph; var C_NEWLINE$13="\n"; var C_TAB$12="\t"; var C_SPACE$12=" "; var TAB_SIZE$1=4; var _escape$2=locate$1; var locate=_escape$2; var _escape=escape;escape.locator=locate;var tag$1=locate$3; var whitespace$5=index$34; var decode$3=index$12; var locate$2=tag$1; var autoLink_1=autoLink;autoLink.locator=locate$2,autoLink.notInLink=!0;var C_LT$2="<"; var C_GT$2=">"; var C_AT_SIGN="@"; var C_SLASH="/"; var MAILTO="mailto:"; var MAILTO_LENGTH=MAILTO.length; var url$1=locate$5; var PROTOCOLS$1=["https://","http://","mailto:"]; var decode$4=index$12; var whitespace$6=index$34; var locate$4=url$1; var url_1=url;url.locator=locate$4,url.notInLink=!0;var C_BRACKET_OPEN$2="["; var C_BRACKET_CLOSE$2="]"; var C_PAREN_OPEN$1="("; var C_PAREN_CLOSE$2=")"; var C_LT$3="<"; var C_AT_SIGN$1="@"; var HTTP_PROTOCOL="http://"; var HTTPS_PROTOCOL="https://"; var MAILTO_PROTOCOL="mailto:"; var PROTOCOLS=[HTTP_PROTOCOL,HTTPS_PROTOCOL,MAILTO_PROTOCOL]; var PROTOCOLS_LENGTH=PROTOCOLS.length; var alphabetical$2=index$26; var locate$6=tag$1; var tag$3=html.tag; var htmlInline=inlineHTML;inlineHTML.locator=locate$6;var EXPRESSION_HTML_LINK_OPEN=/^<a /i; var EXPRESSION_HTML_LINK_CLOSE=/^<\/a>/i; var link$1=locate$8; var whitespace$7=index$34; var locate$7=link$1; var link_1=link;link.locator=locate$7;var own$2={}.hasOwnProperty; var C_BACKSLASH$3="\\"; var C_BRACKET_OPEN$3="["; var C_BRACKET_CLOSE$3="]"; var C_PAREN_OPEN$2="("; var C_PAREN_CLOSE$3=")"; var C_LT$4="<"; var C_GT$3=">"; var C_TICK$2="`"; var C_DOUBLE_QUOTE$1='"'; var C_SINGLE_QUOTE$1="'"; var LINK_MARKERS={};LINK_MARKERS[C_DOUBLE_QUOTE$1]=C_DOUBLE_QUOTE$1,LINK_MARKERS[C_SINGLE_QUOTE$1]=C_SINGLE_QUOTE$1;var COMMONMARK_LINK_MARKERS={};COMMONMARK_LINK_MARKERS[C_DOUBLE_QUOTE$1]=C_DOUBLE_QUOTE$1,COMMONMARK_LINK_MARKERS[C_SINGLE_QUOTE$1]=C_SINGLE_QUOTE$1,COMMONMARK_LINK_MARKERS[C_PAREN_OPEN$2]=C_PAREN_CLOSE$3;var whitespace$8=index$34; var locate$9=link$1; var normalize$3=normalize_1; var reference_1=reference;reference.locator=locate$9;var T_LINK="link"; var T_IMAGE="image"; var T_FOOTNOTE="footnote"; var REFERENCE_TYPE_SHORTCUT="shortcut"; var REFERENCE_TYPE_COLLAPSED="collapsed"; var REFERENCE_TYPE_FULL="full"; var C_CARET$1="^"; var C_BACKSLASH$4="\\"; var C_BRACKET_OPEN$4="["; var C_BRACKET_CLOSE$4="]"; var strong$1=locate$11; var trim$6=index$40; var whitespace$9=index$34; var locate$10=strong$1; var strong_1=strong;strong.locator=locate$10;var C_ASTERISK$2="*"; var C_UNDERSCORE$2="_"; var index$44=wordCharacter; var fromCode$1=String.fromCharCode; var re$2=/\w/; var emphasis$1=locate$13; var trim$7=index$40; var word=index$44; var whitespace$10=index$34; var locate$12=emphasis$1; var emphasis_1=emphasis;emphasis.locator=locate$12;var C_ASTERISK$3="*"; var C_UNDERSCORE$3="_"; var _delete$2=locate$15; var whitespace$11=index$34; var locate$14=_delete$2; var _delete=strikethrough;strikethrough.locator=locate$14;var C_TILDE$1="~"; var DOUBLE="~~"; var codeInline$2=locate$17; var whitespace$12=index$34; var locate$16=codeInline$2; var codeInline=inlineCode;inlineCode.locator=locate$16;var C_TICK$3="`"; var _break$2=locate$19; var locate$18=_break$2; var _break=hardBreak;hardBreak.locator=locate$18;var MIN_BREAK_LENGTH=2; var text_1=text; var xtend$3=immutable; var toggle=index$8; var vfileLocation=index$10; var unescape=_unescape; var decode=decode$1; var tokenizer=tokenizer$1; var parser=Parser$1; var proto=Parser$1.prototype;proto.setOptions=setOptions_1,proto.parse=parse_1,proto.options=defaults$3,proto.exitStart=toggle("atStart",!0),proto.enterList=toggle("inList",!1),proto.enterLink=toggle("inLink",!1),proto.enterBlock=toggle("inBlock",!1),proto.interruptParagraph=[["thematicBreak"],["atxHeading"],["fencedCode"],["blockquote"],["html"],["setextHeading",{commonmark:!1}],["definition",{commonmark:!1}],["footnote",{commonmark:!1}]],proto.interruptList=[["fencedCode",{pedantic:!1}],["thematicBreak",{pedantic:!1}],["definition",{commonmark:!1}],["footnote",{commonmark:!1}]],proto.interruptBlockquote=[["indentedCode",{commonmark:!0}],["fencedCode",{commonmark:!0}],["atxHeading",{commonmark:!0}],["setextHeading",{commonmark:!0}],["thematicBreak",{commonmark:!0}],["html",{commonmark:!0}],["list",{commonmark:!0}],["definition",{commonmark:!1}],["footnote",{commonmark:!1}]],proto.blockTokenizers={newline:newline_1,indentedCode:codeIndented,fencedCode:codeFenced,blockquote:blockquote_1,atxHeading:headingAtx,thematicBreak:thematicBreak_1,list:list_1,setextHeading:headingSetext,html:htmlBlock,footnote:footnoteDefinition_1,definition:definition_1,table:table_1,paragraph:paragraph_1},proto.inlineTokenizers={escape:_escape,autoLink:autoLink_1,url:url_1,html:htmlInline,link:link_1,reference:reference_1,strong:strong_1,emphasis:emphasis_1,deletion:_delete,code:codeInline,break:_break,text:text_1},proto.blockMethods=keys(proto.blockTokenizers),proto.inlineMethods=keys(proto.inlineTokenizers),proto.tokenizeBlock=tokenizer("block"),proto.tokenizeInline=tokenizer("inline"),proto.tokenizeFactory=tokenizer;var unherit=index$6; var xtend$1=immutable; var Parser=parser; var index$4=parse$4;parse$4.Parser=Parser;var hasOwn=Object.prototype.hasOwnProperty; var toStr=Object.prototype.toString; var isArray=function(r){return"function"==typeof Array.isArray?Array.isArray(r):"[object Array]"===toStr.call(r)}; var isPlainObject=function(r){if(!r||"[object Object]"!==toStr.call(r))return!1;var e=hasOwn.call(r,"constructor"),t=r.constructor&&r.constructor.prototype&&hasOwn.call(r.constructor.prototype,"isPrototypeOf");if(r.constructor&&!e&&!t)return!1;var a;for(a in r);return void 0===a||hasOwn.call(r,a)}; var index$48=function r(){var e,t,a,o,n,i,s=arguments[0],c=1,l=arguments.length,u=!1;for("boolean"==typeof s&&(u=s,s=arguments[1]||{},c=2),(null==s||"object"!=typeof s&&"function"!=typeof s)&&(s={});c<l;++c)if(null!=(e=arguments[c]))for(t in e)a=s[t],s!==(o=e[t])&&(u&&o&&(isPlainObject(o)||(n=isArray(o)))?(n?(n=!1,i=a&&isArray(a)?a:[]):i=a&&isPlainObject(a)?a:{},s[t]=r(u,i,o)):void 0!==o&&(s[t]=o));return s}; var index$50=bail$1; var path$2=path$1; var index$54=replaceExt; var own$5={}.hasOwnProperty; var index_1$1=stringify$1; var index$57=function(r){return null!=r&&(isBuffer(r)||isSlowBuffer(r)||!!r._isBuffer)}; var path$1$1=path$1; var replace=index$54; var stringify=index_1$1; var buffer=index$57; var index$52=VFile; var own$4={}.hasOwnProperty; var proto$1=VFile.prototype;proto$1.toString=toString,proto$1.message=message,proto$1.info=info,proto$1.fail=fail,proto$1.warn=message;var order$1=["history","path","basename","stem","extname","dirname"];Object.defineProperty(proto$1,"path",{get:function(){return this.history[this.history.length-1]},set:function(r){assertNonEmpty(r,"path"),r!==this.path&&this.history.push(r);}}),Object.defineProperty(proto$1,"dirname",{get:function(){return"string"==typeof this.path?path$1$1.dirname(this.path):void 0},set:function(r){assertPath(this.path,"dirname"),this.path=path$1$1.join(r||"",this.basename);}}),Object.defineProperty(proto$1,"basename",{get:function(){return"string"==typeof this.path?path$1$1.basename(this.path):void 0},set:function(r){assertNonEmpty(r,"basename"),assertPart(r,"basename"),this.path=path$1$1.join(this.dirname||"",r);}}),Object.defineProperty(proto$1,"extname",{get:function(){return"string"==typeof this.path?path$1$1.extname(this.path):void 0},set:function(r){var e=r||"";if(assertPart(e,"extname"),assertPath(this.path,"extname"),e){if("."!==e.charAt(0))throw new Error("`extname` must start with `.`");if(-1!==e.indexOf(".",1))throw new Error("`extname` cannot contain multiple dots")}this.path=replace(this.path,e);}}),Object.defineProperty(proto$1,"stem",{get:function(){return"string"==typeof this.path?path$1$1.basename(this.path,this.extname):void 0},set:function(r){assertNonEmpty(r,"stem"),assertPart(r,"stem"),this.path=path$1$1.join(this.dirname||"",r+(this.extname||""));}}),VMessagePrototype.prototype=Error.prototype,VMessage.prototype=new VMessagePrototype,(proto$1=VMessage.prototype).file="",proto$1.name="",proto$1.reason="",proto$1.message="",proto$1.stack="",proto$1.fatal=null,proto$1.column=null,proto$1.line=null;var index$59=trough$1; var slice$1=[].slice; var toString$1=Object.prototype.toString; var index$61=isString; var index$63=function(r){return"[object Function]"===Object.prototype.toString.call(r)}; var toString$2=Object.prototype.toString; var index$65=function(r){var e;return"[object Object]"===toString$2.call(r)&&(null===(e=Object.getPrototypeOf(r))||e===Object.getPrototypeOf({}))}; var extend$1=index$48; var bail=index$50; var vfile=index$52; var trough=index$59; var string=index$61; var func=index$63; var plain=index$65; var index$46=unified$1().freeze(); var slice=[].slice; var own$3={}.hasOwnProperty; var pipeline=trough().use(pipelineParse).use(pipelineRun).use(pipelineStringify); var index$71=()=>{const r=["[\\u001B\\u009B][[\\]()#;?]*(?:(?:(?:[a-zA-Z\\d]*(?:;[a-zA-Z\\d]*)*)?\\u0007)","(?:(?:\\d{1,4}(?:;\\d{0,4})*)?[\\dA-PRZcf-ntqry=><~]))"].join("|");return new RegExp(r,"g")};const ansiRegex=index$71;var index$69=r=>"string"==typeof r?r.replace(ansiRegex(),""):r; var index$73=r=>{if(Number.isNaN(r))return!1;if(r>=4352&&(r<=4447||9001===r||9002===r||11904<=r&&r<=12871&&12351!==r||12880<=r&&r<=19903||19968<=r&&r<=42182||43360<=r&&r<=43388||44032<=r&&r<=55203||63744<=r&&r<=64255||65040<=r&&r<=65049||65072<=r&&r<=65131||65281<=r&&r<=65376||65504<=r&&r<=65510||110592<=r&&r<=110593||127488<=r&&r<=127569||131072<=r&&r<=262141))return!0;return!1};const stripAnsi=index$69; const isFullwidthCodePoint=index$73;var index$67=r=>{if("string"!=typeof r||0===r.length)return 0;r=stripAnsi(r);let e=0;for(let t=0;t<r.length;t++){const a=r.codePointAt(t);a<=31||a>=127&&a<=159||(a>=768&&a<=879||(a>65535&&t++,e+=isFullwidthCodePoint(a)?2:1));}return e}; var index$75=function(){return/\uD83C\uDFF4\uDB40\uDC67\uDB40\uDC62(?:\uDB40\uDC65\uDB40\uDC6E\uDB40\uDC67|\uDB40\uDC77\uDB40\uDC6C\uDB40\uDC73|\uDB40\uDC73\uDB40\uDC63\uDB40\uDC74)\uDB40\uDC7F|\uD83D\uDC69\u200D\uD83D\uDC69\u200D(?:\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67]))|\uD83D\uDC68(?:\u200D(?:\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D)?\uD83D\uDC68|(?:\uD83D[\uDC68\uDC69])\u200D(?:\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67]))|\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67])|[\u2695\u2696\u2708]\uFE0F|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92])|(?:\uD83C[\uDFFB-\uDFFF])\u200D[\u2695\u2696\u2708]\uFE0F|(?:\uD83C[\uDFFB-\uDFFF])\u200D(?:\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]))|\uD83D\uDC69\u200D(?:\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D(?:\uD83D[\uDC68\uDC69])|\uD83D[\uDC68\uDC69])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92])|\uD83D\uDC69\u200D\uD83D\uDC66\u200D\uD83D\uDC66|(?:\uD83D\uDC41\uFE0F\u200D\uD83D\uDDE8|\uD83D\uDC69(?:\uD83C[\uDFFB-\uDFFF])\u200D[\u2695\u2696\u2708]|(?:(?:\u26F9|\uD83C[\uDFCB\uDFCC]|\uD83D\uDD75)\uFE0F|\uD83D\uDC6F|\uD83E[\uDD3C\uDDDE\uDDDF])\u200D[\u2640\u2642]|(?:\u26F9|\uD83C[\uDFCB\uDFCC]|\uD83D\uDD75)(?:\uD83C[\uDFFB-\uDFFF])\u200D[\u2640\u2642]|(?:\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD37-\uDD39\uDD3D\uDD3E\uDDD6-\uDDDD])(?:(?:\uD83C[\uDFFB-\uDFFF])\u200D[\u2640\u2642]|\u200D[\u2640\u2642])|\uD83D\uDC69\u200D[\u2695\u2696\u2708])\uFE0F|\uD83D\uDC69\u200D\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67])|\uD83D\uDC69\u200D\uD83D\uDC69\u200D(?:\uD83D[\uDC66\uDC67])|\uD83D\uDC68(?:\u200D(?:(?:\uD83D[\uDC68\uDC69])\u200D(?:\uD83D[\uDC66\uDC67])|\uD83D[\uDC66\uDC67])|\uD83C[\uDFFB-\uDFFF])|\uD83C\uDFF3\uFE0F\u200D\uD83C\uDF08|\uD83D\uDC69\u200D\uD83D\uDC67|\uD83D\uDC69(?:\uD83C[\uDFFB-\uDFFF])\u200D(?:\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92])|\uD83D\uDC69\u200D\uD83D\uDC66|\uD83C\uDDF4\uD83C\uDDF2|\uD83C\uDDFD\uD83C\uDDF0|\uD83C\uDDF6\uD83C\uDDE6|\uD83D\uDC69(?:\uD83C[\uDFFB-\uDFFF])|\uD83C\uDDFC(?:\uD83C[\uDDEB\uDDF8])|\uD83C\uDDEB(?:\uD83C[\uDDEE-\uDDF0\uDDF2\uDDF4\uDDF7])|\uD83C\uDDE9(?:\uD83C[\uDDEA\uDDEC\uDDEF\uDDF0\uDDF2\uDDF4\uDDFF])|\uD83C\uDDE7(?:\uD83C[\uDDE6\uDDE7\uDDE9-\uDDEF\uDDF1-\uDDF4\uDDF6-\uDDF9\uDDFB\uDDFC\uDDFE\uDDFF])|\uD83C\uDDF1(?:\uD83C[\uDDE6-\uDDE8\uDDEE\uDDF0\uDDF7-\uDDFB\uDDFE])|\uD83C\uDDFE(?:\uD83C[\uDDEA\uDDF9])|\uD83C\uDDF9(?:\uD83C[\uDDE6\uDDE8\uDDE9\uDDEB-\uDDED\uDDEF-\uDDF4\uDDF7\uDDF9\uDDFB\uDDFC\uDDFF])|\uD83C\uDDF5(?:\uD83C[\uDDE6\uDDEA-\uDDED\uDDF0-\uDDF3\uDDF7-\uDDF9\uDDFC\uDDFE])|\uD83C\uDDEF(?:\uD83C[\uDDEA\uDDF2\uDDF4\uDDF5])|\uD83C\uDDED(?:\uD83C[\uDDF0\uDDF2\uDDF3\uDDF7\uDDF9\uDDFA])|\uD83C\uDDEE(?:\uD83C[\uDDE8-\uDDEA\uDDF1-\uDDF4\uDDF6-\uDDF9])|\uD83C\uDDFB(?:\uD83C[\uDDE6\uDDE8\uDDEA\uDDEC\uDDEE\uDDF3\uDDFA])|\uD83C\uDDEC(?:\uD83C[\uDDE6\uDDE7\uDDE9-\uDDEE\uDDF1-\uDDF3\uDDF5-\uDDFA\uDDFC\uDDFE])|\uD83C\uDDF7(?:\uD83C[\uDDEA\uDDF4\uDDF8\uDDFA\uDDFC])|\uD83C\uDDEA(?:\uD83C[\uDDE6\uDDE8\uDDEA\uDDEC\uDDED\uDDF7-\uDDFA])|\uD83C\uDDFA(?:\uD83C[\uDDE6\uDDEC\uDDF2\uDDF3\uDDF8\uDDFE\uDDFF])|\uD83C\uDDE8(?:\uD83C[\uDDE6\uDDE8\uDDE9\uDDEB-\uDDEE\uDDF0-\uDDF5\uDDF7\uDDFA-\uDDFF])|\uD83C\uDDE6(?:\uD83C[\uDDE8-\uDDEC\uDDEE\uDDF1\uDDF2\uDDF4\uDDF6-\uDDFA\uDDFC\uDDFD\uDDFF])|[#\*0-9]\uFE0F\u20E3|\uD83C\uDDF8(?:\uD83C[\uDDE6-\uDDEA\uDDEC-\uDDF4\uDDF7-\uDDF9\uDDFB\uDDFD-\uDDFF])|\uD83C\uDDFF(?:\uD83C[\uDDE6\uDDF2\uDDFC])|\uD83C\uDDF0(?:\uD83C[\uDDEA\uDDEC-\uDDEE\uDDF2\uDDF3\uDDF5\uDDF7\uDDFC\uDDFE\uDDFF])|\uD83C\uDDF3(?:\uD83C[\uDDE6\uDDE8\uDDEA-\uDDEC\uDDEE\uDDF1\uDDF4\uDDF5\uDDF7\uDDFA\uDDFF])|\uD83C\uDDF2(?:\uD83C[\uDDE6\uDDE8-\uDDED\uDDF0-\uDDFF])|(?:\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD37-\uDD39\uDD3D\uDD3E\uDDD6-\uDDDD])(?:\uD83C[\uDFFB-\uDFFF])|(?:\u26F9|\uD83C[\uDFCB\uDFCC]|\uD83D\uDD75)(?:\uD83C[\uDFFB-\uDFFF])|(?:[\u261D\u270A-\u270D]|\uD83C[\uDF85\uDFC2\uDFC7]|\uD83D[\uDC42\uDC43\uDC46-\uDC50\uDC66\uDC67\uDC70\uDC72\uDC74-\uDC76\uDC78\uDC7C\uDC83\uDC85\uDCAA\uDD74\uDD7A\uDD90\uDD95\uDD96\uDE4C\uDE4F\uDEC0\uDECC]|\uD83E[\uDD18-\uDD1C\uDD1E\uDD1F\uDD30-\uDD36\uDDD1-\uDDD5])(?:\uD83C[\uDFFB-\uDFFF])|(?:[\u261D\u26F9\u270A-\u270D]|\uD83C[\uDF85\uDFC2-\uDFC4\uDFC7\uDFCA-\uDFCC]|\uD83D[\uDC42\uDC43\uDC46-\uDC50\uDC66-\uDC69\uDC6E\uDC70-\uDC78\uDC7C\uDC81-\uDC83\uDC85-\uDC87\uDCAA\uDD74\uDD75\uDD7A\uDD90\uDD95\uDD96\uDE45-\uDE47\uDE4B-\uDE4F\uDEA3\uDEB4-\uDEB6\uDEC0\uDECC]|\uD83E[\uDD18-\uDD1C\uDD1E\uDD1F\uDD26\uDD30-\uDD39\uDD3D\uDD3E\uDDD1-\uDDDD])(?:\uD83C[\uDFFB-\uDFFF])?|(?:[\u231A\u231B\u23E9-\u23EC\u23F0\u23F3\u25FD\u25FE\u2614\u2615\u2648-\u2653\u267F\u2693\u26A1\u26AA\u26AB\u26BD\u26BE\u26C4\u26C5\u26CE\u26D4\u26EA\u26F2\u26F3\u26F5\u26FA\u26FD\u2705\u270A\u270B\u2728\u274C\u274E\u2753-\u2755\u2757\u2795-\u2797\u27B0\u27BF\u2B1B\u2B1C\u2B50\u2B55]|\uD83C[\uDC04\uDCCF\uDD8E\uDD91-\uDD9A\uDDE6-\uDDFF\uDE01\uDE1A\uDE2F\uDE32-\uDE36\uDE38-\uDE3A\uDE50\uDE51\uDF00-\uDF20\uDF2D-\uDF35\uDF37-\uDF7C\uDF7E-\uDF93\uDFA0-\uDFCA\uDFCF-\uDFD3\uDFE0-\uDFF0\uDFF4\uDFF8-\uDFFF]|\uD83D[\uDC00-\uDC3E\uDC40\uDC42-\uDCFC\uDCFF-\uDD3D\uDD4B-\uDD4E\uDD50-\uDD67\uDD7A\uDD95\uDD96\uDDA4\uDDFB-\uDE4F\uDE80-\uDEC5\uDECC\uDED0-\uDED2\uDEEB\uDEEC\uDEF4-\uDEF8]|\uD83E[\uDD10-\uDD3A\uDD3C-\uDD3E\uDD40-\uDD45\uDD47-\uDD4C\uDD50-\uDD6B\uDD80-\uDD97\uDDC0\uDDD0-\uDDE6])|(?:[#\*0-9\xA9\xAE\u203C\u2049\u2122\u2139\u2194-\u2199\u21A9\u21AA\u231A\u231B\u2328\u23CF\u23E9-\u23F3\u23F8-\u23FA\u24C2\u25AA\u25AB\u25B6\u25C0\u25FB-\u25FE\u2600-\u2604\u260E\u2611\u2614\u2615\u2618\u261D\u2620\u2622\u2623\u2626\u262A\u262E\u262F\u2638-\u263A\u2640\u2642\u2648-\u2653\u2660\u2663\u2665\u2666\u2668\u267B\u267F\u2692-\u2697\u2699\u269B\u269C\u26A0\u26A1\u26AA\u26AB\u26B0\u26B1\u26BD\u26BE\u26C4\u26C5\u26C8\u26CE\u26CF\u26D1\u26D3\u26D4\u26E9\u26EA\u26F0-\u26F5\u26F7-\u26FA\u26FD\u2702\u2705\u2708-\u270D\u270F\u2712\u2714\u2716\u271D\u2721\u2728\u2733\u2734\u2744\u2747\u274C\u274E\u2753-\u2755\u2757\u2763\u2764\u2795-\u2797\u27A1\u27B0\u27BF\u2934\u2935\u2B05-\u2B07\u2B1B\u2B1C\u2B50\u2B55\u3030\u303D\u3297\u3299]|\uD83C[\uDC04\uDCCF\uDD70\uDD71\uDD7E\uDD7F\uDD8E\uDD91-\uDD9A\uDDE6-\uDDFF\uDE01\uDE02\uDE1A\uDE2F\uDE32-\uDE3A\uDE50\uDE51\uDF00-\uDF21\uDF24-\uDF93\uDF96\uDF97\uDF99-\uDF9B\uDF9E-\uDFF0\uDFF3-\uDFF5\uDFF7-\uDFFF]|\uD83D[\uDC00-\uDCFD\uDCFF-\uDD3D\uDD49-\uDD4E\uDD50-\uDD67\uDD6F\uDD70\uDD73-\uDD7A\uDD87\uDD8A-\uDD8D\uDD90\uDD95\uDD96\uDDA4\uDDA5\uDDA8\uDDB1\uDDB2\uDDBC\uDDC2-\uDDC4\uDDD1-\uDDD3\uDDDC-\uDDDE\uDDE1\uDDE3\uDDE8\uDDEF\uDDF3\uDDFA-\uDE4F\uDE80-\uDEC5\uDECB-\uDED2\uDEE0-\uDEE5\uDEE9\uDEEB\uDEEC\uDEF0\uDEF3-\uDEF8]|\uD83E[\uDD10-\uDD3A\uDD3C-\uDD3E\uDD40-\uDD45\uDD47-\uDD4C\uDD50-\uDD6B\uDD80-\uDD97\uDDC0\uDDD0-\uDDE6])\uFE0F/g}; var matchOperatorsRe=/[|\\{}()[\]^$+*?.]/g; var index$77=function(r){if("string"!=typeof r)throw new TypeError("Expected a string");return r.replace(matchOperatorsRe,"\\$&")}; var punctuation_ranges=[[12288,12351],[44032,55215],[65040,65055],[65072,65135],[65280,65376],[65504,65519]]; var character_ranges=[[4352,4607],[11904,12255],[12352,12687],[12800,19903],[19968,40959],[43360,43391],[63744,64255]];!function(r){function e(){return create_regex(punctuation_ranges)}function t(){return create_regex(character_ranges)}r.punctuations=e,r.characters=t;}(get_regex||(get_regex={}));var index$79=get_regex;const stringWidth=index$67; const emojiRegex=index$75(); const escapeStringRegexp=index$77; const getCjkRegex=index$79; const cjkRegex=getCjkRegex(); const cjkPunctuationRegex=getCjkRegex.punctuations(); const skipWhitespace=skip(/\s/); const skipSpaces=skip(" \t"); const skipToLineEnd=skip(",; \t"); const skipEverythingButNewLine=skip(/[^\r\n]/); const PRECEDENCE={};[["|>"],["||","??"],["&&"],["|"],["^"],["&"],["==","===","!=","!=="],["<",">","<=",">=","in","instanceof"],[">>","<<",">>>"],["+","-"],["*","/","%"],["**"]].forEach((r,e)=>{r.forEach(r=>{PRECEDENCE[r]=e;});});const equalityOperators={"==":!0,"!=":!0,"===":!0,"!==":!0}; const multiplicativeOperators={"*":!0,"/":!0,"%":!0}; const bitshiftOperators={">>":!0,">>>":!0,"<<":!0};var util$2={getStringWidth:getStringWidth,splitText:splitText$1,mapDoc:mapDoc,getMaxContinuousCount:getMaxContinuousCount,getPrecedence:getPrecedence,shouldFlatten:shouldFlatten,isBitwiseOperator:isBitwiseOperator,isExportDeclaration:isExportDeclaration,getParentExportDeclaration:getParentExportDeclaration,getPenultimate:getPenultimate,getLast:getLast,getNextNonSpaceNonCommentCharacterIndex:getNextNonSpaceNonCommentCharacterIndex,getNextNonSpaceNonCommentCharacter:getNextNonSpaceNonCommentCharacter,skipWhitespace:skipWhitespace,skipSpaces:skipSpaces,skipNewline:skipNewline,isNextLineEmptyAfterIndex:isNextLineEmptyAfterIndex,isNextLineEmpty:isNextLineEmpty,isPreviousLineEmpty:isPreviousLineEmpty,hasNewline:hasNewline,hasNewlineInRange:hasNewlineInRange,hasSpaces:hasSpaces,locStart:locStart,locEnd:locEnd,setLocStart:setLocStart,setLocEnd:setLocEnd,startsWithNoLookaheadToken:startsWithNoLookaheadToken,hasBlockComments:hasBlockComments,isBlockComment:isBlockComment,hasClosureCompilerTypeCastComment:hasClosureCompilerTypeCastComment,getAlignmentSize:getAlignmentSize,getIndentSize:getIndentSize,printString:printString,printNumber:printNumber};const remarkFrontmatter=index; const remarkParse=index$4; const unified=index$46; const util$1$1=util$2;var parserMarkdown=parse;var parserMarkdown_1=parserMarkdown;

return parserMarkdown_1;

}(util,path));
